!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ALL	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    const ALL: Self;$/;"	C	interface:Bits
ActualNumValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    ActualNumValues,$/;"	e	enum:ContextKind
Alignment	/home/jcoombes/Src/chisel/src/opcodes.rs	/^pub enum Alignment {$/;"	g
AllArgsOverrideSelf	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    AllArgsOverrideSelf,$/;"	e	enum:AppSettings
AllowExternalSubcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    AllowExternalSubcommands,$/;"	e	enum:AppSettings
AllowHyphenValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    AllowHyphenValues,$/;"	e	enum:AppSettings
AllowHyphenValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    AllowHyphenValues,$/;"	e	enum:ArgSettings
AllowMissingPositional	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    AllowMissingPositional,$/;"	e	enum:AppSettings
AllowNegativeNumbers	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    AllowNegativeNumbers,$/;"	e	enum:AppSettings
AllowNegativeNumbers	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    AllowNegativeNumbers,$/;"	e	enum:ArgSettings
Always	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^    Always,$/;"	e	enum:ColorChoice
Always	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    Always,$/;"	e	enum:WriteStyle
Ansi256	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    Ansi256(u8),$/;"	e	enum:Color
AnsiDisplay	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^impl std::fmt::Display for AnsiDisplay<'_> {$/;"	c
AnsiDisplay	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^struct AnsiDisplay<'s> {$/;"	s
AnyPath	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    AnyPath,$/;"	e	enum:ValueHint
AnyValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^impl AnyValue {$/;"	c
AnyValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^impl std::fmt::Debug for AnyValue {$/;"	c
AnyValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^pub(crate) struct AnyValue {$/;"	s
AnyValueId	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^impl AnyValueId {$/;"	c
AnyValueId	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^impl Eq for AnyValueId {}$/;"	c
AnyValueId	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^impl Ord for AnyValueId {$/;"	c
AnyValueId	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^impl PartialEq for AnyValueId {$/;"	c
AnyValueId	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^impl PartialOrd for AnyValueId {$/;"	c
AnyValueId	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^impl std::fmt::Debug for AnyValueId {$/;"	c
AnyValueId	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^impl std::hash::Hash for AnyValueId {$/;"	c
AnyValueId	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^impl<'a, A: ?Sized + 'static> From<&'a A> for AnyValueId {$/;"	c
AnyValueId	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^pub struct AnyValueId {$/;"	s
AnyValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^trait AnyValueParser: Send + Sync + 'static {$/;"	i
AppFlags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^impl Default for AppFlags {$/;"	c
AppFlags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^pub(crate) struct AppFlags(Flags);$/;"	s
AppSettings	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^pub(crate) enum AppSettings {$/;"	g
Append	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    Append,$/;"	e	enum:ArgAction
Arc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl<T> Log for std::sync::Arc<T>$/;"	c
Arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^impl Arg {$/;"	c
Arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^impl Display for Arg {$/;"	c
Arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^impl Eq for Arg {}$/;"	c
Arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^impl From<&'_ Arg> for Arg {$/;"	c
Arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^impl Ord for Arg {$/;"	c
Arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^impl PartialEq for Arg {$/;"	c
Arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^impl PartialOrd for Arg {$/;"	c
Arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^impl fmt::Debug for Arg {$/;"	c
Arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^pub struct Arg {$/;"	s
Arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^    Arg(String, &'a str),$/;"	e	enum:Flag
ArgAction	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^impl ArgAction {$/;"	c
ArgAction	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^pub enum ArgAction {$/;"	g
ArgAction	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<ArgAction> for ArgAction {$/;"	c
ArgFlags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^impl Default for ArgFlags {$/;"	c
ArgFlags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^pub(crate) struct ArgFlags(Flags);$/;"	s
ArgGroup	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^impl ArgGroup {$/;"	c
ArgGroup	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^impl From<&'_ ArgGroup> for ArgGroup {$/;"	c
ArgGroup	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^pub struct ArgGroup {$/;"	s
ArgMatcher	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^impl ArgMatcher {$/;"	c
ArgMatcher	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^impl Deref for ArgMatcher {$/;"	c
ArgMatcher	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^pub(crate) struct ArgMatcher {$/;"	s
ArgMatches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl ArgMatches {$/;"	c
ArgMatches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct ArgMatches {$/;"	s
ArgPredicate	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_predicate.rs	/^impl<S: Into<OsStr>> From<S> for ArgPredicate {$/;"	c
ArgPredicate	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_predicate.rs	/^pub enum ArgPredicate {$/;"	g
ArgRequiredElseHelp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    ArgRequiredElseHelp,$/;"	e	enum:AppSettings
ArgSettings	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^pub(crate) enum ArgSettings {$/;"	g
ArgSortKey	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^type ArgSortKey = fn(arg: &Arg) -> (usize, String);$/;"	t
Args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^pub trait Args: FromArgMatches + Sized {$/;"	i
ArgsNegateSubcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    ArgsNegateSubcommands,$/;"	e	enum:AppSettings
ArgumentConflict	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    ArgumentConflict,$/;"	e	enum:ErrorKind
AsList	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    impl<S> value::Value for AsList<S>$/;"	c	module:sval_support
AsList	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    impl<T> Serialize for AsList<T>$/;"	c	module:serde_support
AsList	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<S> Source for AsList<S>$/;"	c
AsList	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<S> fmt::Debug for AsList<S>$/;"	c
AsList	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub struct AsList<S>(S);$/;"	s
AsMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    impl<S> value::Value for AsMap<S>$/;"	c	module:sval_support
AsMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    impl<T> Serialize for AsMap<T>$/;"	c	module:serde_support
AsMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<S> Source for AsMap<S>$/;"	c
AsMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<S> fmt::Debug for AsMap<S>$/;"	c
AsMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub struct AsMap<S>(S);$/;"	s
AtomicUsize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl AtomicUsize {$/;"	c
AtomicUsize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^struct AtomicUsize {$/;"	s
AtomicUsize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^unsafe impl Sync for AtomicUsize {}$/;"	c
AttachedValueNotConsumed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    AttachedValueNotConsumed,$/;"	e	enum:ParseResult
Auto	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^    Auto,$/;"	e	enum:ColorChoice
Auto	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    Auto,$/;"	e	enum:WriteStyle
AutoHelp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^impl<'cmd, 'writer> AutoHelp<'cmd, 'writer> {$/;"	c
AutoHelp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^pub(crate) struct AutoHelp<'cmd, 'writer> {$/;"	s
BTreeMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    impl<K, V> Source for BTreeMap<K, V>$/;"	c	module:std_support
Backtrace	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^impl Backtrace {$/;"	c
Backtrace	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^impl Display for Backtrace {$/;"	c
Backtrace	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^struct Backtrace(backtrace::Backtrace);$/;"	s
Backtrace	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^struct Backtrace;$/;"	s
Bar	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^            pub type Bar = i32;$/;"	t	module:tests::t1::foo
BinNameBuilt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    BinNameBuilt,$/;"	e	enum:AppSettings
BitFlags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^pub trait BitFlags: ImplementedByBitFlagsMacro {$/;"	i
Bits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    type Bits: Bits;$/;"	t	interface:BitFlags
Bits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^pub trait Bits:$/;"	i
Black	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    Black,$/;"	e	enum:Color
Blue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    Blue,$/;"	e	enum:Color
Bool	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    Bool,$/;"	e	enum:ValueParserInner
Bool	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    Bool(bool),$/;"	e	enum:ContextValue
BoolValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl BoolValueParser {$/;"	c
BoolValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl Default for BoolValueParser {$/;"	c
BoolValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl TypedValueParser for BoolValueParser {$/;"	c
BoolValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct BoolValueParser {}$/;"	s
BoolishValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl BoolishValueParser {$/;"	c
BoolishValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl Default for BoolishValueParser {$/;"	c
BoolishValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl TypedValueParser for BoolishValueParser {$/;"	c
BoolishValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct BoolishValueParser {}$/;"	s
Borrowed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Borrowed(&'a str),$/;"	e	enum:MaybeStaticStr
Box	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^impl<T: Args> Args for Box<T> {$/;"	c
Box	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^impl<T: CommandFactory> CommandFactory for Box<T> {$/;"	c
Box	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^impl<T: FromArgMatches> FromArgMatches for Box<T> {$/;"	c
Box	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^impl<T: Parser> Parser for Box<T> {$/;"	c
Box	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^impl<T: Subcommand> Subcommand for Box<T> {$/;"	c
Box	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    impl<'kvs, V> Visitor<'kvs> for Box<V>$/;"	c	module:std_support
Box	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    impl<S> Source for Box<S>$/;"	c	module:std_support
Box	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    impl<T> ToValue for Box<T>$/;"	c	module:std_support
Box	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl<T> Log for std::boxed::Box<T>$/;"	c
Boxed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    Boxed(std_support::BoxedError),$/;"	e	enum:Inner
BoxedError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    pub(super) type BoxedError = Box<dyn error::Error + Send + Sync>;$/;"	t	module:std_support
Buffer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^impl Buffer {$/;"	c
Buffer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^pub(in crate::fmt) struct Buffer {$/;"	s
Buffer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^impl Buffer {$/;"	c
Buffer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^pub(in crate::fmt) struct Buffer(Vec<u8>);$/;"	s
BufferWriter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^impl BufferWriter {$/;"	c
BufferWriter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^pub(in crate::fmt::writer) struct BufferWriter {$/;"	s
BufferWriter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^impl BufferWriter {$/;"	c
BufferWriter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^pub(in crate::fmt::writer) struct BufferWriter {$/;"	s
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^impl Builder {$/;"	c
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^impl Default for Builder {$/;"	c
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^impl fmt::Debug for Builder {$/;"	c
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^pub struct Builder {$/;"	s
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^impl Builder {$/;"	c
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^impl Default for Builder {$/;"	c
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^pub(crate) struct Builder {$/;"	s
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^impl Builder {$/;"	c
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^impl Default for Builder {$/;"	c
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^pub(crate) struct Builder {$/;"	s
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    impl fmt::Debug for Builder {$/;"	c	module:std_fmt_impls
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^impl Builder {$/;"	c
Builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub struct Builder {$/;"	s
Built	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    Built,$/;"	e	enum:AppSettings
COLON_SPACE	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^            const COLON_SPACE: usize = ": ".len();$/;"	C	method:HelpTemplate::help
COMPLEMENT	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        const COMPLEMENT: Flags = Flags::C.complement();$/;"	C	function:tests::test_set_ops_const
Captures	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^pub(crate) trait Captures<'a> {}$/;"	i
Center	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    Center,$/;"	e	enum:Alignment
Char	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    Char(char),$/;"	e	enum:OpCode
Child	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^impl<T> Child<T> {$/;"	c
Child	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^struct Child<T> {$/;"	s
ChildGraph	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^impl<T> ChildGraph<T>$/;"	c
ChildGraph	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^pub(crate) struct ChildGraph<T>(Vec<Child<T>>);$/;"	s
Color	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^impl Color {$/;"	c
Color	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^pub enum Color {$/;"	g
ColorAlways	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    ColorAlways,$/;"	e	enum:AppSettings
ColorAuto	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    ColorAuto,$/;"	e	enum:AppSettings
ColorChoice	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^impl Default for ColorChoice {$/;"	c
ColorChoice	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^impl ValueEnum for ColorChoice {$/;"	c
ColorChoice	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^impl std::fmt::Display for ColorChoice {$/;"	c
ColorChoice	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^impl std::str::FromStr for ColorChoice {$/;"	c
ColorChoice	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^pub enum ColorChoice {$/;"	g
ColorNever	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    ColorNever,$/;"	e	enum:AppSettings
Colorizer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^impl Colorizer {$/;"	c
Colorizer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^impl std::fmt::Display for Colorizer {$/;"	c
Colorizer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^pub(crate) struct Colorizer {$/;"	s
Command	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^impl Command {$/;"	c
Command	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^impl Default for Command {$/;"	c
Command	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^impl From<&'_ Command> for Command {$/;"	c
Command	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^impl Index<&'_ Id> for Command {$/;"	c
Command	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^impl fmt::Display for Command {$/;"	c
Command	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^pub struct Command {$/;"	s
Command	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^    Command(String, &'a str),$/;"	e	enum:Flag
CommandFactory	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^pub trait CommandFactory: Sized {$/;"	i
CommandLine	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/value_source.rs	/^    CommandLine,$/;"	e	enum:ValueSource
CommandName	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    CommandName,$/;"	e	enum:ValueHint
CommandString	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    CommandString,$/;"	e	enum:ValueHint
CommandWithArguments	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    CommandWithArguments,$/;"	e	enum:ValueHint
Conflicts	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^impl Conflicts {$/;"	c
Conflicts	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^struct Conflicts {$/;"	s
ContextKind	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^impl ContextKind {$/;"	c
ContextKind	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^impl std::fmt::Display for ContextKind {$/;"	c
ContextKind	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^pub enum ContextKind {$/;"	g
ContextValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^impl std::fmt::Display for ContextValue {$/;"	c
ContextValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^pub enum ContextValue {$/;"	g
Count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    Count,$/;"	e	enum:ArgAction
Count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    impl<'kvs> Visitor<'kvs> for Count {$/;"	c	function:count_default
Count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    struct Count(usize);$/;"	s	function:count_default
CountType	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^pub(crate) type CountType = u8;$/;"	t
Cow	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    impl<'a> ToKey for Cow<'a, str> {$/;"	c	module:std_support
Cow	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    impl<'v> ToValue for Cow<'v, str> {$/;"	c	module:std_support
Custom	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    Custom,$/;"	e	enum:ContextKind
Cyan	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    Cyan,$/;"	e	enum:Color
DASH_SPACE	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^            const DASH_SPACE: usize = "- ".len();$/;"	C	method:HelpTemplate::help
DEFAULT	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^            static DEFAULT: super::ValueParser = super::ValueParser::string();$/;"	v	method:Arg::get_value_parser
DEFAULT	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^        const DEFAULT: super::ArgAction = super::ArgAction::Set;$/;"	C	method:Arg::get_action
DEFAULT	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^            static DEFAULT: super::ValueParser = super::ValueParser::os_string();$/;"	v	method:Command::get_external_subcommand_value_parser
DEFAULT	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^        static DEFAULT: StyledStr = StyledStr::new();$/;"	v	method:StyledStr::default
DEFAULT_FILTER_ENV	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub const DEFAULT_FILTER_ENV: &str = "RUST_LOG";$/;"	C
DEFAULT_NO_ARGS_TEMPLATE	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^const DEFAULT_NO_ARGS_TEMPLATE: &str = "\\$/;"	C
DEFAULT_SUB_VALUE_NAME	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^static DEFAULT_SUB_VALUE_NAME: &str = "COMMAND";$/;"	v
DEFAULT_TEMPLATE	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^const DEFAULT_TEMPLATE: &str = "\\$/;"	C
DEFAULT_WRITE_STYLE_ENV	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub const DEFAULT_WRITE_STYLE_ENV: &str = "RUST_LOG_STYLE";$/;"	C
DIFFERENCE	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        const DIFFERENCE: Flags = Flags::all().difference(Flags::A);$/;"	C	function:tests::test_set_ops_const
Debug	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl ToValue for dyn fmt::Debug {$/;"	c
Debug	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Debug,$/;"	e	enum:Level
Debug	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Debug,$/;"	e	enum:LevelFilter
DebugList	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<'a, 'b: 'a, 'kvs> Visitor<'kvs> for fmt::DebugList<'a, 'b> {$/;"	c
DebugMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<'a, 'b: 'a, 'kvs> Visitor<'kvs> for fmt::DebugMap<'a, 'b> {$/;"	c
DebugSet	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<'a, 'b: 'a, 'kvs> Visitor<'kvs> for fmt::DebugSet<'a, 'b> {$/;"	c
DebugTuple	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<'a, 'b: 'a, 'kvs> Visitor<'kvs> for fmt::DebugTuple<'a, 'b> {$/;"	c
DefaultFormat	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^impl<'a> DefaultFormat<'a> {$/;"	c
DefaultFormat	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^struct DefaultFormat<'a> {$/;"	s
DefaultValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/value_source.rs	/^    DefaultValue,$/;"	e	enum:ValueSource
DirPath	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    DirPath,$/;"	e	enum:ValueHint
Directive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^struct Directive {$/;"	s
DisableColoredHelp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    DisableColoredHelp,$/;"	e	enum:AppSettings
DisableHelpFlag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    DisableHelpFlag,$/;"	e	enum:AppSettings
DisableHelpSubcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    DisableHelpSubcommand,$/;"	e	enum:AppSettings
DisableVersionFlag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    DisableVersionFlag,$/;"	e	enum:AppSettings
Display	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl ToValue for dyn fmt::Display {$/;"	c
DisplayHelp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    DisplayHelp,$/;"	e	enum:ErrorKind
DisplayHelpOnMissingArgumentOrSubcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    DisplayHelpOnMissingArgumentOrSubcommand,$/;"	e	enum:ErrorKind
DisplayVersion	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    DisplayVersion,$/;"	e	enum:ErrorKind
DontDelimitTrailingValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    DontDelimitTrailingValues,$/;"	e	enum:AppSettings
Downcast	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/error.rs	/^    Downcast {$/;"	e	enum:MatchesError
EMPTY	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    const EMPTY: Self;$/;"	C	interface:Bits
EMPTY	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub const EMPTY: Self = Self {$/;"	C	implementation:ValueRange
EMPTY	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^        static EMPTY: [Vec<AnyValue>; 0] = [];$/;"	v	method:GroupedValues::default
EMPTY	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^        static EMPTY: [Vec<AnyValue>; 0] = [];$/;"	v	method:OccurrencesRef::default
EMPTY	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^        static EMPTY: [Vec<AnyValue>; 0] = [];$/;"	v	method:ValuesRef::default
EMPTY	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^        static EMPTY: [Vec<OsString>; 0] = [];$/;"	v	method:RawOccurrences::default
EMPTY	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^        static EMPTY: [Vec<OsString>; 0] = [];$/;"	v	method:RawValues::default
EMPTY	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^        static EMPTY: [usize; 0] = [];$/;"	v	method:Indices::default
EXTERNAL	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    pub(crate) const EXTERNAL: &'static str = "";$/;"	C	implementation:Id
EmailAddress	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    EmailAddress,$/;"	e	enum:ValueHint
EmptyFlag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^    EmptyFlag,$/;"	e	enum:ParseErrorKind
Entry	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^impl<'a, K: 'a, V: 'a> Entry<'a, K, V> {$/;"	c
Entry	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^pub enum Entry<'a, K: 'a, V: 'a> {$/;"	g
EnumValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<E: crate::ValueEnum + Clone + Send + Sync + 'static> Default for EnumValueParser<E> {$/;"	c
EnumValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<E: crate::ValueEnum + Clone + Send + Sync + 'static> EnumValueParser<E> {$/;"	c
EnumValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<E: crate::ValueEnum + Clone + Send + Sync + 'static> TypedValueParser for EnumValueParser<E/;"	c
EnumValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct EnumValueParser<E: crate::ValueEnum + Clone + Send + Sync + 'static>($/;"	s
Env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^impl<'a, T> From<T> for Env<'a>$/;"	c
Env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^impl<'a> Default for Env<'a> {$/;"	c
Env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^impl<'a> Env<'a> {$/;"	c
Env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub struct Env<'a> {$/;"	s
EnvVariable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/value_source.rs	/^    EnvVariable,$/;"	e	enum:ValueSource
Equals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_predicate.rs	/^    Equals(OsStr),$/;"	e	enum:ArgPredicate
EqualsNotProvided	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    EqualsNotProvided {$/;"	e	enum:ParseResult
Err	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        type Err = crate::parser::ParseError;$/;"	t	implementation:tests::FmtFlags
Err	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    type Err = String;$/;"	t	implementation:ValueHint
Err	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^    type Err = String;$/;"	t	implementation:ColorChoice
Err	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    type Err = ParseLevelError;$/;"	t	implementation:Level
Err	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    type Err = ParseLevelError;$/;"	t	implementation:LevelFilter
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    Error,$/;"	e	enum:Style
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^impl<F: ErrorFormatter> Display for Error<F> {$/;"	c
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^impl<F: ErrorFormatter> Error<F> {$/;"	c
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^impl<F: ErrorFormatter> From<fmt::Error> for Error<F> {$/;"	c
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^impl<F: ErrorFormatter> From<io::Error> for Error<F> {$/;"	c
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^impl<F: ErrorFormatter> error::Error for Error<F> {$/;"	c
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^impl<F: ErrorFormatter> std::fmt::Debug for Error<F> {$/;"	c
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^pub struct Error<F: ErrorFormatter = DefaultFormatter> {$/;"	s
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^pub type Error = crate::error::Error<crate::error::DefaultFormatter>;$/;"	t
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    impl Error {$/;"	c	module:std_support
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    impl From<io::Error> for Error {$/;"	c	module:std_support
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    impl error::Error for Error {}$/;"	c	module:std_support
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^impl Error {$/;"	c
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^impl From<fmt::Error> for Error {$/;"	c
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^pub struct Error {$/;"	s
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Error = 1,$/;"	e	enum:Level
Error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Error,$/;"	e	enum:LevelFilter
ErrorFormatter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^pub trait ErrorFormatter: Sized {$/;"	i
ErrorInner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^struct ErrorInner {$/;"	s
ErrorKind	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^impl ErrorKind {$/;"	c
ErrorKind	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^impl std::fmt::Display for ErrorKind {$/;"	c
ErrorKind	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^pub enum ErrorKind {$/;"	g
Exclusive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    Exclusive,$/;"	e	enum:ArgSettings
ExecutablePath	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    ExecutablePath,$/;"	e	enum:ValueHint
ExpectedNumValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    ExpectedNumValues,$/;"	e	enum:ContextKind
Extract	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        impl<'v> Visit<'v> for Extract {$/;"	c	function:tests::test_visit_integer
Extract	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        impl<'v> Visit<'v> for Extract<'v> {$/;"	c	function:tests::test_visit_borrowed_str
Extract	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        struct Extract(Option<u64>);$/;"	s	function:tests::test_visit_integer
Extract	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        struct Extract<'v>(Option<&'v str>);$/;"	s	function:tests::test_visit_borrowed_str
F	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<F, T, E> TypedValueParser for F$/;"	c
FALSE_LITERALS	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/str_to_bool.rs	/^pub(crate) const FALSE_LITERALS: [&str; 6] = ["n", "no", "f", "false", "off", "0"];$/;"	C
FalseyValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl Default for FalseyValueParser {$/;"	c
FalseyValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl FalseyValueParser {$/;"	c
FalseyValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl TypedValueParser for FalseyValueParser {$/;"	c
FalseyValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct FalseyValueParser {}$/;"	s
FilePath	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    FilePath,$/;"	e	enum:ValueHint
Filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^impl Filter {$/;"	c
Filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^impl fmt::Debug for Filter {$/;"	c
Filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^pub struct Filter {$/;"	s
Filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/regex.rs	/^impl Filter {$/;"	c
Filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/regex.rs	/^impl fmt::Display for Filter {$/;"	c
Filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/regex.rs	/^pub struct Filter {$/;"	s
Filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/string.rs	/^impl Filter {$/;"	c
Filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/string.rs	/^impl fmt::Display for Filter {$/;"	c
Filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/string.rs	/^pub struct Filter {$/;"	s
FixedWidthText	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    FixedWidthText(String, usize),$/;"	e	enum:OpCode
Flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^enum Flag<'a> {$/;"	g
Flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^impl Ord for Flag<'_> {$/;"	c
Flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^impl PartialEq for Flag<'_> {$/;"	c
Flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^impl PartialOrd for Flag<'_> {$/;"	c
FlagSubCommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    FlagSubCommand(String),$/;"	e	enum:ParseResult
FlagsVisitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external/serde_support.rs	/^        impl<'de, T: str::FromStr> Visitor<'de> for FlagsVisitor<T>$/;"	c	function:deserialize_bits_default
FlagsVisitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external/serde_support.rs	/^        struct FlagsVisitor<T>(core::marker::PhantomData<T>);$/;"	s	function:deserialize_bits_default
FlatMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^impl<K: PartialEq + Eq, V> Default for FlatMap<K, V> {$/;"	c
FlatMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^impl<K: PartialEq + Eq, V> FlatMap<K, V> {$/;"	c
FlatMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^pub(crate) struct FlatMap<K, V> {$/;"	s
FlatSet	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^impl<'s, T: PartialEq + Eq> IntoIterator for &'s FlatSet<T> {$/;"	c
FlatSet	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^impl<T: PartialEq + Eq> Default for FlatSet<T> {$/;"	c
FlatSet	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^impl<T: PartialEq + Eq> Extend<T> for FlatSet<T> {$/;"	c
FlatSet	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^impl<T: PartialEq + Eq> FlatSet<T> {$/;"	c
FlatSet	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^impl<T: PartialEq + Eq> FromIterator<T> for FlatSet<T> {$/;"	c
FlatSet	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^impl<T: PartialEq + Eq> IntoIterator for FlatSet<T> {$/;"	c
FlatSet	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^pub(crate) struct FlatSet<T> {$/;"	s
Fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    Fmt,$/;"	e	enum:Inner
FmtFlags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    impl fmt::Display for FmtFlags {$/;"	c	module:tests
FmtFlags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    impl str::FromStr for FmtFlags {$/;"	c	module:tests
Foo	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        struct Foo(u64);$/;"	s	function:tests::test_downcast_ref
Format	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    Format,$/;"	e	enum:ErrorKind
FormatFn	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^pub(crate) type FormatFn = Box<dyn Fn(&mut Formatter, &Record) -> io::Result<()> + Sync + Send>;$/;"	t
Formatted	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    Formatted(StyledStr),$/;"	e	enum:Message
Formatter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^impl Formatter {$/;"	c
Formatter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^impl Formatter {$/;"	c
Formatter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^impl Write for Formatter {$/;"	c
Formatter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^impl fmt::Debug for Formatter {$/;"	c
Formatter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^pub struct Formatter {$/;"	s
Formatter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^impl Formatter {$/;"	c
FromArgMatches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^pub trait FromArgMatches: Sized {$/;"	i
Get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    impl<'k, 'kvs> Visitor<'kvs> for Get<'k, 'kvs> {$/;"	c	function:get_default
Get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    struct Get<'k, 'v> {$/;"	s	function:get_default
Global	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    Global,$/;"	e	enum:ArgSettings
Good	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    Good,$/;"	e	enum:Style
Green	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    Green,$/;"	e	enum:Color
GroupedValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> Default for GroupedValues<'a> {$/;"	c
GroupedValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> DoubleEndedIterator for GroupedValues<'a> {$/;"	c
GroupedValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> ExactSizeIterator for GroupedValues<'a> {}$/;"	c
GroupedValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> Iterator for GroupedValues<'a> {$/;"	c
GroupedValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct GroupedValues<'a> {$/;"	s
HELP	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    pub(crate) const HELP: &'static str = "help";$/;"	C	implementation:Id
HashMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    impl<K, V, S> Source for HashMap<K, V, S>$/;"	c	module:std_support
Header	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    Header,$/;"	e	enum:Style
Help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    Help,$/;"	e	enum:ArgAction
HelpExpected	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    HelpExpected,$/;"	e	enum:AppSettings
HelpTemplate	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^impl<'cmd, 'writer> HelpTemplate<'cmd, 'writer> {$/;"	c
HelpTemplate	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^pub(crate) struct HelpTemplate<'cmd, 'writer> {$/;"	s
Hidden	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    Hidden,$/;"	e	enum:AppSettings
Hidden	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    Hidden,$/;"	e	enum:ArgSettings
HiddenLongHelp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    HiddenLongHelp,$/;"	e	enum:ArgSettings
HiddenShortHelp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    HiddenShortHelp,$/;"	e	enum:ArgSettings
HideDefaultValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    HideDefaultValue,$/;"	e	enum:ArgSettings
HideEnv	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    HideEnv,$/;"	e	enum:ArgSettings
HideEnvValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    HideEnvValues,$/;"	e	enum:ArgSettings
HidePossibleValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    HidePossibleValues,$/;"	e	enum:AppSettings
HidePossibleValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    HidePossibleValues,$/;"	e	enum:ArgSettings
Hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    Hint,$/;"	e	enum:Style
Hostname	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    Hostname,$/;"	e	enum:ValueHint
I	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl<I: Into<OsStr>> IntoResettable<OsStr> for I {$/;"	c
I	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl<I: Into<Str>> IntoResettable<Str> for I {$/;"	c
I	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl<I: Into<String>> IntoResettable<String> for I {$/;"	c
I	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl<I: Into<StyledStr>> IntoResettable<StyledStr> for I {$/;"	c
I	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl<I: Into<ValueParser>> IntoResettable<ValueParser> for I {$/;"	c
I	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl<I: Into<ValueRange>> IntoResettable<ValueRange> for I {$/;"	c
I	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl<I: Into<crate::Id>> IntoResettable<crate::Id> for I {$/;"	c
INITIALIZED	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^const INITIALIZED: usize = 2;$/;"	C
INITIALIZING	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^const INITIALIZING: usize = 1;$/;"	C
INTERNAL_ERROR_MSG	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^const INTERNAL_ERROR_MSG: &str = "Fatal internal error. Please consider filing a bug \\$/;"	C
INTERSECT	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        const INTERSECT: Flags = Flags::all().intersection(Flags::C);$/;"	C	function:tests::test_set_ops_const
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl AsRef<str> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl From<&'_ &'static str> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl From<&'_ Id> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl From<&'_ Str> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl From<&'_ std::string::String> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl From<&'static str> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl From<Str> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl From<std::string::String> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl PartialEq<&'_ str> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl PartialEq<Str> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl PartialEq<std::string::String> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl PartialEq<str> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl std::borrow::Borrow<str> for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl std::fmt::Debug for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl std::fmt::Display for Id {$/;"	c
Id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^pub struct Id(Str);$/;"	s
Identifier	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^pub(crate) enum Identifier {$/;"	g
IdsRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> DoubleEndedIterator for IdsRef<'a> {$/;"	c
IdsRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> ExactSizeIterator for IdsRef<'a> {}$/;"	c
IdsRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> Iterator for IdsRef<'a> {$/;"	c
IdsRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct IdsRef<'a> {$/;"	s
IgnoreCase	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    IgnoreCase,$/;"	e	enum:ArgSettings
IgnoreErrors	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    IgnoreErrors,$/;"	e	enum:AppSettings
ImplementedByBitFlagsMacro	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^pub trait ImplementedByBitFlagsMacro {}$/;"	i
IndentWrapper	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^                impl<'a, 'b> Write for IndentWrapper<'a, 'b> {$/;"	c	method:DefaultFormat::write_args
IndentWrapper	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^                struct IndentWrapper<'a, 'b: 'a> {$/;"	s	method:DefaultFormat::write_args
Index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    Index,$/;"	e	enum:Identifier
Indices	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> Default for Indices<'a> {$/;"	c
Indices	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> DoubleEndedIterator for Indices<'a> {$/;"	c
Indices	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> ExactSizeIterator for Indices<'a> {}$/;"	c
Indices	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> Iterator for Indices<'a> {$/;"	c
Indices	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct Indices<'a> {$/;"	s
InferLongArgs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    InferLongArgs,$/;"	e	enum:AppSettings
InferSubcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    InferSubcommands,$/;"	e	enum:AppSettings
Info	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Info,$/;"	e	enum:Level
Info	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Info,$/;"	e	enum:LevelFilter
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    impl Inner {$/;"	c	module:inner
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    pub(crate) enum Inner {$/;"	g	module:inner
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    pub(crate) struct Inner(&'static std::ffi::OsStr);$/;"	s	module:inner
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl Default for Inner {$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl Eq for Inner {}$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl Ord for Inner {$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialEq for Inner {$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialOrd for Inner {$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl std::hash::Hash for Inner {$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    impl Inner {$/;"	c	module:inner
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    pub(crate) enum Inner {$/;"	g	module:inner
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    pub(crate) struct Inner(pub(crate) &'static str);$/;"	s	module:inner
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl Default for Inner {$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl Eq for Inner {}$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl Ord for Inner {$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialEq for Inner {$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialOrd for Inner {$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl std::hash::Hash for Inner {$/;"	c
Inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^enum Inner {$/;"	g
Internal	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    type Internal;$/;"	t	interface:PublicFlags
IntoIter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    type IntoIter = std::slice::Iter<'s, T>;$/;"	t	implementation:FlatSet
IntoIter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    type IntoIter = std::vec::IntoIter<T>;$/;"	t	implementation:FlatSet
IntoResettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^pub trait IntoResettable<T> {$/;"	i
InvalidArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    InvalidArg,$/;"	e	enum:ContextKind
InvalidHexFlag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^    InvalidHexFlag {$/;"	e	enum:ParseErrorKind
InvalidNamedFlag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^    InvalidNamedFlag {$/;"	e	enum:ParseErrorKind
InvalidSubcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    InvalidSubcommand,$/;"	e	enum:ContextKind
InvalidSubcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    InvalidSubcommand,$/;"	e	enum:ErrorKind
InvalidUtf8	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    InvalidUtf8,$/;"	e	enum:ErrorKind
InvalidValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    InvalidValue,$/;"	e	enum:ContextKind
InvalidValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    InvalidValue,$/;"	e	enum:ErrorKind
Io	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    Io,$/;"	e	enum:ErrorKind
IsPresent	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_predicate.rs	/^    IsPresent,$/;"	e	enum:ArgPredicate
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = &'a Id;$/;"	t	implementation:IdsRef
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = &'a OsStr;$/;"	t
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = &'a OsStr;$/;"	t	implementation:RawValues
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = &'a T;$/;"	t
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = &'a T;$/;"	t	implementation:ValuesRef
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = OccurrenceValues<T>;$/;"	t	implementation:Occurrences
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = OccurrenceValuesRef<'a, T>;$/;"	t
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = RawOccurrenceValues<'a>;$/;"	t	implementation:RawOccurrences
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = T;$/;"	t	implementation:OccurrenceValues
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = T;$/;"	t	implementation:Values
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = Vec<&'a str>;$/;"	t	implementation:GroupedValues
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    type Item = usize;$/;"	t	implementation:Indices
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    type Item = (&'a K, &'a V);$/;"	t	implementation:Iter
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    type Item = (&'a K, &'a mut V);$/;"	t	implementation:IterMut
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    type Item = &'s T;$/;"	t	implementation:FlatSet
Item	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    type Item = T;$/;"	t	implementation:FlatSet
Iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    type Iter: Iterator<Item = Self>;$/;"	t	interface:BitFlags
Iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^impl<'a, K, V> DoubleEndedIterator for Iter<'a, K, V> {$/;"	c
Iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^impl<'a, K, V> ExactSizeIterator for Iter<'a, K, V> {}$/;"	c
Iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^impl<'a, K, V> Iterator for Iter<'a, K, V> {$/;"	c
Iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^pub struct Iter<'a, K: 'a, V: 'a> {$/;"	s
IterMut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^impl<'a, K, V> DoubleEndedIterator for IterMut<'a, K, V> {$/;"	c
IterMut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^impl<'a, K, V> ExactSizeIterator for IterMut<'a, K, V> {}$/;"	c
IterMut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^impl<'a, K, V> Iterator for IterMut<'a, K, V> {$/;"	c
IterMut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^pub struct IterMut<'a, K: 'a, V: 'a> {$/;"	s
IterNames	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    type IterNames: Iterator<Item = (&'static str, Self)>;$/;"	t	interface:BitFlags
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^pub(crate) struct Key {$/;"	s
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    impl<'a> Serialize for Key<'a> {$/;"	c	module:serde_support
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    impl<'a> Value for Key<'a> {$/;"	c	module:sval_support
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k, 'ko> PartialEq<Key<'ko>> for Key<'k> {$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k, 'ko> PartialOrd<Key<'ko>> for Key<'k> {$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k> AsRef<str> for Key<'k> {$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k> Borrow<str> for Key<'k> {$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k> Eq for Key<'k> {}$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k> From<&'k str> for Key<'k> {$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k> Key<'k> {$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k> Ord for Key<'k> {$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k> ToKey for Key<'k> {$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k> fmt::Debug for Key<'k> {$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k> fmt::Display for Key<'k> {$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'k> hash::Hash for Key<'k> {$/;"	c
Key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^pub struct Key<'k> {$/;"	s
KeyType	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^impl KeyType {$/;"	c
KeyType	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^impl PartialEq<&str> for KeyType {$/;"	c
KeyType	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^impl PartialEq<OsStr> for KeyType {$/;"	c
KeyType	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^impl PartialEq<char> for KeyType {$/;"	c
KeyType	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^impl PartialEq<str> for KeyType {$/;"	c
KeyType	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^impl PartialEq<usize> for KeyType {$/;"	c
KeyType	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^pub(crate) enum KeyType {$/;"	g
KeyValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl<'a> fmt::Debug for KeyValues<'a> {$/;"	c
KeyValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^struct KeyValues<'a>(&'a dyn kv::Source);$/;"	s
KindFormatter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^impl ErrorFormatter for KindFormatter {$/;"	c
KindFormatter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^pub struct KindFormatter;$/;"	s
LEVEL_PARSE_ERROR	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static LEVEL_PARSE_ERROR: &str =$/;"	v
LOGGER	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static mut LOGGER: &dyn Log = &NopLogger;$/;"	v
LOG_LEVEL_NAMES	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static LOG_LEVEL_NAMES: [&str; 6] = ["OFF", "ERROR", "WARN", "INFO", "DEBUG", "TRACE"];$/;"	v
Last	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    Last,$/;"	e	enum:ArgSettings
Left	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    Left,$/;"	e	enum:Alignment
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl Clone for Level {$/;"	c
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl FromStr for Level {$/;"	c
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl Level {$/;"	c
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl Ord for Level {$/;"	c
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl PartialEq for Level {$/;"	c
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl PartialEq<LevelFilter> for Level {$/;"	c
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl PartialOrd for Level {$/;"	c
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl PartialOrd<LevelFilter> for Level {$/;"	c
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl fmt::Display for Level {$/;"	c
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub enum Level {$/;"	g
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^impl Serialize for Level {$/;"	c
Level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^impl<'de> Deserialize<'de> for Level {$/;"	c
LevelEnum	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        impl<'de> Visitor<'de> for LevelEnum {$/;"	c	method:Level::deserialize
LevelEnum	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        struct LevelEnum;$/;"	s	method:Level::deserialize
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl Clone for LevelFilter {$/;"	c
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl FromStr for LevelFilter {$/;"	c
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl LevelFilter {$/;"	c
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl Ord for LevelFilter {$/;"	c
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl PartialEq for LevelFilter {$/;"	c
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl PartialEq<Level> for LevelFilter {$/;"	c
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl PartialOrd for LevelFilter {$/;"	c
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl PartialOrd<Level> for LevelFilter {$/;"	c
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl fmt::Display for LevelFilter {$/;"	c
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub enum LevelFilter {$/;"	g
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^impl Serialize for LevelFilter {$/;"	c
LevelFilter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^impl<'de> Deserialize<'de> for LevelFilter {$/;"	c
LevelFilterEnum	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        impl<'de> Visitor<'de> for LevelFilterEnum {$/;"	c	method:LevelFilter::deserialize
LevelFilterEnum	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        struct LevelFilterEnum;$/;"	s	method:LevelFilter::deserialize
LevelFilterIdentifier	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        impl<'de> DeserializeSeed<'de> for LevelFilterIdentifier {$/;"	c	method:LevelFilter::deserialize
LevelFilterIdentifier	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        impl<'de> Visitor<'de> for LevelFilterIdentifier {$/;"	c	method:LevelFilter::deserialize
LevelFilterIdentifier	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        struct LevelFilterIdentifier;$/;"	s	method:LevelFilter::deserialize
LevelIdentifier	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        impl<'de> DeserializeSeed<'de> for LevelIdentifier {$/;"	c	method:Level::deserialize
LevelIdentifier	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        impl<'de> Visitor<'de> for LevelIdentifier {$/;"	c	method:Level::deserialize
LevelIdentifier	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        struct LevelIdentifier;$/;"	s	method:Level::deserialize
LineWrapper	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/wrap_algorithms.rs	/^impl LineWrapper {$/;"	c
LineWrapper	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/wrap_algorithms.rs	/^pub(crate) struct LineWrapper {$/;"	s
Literal	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    Literal,$/;"	e	enum:Style
Log	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub trait Log: Sync + Send {$/;"	i
Logger	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    impl fmt::Debug for Logger {$/;"	c	module:std_fmt_impls
Logger	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^impl Log for Logger {$/;"	c
Logger	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^impl Logger {$/;"	c
Logger	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub struct Logger {$/;"	s
Long	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    Long(OsStr),$/;"	e	enum:KeyType
Long	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    Long,$/;"	e	enum:Identifier
M2	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        const M2: Flags = Flags::A;$/;"	C	function:tests::test_const_fn
M3	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        const M3: Flags = Flags::C;$/;"	C	function:tests::test_const_fn
MAX_LOG_LEVEL_FILTER	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static MAX_LOG_LEVEL_FILTER: AtomicUsize = AtomicUsize::new(0);$/;"	v
MKeyMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^impl Index<&'_ KeyType> for MKeyMap {$/;"	c
MKeyMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^impl MKeyMap {$/;"	c
MKeyMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^pub(crate) struct MKeyMap {$/;"	s
Magenta	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    Magenta,$/;"	e	enum:Color
MapValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<P, F, T> MapValueParser<P, F>$/;"	c
MapValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<P, F, T> TypedValueParser for MapValueParser<P, F>$/;"	c
MapValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct MapValueParser<P, F> {$/;"	s
MatchedArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^impl Eq for MatchedArg {}$/;"	c
MatchedArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^impl MatchedArg {$/;"	c
MatchedArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^impl PartialEq for MatchedArg {$/;"	c
MatchedArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^pub(crate) struct MatchedArg {$/;"	s
MatchesError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/error.rs	/^impl MatchesError {$/;"	c
MatchesError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/error.rs	/^impl std::error::Error for MatchesError {}$/;"	c
MatchesError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/error.rs	/^impl std::fmt::Display for MatchesError {$/;"	c
MatchesError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/error.rs	/^pub enum MatchesError {$/;"	g
MaybeHyphenValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    MaybeHyphenValue,$/;"	e	enum:ParseResult
MaybeStaticStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^enum MaybeStaticStr<'a> {$/;"	g
MaybeStaticStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl<'a> MaybeStaticStr<'a> {$/;"	c
Message	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^impl From<String> for Message {$/;"	c
Message	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^impl From<StyledStr> for Message {$/;"	c
Message	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^impl Message {$/;"	c
Message	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^pub(crate) enum Message {$/;"	g
Metadata	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl<'a> Metadata<'a> {$/;"	c
Metadata	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct Metadata<'a> {$/;"	s
MetadataBuilder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl<'a> MetadataBuilder<'a> {$/;"	c
MetadataBuilder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct MetadataBuilder<'a> {$/;"	s
Micros	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    Micros,$/;"	e	enum:TimestampPrecision
Millis	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    Millis,$/;"	e	enum:TimestampPrecision
MinValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    MinValues,$/;"	e	enum:ContextKind
MissingRequiredArgument	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    MissingRequiredArgument,$/;"	e	enum:ErrorKind
MissingSubcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    MissingSubcommand,$/;"	e	enum:ErrorKind
Msg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    Msg(&'static str),$/;"	e	enum:Inner
Multicall	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    Multicall,$/;"	e	enum:AppSettings
MyRecordAsList	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            pub struct MyRecordAsList<'a> {$/;"	s	function:serde_support::tests::derive_serialize
MyRecordAsList	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            pub struct MyRecordAsList<'a> {$/;"	s	function:sval_support::tests::derive_stream
MyRecordAsMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            pub struct MyRecordAsMap<'a> {$/;"	s	function:serde_support::tests::derive_serialize
MyRecordAsMap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            pub struct MyRecordAsMap<'a> {$/;"	s	function:sval_support::tests::derive_stream
NEXT_LINE_INDENT	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^const NEXT_LINE_INDENT: &str = "        ";$/;"	C
NOP	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        static NOP: NopLogger = NopLogger;$/;"	v	function:logger
Nanos	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    Nanos,$/;"	e	enum:TimestampPrecision
Never	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^    Never,$/;"	e	enum:ColorChoice
Never	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    Never,$/;"	e	enum:WriteStyle
NewLine	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    NewLine,$/;"	e	enum:OpCode
NextLineHelp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    NextLineHelp,$/;"	e	enum:AppSettings
NextLineHelp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    NextLineHelp,$/;"	e	enum:ArgSettings
NoArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    NoArg,$/;"	e	enum:ParseResult
NoBinaryName	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    NoBinaryName,$/;"	e	enum:AppSettings
NoEquals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    NoEquals,$/;"	e	enum:ErrorKind
NoMatchingArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    NoMatchingArg {$/;"	e	enum:ParseResult
NonEmptyStringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl Default for NonEmptyStringValueParser {$/;"	c
NonEmptyStringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl NonEmptyStringValueParser {$/;"	c
NonEmptyStringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl TypedValueParser for NonEmptyStringValueParser {$/;"	c
NonEmptyStringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct NonEmptyStringValueParser {}$/;"	s
NonZeroI128	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl ToValue for std::num::NonZeroI128 {$/;"	c
NonZeroU128	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl ToValue for std::num::NonZeroU128 {$/;"	c
None	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    None,$/;"	e	enum:ContextValue
NopLogger	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl Log for NopLogger {$/;"	c
NopLogger	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^struct NopLogger;$/;"	s
Number	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    Number(isize),$/;"	e	enum:ContextValue
Occupied	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    Occupied(OccupiedEntry<'a, K, V>),$/;"	e	enum:Entry
OccupiedEntry	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^pub struct OccupiedEntry<'a, K: 'a, V: 'a> {$/;"	s
OccurrenceValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<T> DoubleEndedIterator for OccurrenceValues<T> {$/;"	c
OccurrenceValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<T> ExactSizeIterator for OccurrenceValues<T> {}$/;"	c
OccurrenceValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<T> Iterator for OccurrenceValues<T> {$/;"	c
OccurrenceValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct OccurrenceValues<T> {$/;"	s
OccurrenceValuesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a, T> DoubleEndedIterator for OccurrenceValuesRef<'a, T>$/;"	c
OccurrenceValuesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a, T> ExactSizeIterator for OccurrenceValuesRef<'a, T> where Self: 'a {}$/;"	c
OccurrenceValuesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a, T> Iterator for OccurrenceValuesRef<'a, T>$/;"	c
OccurrenceValuesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct OccurrenceValuesRef<'a, T> {$/;"	s
Occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<T> Default for Occurrences<T> {$/;"	c
Occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<T> DoubleEndedIterator for Occurrences<T> {$/;"	c
Occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<T> ExactSizeIterator for Occurrences<T> {}$/;"	c
Occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<T> Iterator for Occurrences<T> {$/;"	c
Occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct Occurrences<T> {$/;"	s
OccurrencesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a, T> Default for OccurrencesRef<'a, T> {$/;"	c
OccurrencesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a, T> DoubleEndedIterator for OccurrencesRef<'a, T>$/;"	c
OccurrencesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a, T> ExactSizeIterator for OccurrencesRef<'a, T> where Self: 'a {}$/;"	c
OccurrencesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a, T> Iterator for OccurrencesRef<'a, T>$/;"	c
OccurrencesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct OccurrencesRef<'a, T> {$/;"	s
Off	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Off,$/;"	e	enum:LevelFilter
OnePair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        impl Source for OnePair {$/;"	c	function:tests::count
OnePair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        struct OnePair {$/;"	s	function:tests::count
OpCode	/home/jcoombes/Src/chisel/src/opcodes.rs	/^pub enum OpCode {$/;"	g
Opt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    Opt(Id),$/;"	e	enum:ParseResult
Opt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    Opt(Id),$/;"	e	enum:ParseState
Option	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<ArgAction> for Option<ArgAction> {$/;"	c
Option	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<OsStr> for Option<&'static str> {$/;"	c
Option	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<Str> for Option<&'static str> {$/;"	c
Option	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<StyledStr> for Option<&'static str> {$/;"	c
Option	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<ValueHint> for Option<ValueHint> {$/;"	c
Option	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<ValueParser> for Option<ValueParser> {$/;"	c
Option	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<char> for Option<char> {$/;"	c
Option	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<usize> for Option<usize> {$/;"	c
Option	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<S> Source for Option<S>$/;"	c
Option	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<T> ToValue for Option<T>$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl AsRef<std::ffi::OsStr> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl AsRef<std::path::Path> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<&'_ &'static std::ffi::OsStr> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<&'_ &'static str> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<&'_ OsStr> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<&'_ Str> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<&'_ std::ffi::OsString> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<&'_ std::string::String> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<&'static std::ffi::OsStr> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<&'static str> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<Str> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<std::ffi::OsString> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<std::string::String> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialEq<&'_ std::ffi::OsStr> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialEq<&'_ str> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialEq<OsStr> for &'_ std::ffi::OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialEq<std::ffi::OsString> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialEq<std::string::String> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialEq<str> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl std::borrow::Borrow<std::ffi::OsStr> for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl std::fmt::Debug for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl std::ops::Deref for OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^pub struct OsStr {$/;"	s
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialEq<Str> for &'_ std::ffi::OsStr {$/;"	c
OsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialEq<Str> for std::ffi::OsStr {$/;"	c
OsString	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<OsStr> for std::ffi::OsString {$/;"	c
OsString	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialEq<OsStr> for std::ffi::OsString {$/;"	c
OsString	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl From<Str> for std::ffi::OsString {$/;"	c
OsString	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    OsString,$/;"	e	enum:ValueParserInner
OsString	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for std::ffi::OsString {$/;"	c
OsStringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl Default for OsStringValueParser {$/;"	c
OsStringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl OsStringValueParser {$/;"	c
OsStringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl TypedValueParser for OsStringValueParser {$/;"	c
OsStringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct OsStringValueParser {}$/;"	s
Other	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    Other,$/;"	e	enum:ValueHint
Other	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    Other(Box<dyn AnyValueParser>),$/;"	e	enum:ValueParserInner
Output	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    type Output = Arg;$/;"	t	implementation:Command
Output	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        type Output = EnumValueParser<E>;$/;"	t	implementation:via_prelude::_AutoValueParser
Output	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        type Output;$/;"	t	interface:via_prelude::_ValueParserViaValueEnum
Output	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    type Output = Arg;$/;"	t	implementation:MKeyMap
Owned	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^        Owned(Box<std::ffi::OsStr>),$/;"	e	enum:inner::Inner
Owned	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^        Owned(Box<str>),$/;"	e	enum:inner::Inner
P	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<T, P> AnyValueParser for P$/;"	c
ParseError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^impl ParseError {$/;"	c
ParseError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^impl fmt::Display for ParseError {$/;"	c
ParseError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^impl std::error::Error for ParseError {}$/;"	c
ParseError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^pub struct ParseError(ParseErrorKind);$/;"	s
ParseErrorKind	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^enum ParseErrorKind {$/;"	g
ParseLevelError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl error::Error for ParseLevelError {}$/;"	c
ParseLevelError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl fmt::Display for ParseLevelError {$/;"	c
ParseLevelError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct ParseLevelError(());$/;"	s
ParseResult	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^enum ParseResult {$/;"	g
ParseState	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^pub(crate) enum ParseState {$/;"	g
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        type Parser = P::Parser;$/;"	t	implementation:via_prelude::_AutoValueParser
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        type Parser;$/;"	t	interface:via_prelude::_ValueParserViaFactory
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<i16>;$/;"	t	implementation:i16
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<i32>;$/;"	t	implementation:i32
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<i64>;$/;"	t	implementation:i64
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<i8>;$/;"	t	implementation:i8
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<u16>;$/;"	t	implementation:u16
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<u32>;$/;"	t	implementation:u32
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = RangedI64ValueParser<u8>;$/;"	t	implementation:u8
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = RangedU64ValueParser<u64>;$/;"	t	implementation:u64
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = ValueParser;$/;"	t	implementation:OsString
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = ValueParser;$/;"	t	implementation:PathBuf
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = ValueParser;$/;"	t	implementation:String
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser = ValueParser;$/;"	t	implementation:bool
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Parser;$/;"	t	interface:ValueParserFactory
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^pub trait Parser: FromArgMatches + CommandFactory + Sized {$/;"	i
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^impl<'cmd> Parser<'cmd> {$/;"	c
Parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^pub(crate) struct Parser<'cmd> {$/;"	s
PathBuf	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl From<OsStr> for std::path::PathBuf {$/;"	c
PathBuf	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl From<Str> for std::path::PathBuf {$/;"	c
PathBuf	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    PathBuf,$/;"	e	enum:ValueParserInner
PathBuf	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for std::path::PathBuf {$/;"	c
PathBufValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl Default for PathBufValueParser {$/;"	c
PathBufValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl PathBufValueParser {$/;"	c
PathBufValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl TypedValueParser for PathBufValueParser {$/;"	c
PathBufValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct PathBufValueParser {}$/;"	s
PendingArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^pub(crate) struct PendingArg {$/;"	s
Pipe	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    Pipe(Box<Mutex<dyn io::Write + Send + 'static>>),$/;"	e	enum:WritableTarget
Pipe	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    Pipe(Box<dyn io::Write + Send + 'static>),$/;"	e	enum:Target
Placeholder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    Placeholder,$/;"	e	enum:Style
PopAlignment	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    PopAlignment,$/;"	e	enum:OpCode
PopBold	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    PopBold,$/;"	e	enum:OpCode
PopColour	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    PopColour,$/;"	e	enum:OpCode
PopIndent	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    PopIndent,$/;"	e	enum:OpCode
PopItalic	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    PopItalic,$/;"	e	enum:OpCode
Pos	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    Pos(Id),$/;"	e	enum:ParseState
Position	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    Position(usize),$/;"	e	enum:KeyType
PossibleValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^impl PossibleValue {$/;"	c
PossibleValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^impl<S: Into<Str>> From<S> for PossibleValue {$/;"	c
PossibleValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^pub struct PossibleValue {$/;"	s
PossibleValuesParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl PossibleValuesParser {$/;"	c
PossibleValuesParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl TypedValueParser for PossibleValuesParser {$/;"	c
PossibleValuesParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<I, T> From<I> for PossibleValuesParser$/;"	c
PossibleValuesParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct PossibleValuesParser(Vec<super::PossibleValue>);$/;"	s
PriorArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    PriorArg,$/;"	e	enum:ContextKind
PropagateVersion	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    PropagateVersion,$/;"	e	enum:AppSettings
PublicFlags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^pub trait PublicFlags {$/;"	i
PushAlignment	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    PushAlignment(Alignment),$/;"	e	enum:OpCode
PushBold	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    PushBold,$/;"	e	enum:OpCode
PushColour	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    PushColour(u8, u8, u8),$/;"	e	enum:OpCode
PushIndent	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    PushIndent(u8),$/;"	e	enum:OpCode
PushItalic	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    PushItalic,$/;"	e	enum:OpCode
RangedI64ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<T: std::convert::TryFrom<i64> + Clone + Send + Sync + 'static> TypedValueParser$/;"	c
RangedI64ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<T: std::convert::TryFrom<i64> + Clone + Send + Sync, B: RangeBounds<i64>> From<B>$/;"	c
RangedI64ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<T: std::convert::TryFrom<i64> + Clone + Send + Sync> Default for RangedI64ValueParser<T> {$/;"	c
RangedI64ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<T: std::convert::TryFrom<i64> + Clone + Send + Sync> RangedI64ValueParser<T> {$/;"	c
RangedI64ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct RangedI64ValueParser<T: std::convert::TryFrom<i64> + Clone + Send + Sync = i64> {$/;"	s
RangedU64ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<T: std::convert::TryFrom<u64> + Clone + Send + Sync + 'static> TypedValueParser$/;"	c
RangedU64ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<T: std::convert::TryFrom<u64>, B: RangeBounds<u64>> From<B> for RangedU64ValueParser<T> {$/;"	c
RangedU64ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<T: std::convert::TryFrom<u64>> Default for RangedU64ValueParser<T> {$/;"	c
RangedU64ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<T: std::convert::TryFrom<u64>> RangedU64ValueParser<T> {$/;"	c
RangedU64ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct RangedU64ValueParser<T: std::convert::TryFrom<u64> = u64> {$/;"	s
Raw	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    Raw(String),$/;"	e	enum:Message
RawOccurrenceValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> DoubleEndedIterator for RawOccurrenceValues<'a>$/;"	c
RawOccurrenceValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> ExactSizeIterator for RawOccurrenceValues<'a> {}$/;"	c
RawOccurrenceValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> Iterator for RawOccurrenceValues<'a>$/;"	c
RawOccurrenceValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct RawOccurrenceValues<'a> {$/;"	s
RawOccurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> Default for RawOccurrences<'a> {$/;"	c
RawOccurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> DoubleEndedIterator for RawOccurrences<'a> {$/;"	c
RawOccurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> ExactSizeIterator for RawOccurrences<'a> {}$/;"	c
RawOccurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> Iterator for RawOccurrences<'a> {$/;"	c
RawOccurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct RawOccurrences<'a> {$/;"	s
RawValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl Default for RawValues<'_> {$/;"	c
RawValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> DoubleEndedIterator for RawValues<'a> {$/;"	c
RawValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> ExactSizeIterator for RawValues<'a> {}$/;"	c
RawValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a> Iterator for RawValues<'a> {$/;"	c
RawValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct RawValues<'a> {$/;"	s
Record	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl<'a> Record<'a> {$/;"	c
Record	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct Record<'a> {$/;"	s
RecordBuilder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl<'a> RecordBuilder<'a> {$/;"	c
RecordBuilder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct RecordBuilder<'a> {$/;"	s
Red	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    Red,$/;"	e	enum:Color
Repeat	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    Repeat(char, usize),$/;"	e	enum:OpCode
RequireEquals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    RequireEquals,$/;"	e	enum:ArgSettings
Required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    Required,$/;"	e	enum:ArgSettings
Reset	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    Reset,$/;"	e	enum:Resettable
Resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl<T> From<Option<T>> for Resettable<T> {$/;"	c
Resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl<T> From<T> for Resettable<T> {$/;"	c
Resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl<T> IntoResettable<T> for Resettable<T> {$/;"	c
Resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl<T> Resettable<T> {$/;"	c
Resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^pub enum Resettable<T> {$/;"	g
Result	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^pub type Result<T, E = Error> = StdResult<T, E>;$/;"	t
Rgb	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    Rgb(u8, u8, u8),$/;"	e	enum:Color
RichFormatter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^impl ErrorFormatter for RichFormatter {$/;"	c
RichFormatter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^pub struct RichFormatter;$/;"	s
Right	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    Right,$/;"	e	enum:Alignment
S	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<S> Source for [S]$/;"	c
SET_LOGGER_ERROR	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static SET_LOGGER_ERROR: &str = "attempted to set a logger after the logging system \\$/;"	v
SINGLE	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub const SINGLE: Self = Self {$/;"	C	implementation:ValueRange
STATE	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static STATE: AtomicUsize = AtomicUsize::new(0);$/;"	v
STATIC_MAX_LEVEL	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub const STATIC_MAX_LEVEL: LevelFilter = MAX_LEVEL_INNER;$/;"	C
SUCCESS_CODE	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/mod.rs	/^pub(crate) const SUCCESS_CODE: i32 = 0;$/;"	C
SYM_DIFFERENCE	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        const SYM_DIFFERENCE: Flags = UNION.symmetric_difference(DIFFERENCE);$/;"	C	function:tests::test_set_ops_const
Sealed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^pub trait Sealed {}$/;"	i
Seconds	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    Seconds,$/;"	e	enum:TimestampPrecision
SerializerVisitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            impl<'a, 'kvs, S> Visitor<'kvs> for SerializerVisitor<'a, S>$/;"	c	function:serde_support::serialize
SerializerVisitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            struct SerializerVisitor<'a, S>(&'a mut S);$/;"	s	function:serde_support::serialize
Set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    Set,$/;"	e	enum:ArgAction
SetFalse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    SetFalse,$/;"	e	enum:ArgAction
SetLoggerError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl error::Error for SetLoggerError {}$/;"	c
SetLoggerError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl fmt::Display for SetLoggerError {$/;"	c
SetLoggerError	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct SetLoggerError(());$/;"	s
SetTrue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    SetTrue,$/;"	e	enum:ArgAction
Short	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    Short(char),$/;"	e	enum:KeyType
Short	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    Short,$/;"	e	enum:Identifier
Slice	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    Slice(&'static str),$/;"	e	enum:OpCode
Source	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub trait Source {$/;"	i
Static	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^        Static(&'static std::ffi::OsStr),$/;"	e	enum:inner::Inner
Static	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^        Static(&'static str),$/;"	e	enum:inner::Inner
Static	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Static(&'static str),$/;"	e	enum:MaybeStaticStr
Stderr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^    Stderr,$/;"	e	enum:Stream
Stderr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    Stderr,$/;"	e	enum:Target
Stderr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    Stderr,$/;"	e	enum:WritableTarget
Stdout	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^    Stdout,$/;"	e	enum:Stream
Stdout	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    Stdout,$/;"	e	enum:Target
Stdout	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    Stdout,$/;"	e	enum:WritableTarget
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl AsRef<[u8]> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl AsRef<std::ffi::OsStr> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl AsRef<std::path::Path> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl AsRef<str> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl From<&'_ &'static str> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl From<&'_ Str> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl From<&'_ std::string::String> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl From<&'static str> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl From<std::string::String> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialEq<&'_ std::ffi::OsStr> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialEq<&'_ str> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialEq<std::ffi::OsStr> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialEq<std::string::String> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialEq<str> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl std::borrow::Borrow<str> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl std::fmt::Debug for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl std::fmt::Display for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl std::ops::Deref for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^pub struct Str {$/;"	s
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl From<Id> for Str {$/;"	c
Str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl PartialEq<Id> for Str {$/;"	c
Stream	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^pub(crate) enum Stream {$/;"	g
StreamVisitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            impl<'a, 'b, 'kvs> Visitor<'kvs> for StreamVisitor<'a, 'b> {$/;"	c	function:sval_support::stream
StreamVisitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            struct StreamVisitor<'a, 'b>(&'a mut value::Stream<'b>);$/;"	s	function:sval_support::stream
String	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialEq<OsStr> for std::string::String {$/;"	c
String	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl From<Str> for String {$/;"	c
String	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialEq<Str> for std::string::String {$/;"	c
String	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    String,$/;"	e	enum:ValueParserInner
String	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for String {$/;"	c
String	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    String(String),$/;"	e	enum:ContextValue
String	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl From<Id> for String {$/;"	c
String	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl PartialEq<Id> for std::string::String {$/;"	c
String	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    impl ToKey for String {$/;"	c	module:std_support
String	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    impl ToValue for String {$/;"	c	module:std_support
StringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl Default for StringValueParser {$/;"	c
StringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl StringValueParser {$/;"	c
StringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl TypedValueParser for StringValueParser {$/;"	c
StringValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct StringValueParser {}$/;"	s
Strings	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    Strings(Vec<String>),$/;"	e	enum:ContextValue
Style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^impl Style {$/;"	c
Style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^pub(crate) enum Style {$/;"	g
Style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^impl Style {$/;"	c
Style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^impl fmt::Debug for Style {$/;"	c
Style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^pub struct Style {$/;"	s
StyledStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^impl Default for &'_ StyledStr {$/;"	c
StyledStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^impl From<&'_ &'static str> for StyledStr {$/;"	c
StyledStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^impl From<&'_ std::string::String> for StyledStr {$/;"	c
StyledStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^impl From<&'static str> for StyledStr {$/;"	c
StyledStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^impl From<std::string::String> for StyledStr {$/;"	c
StyledStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^impl Ord for StyledStr {$/;"	c
StyledStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^impl PartialOrd for StyledStr {$/;"	c
StyledStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^impl StyledStr {$/;"	c
StyledStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^impl std::fmt::Display for StyledStr {$/;"	c
StyledStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^pub struct StyledStr {$/;"	s
StyledStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    StyledStr(crate::builder::StyledStr),$/;"	e	enum:ContextValue
StyledStrs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    StyledStrs(Vec<crate::builder::StyledStr>),$/;"	e	enum:ContextValue
StyledValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^impl<'a, T> StyledValue<'a, T> {$/;"	c
StyledValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^pub struct StyledValue<'a, T> {$/;"	s
SubCommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub(crate) struct SubCommand {$/;"	s
Subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^pub trait Subcommand: FromArgMatches + Sized {$/;"	i
SubcommandPrecedenceOverArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    SubcommandPrecedenceOverArg,$/;"	e	enum:AppSettings
SubcommandRequired	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    SubcommandRequired,$/;"	e	enum:AppSettings
SubcommandsNegateReqs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    SubcommandsNegateReqs,$/;"	e	enum:AppSettings
SubtleStyle	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^type SubtleStyle = &'static str;$/;"	t
SubtleStyle	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^type SubtleStyle = StyledValue<'static, &'static str>;$/;"	t
Suggested	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    Suggested,$/;"	e	enum:ContextKind
SuggestedArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    SuggestedArg,$/;"	e	enum:ContextKind
SuggestedCommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    SuggestedCommand,$/;"	e	enum:ContextKind
SuggestedSubcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    SuggestedSubcommand,$/;"	e	enum:ContextKind
SuggestedValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    SuggestedValue,$/;"	e	enum:ContextKind
T	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^impl<'a, T> Captures<'a> for T {}$/;"	c
T	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl<'a, T> ToKey for &'a T$/;"	c
T	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<'a, 'kvs, T> Visitor<'kvs> for &'a mut T$/;"	c
T	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<'a, T> Source for &'a T$/;"	c
T	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'a, 'v, T: ?Sized> Visit<'v> for &'a mut T$/;"	c
T	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'a, T> ToValue for &'a T$/;"	c
T	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^impl<T> Log for &'_ T$/;"	c
TAB	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/mod.rs	/^pub(crate) const TAB: &str = "  ";$/;"	C
TAB_WIDTH	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/mod.rs	/^pub(crate) const TAB_WIDTH: usize = TAB.len();$/;"	C
TRUE_LITERALS	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/str_to_bool.rs	/^pub(crate) const TRUE_LITERALS: [&str; 6] = ["y", "yes", "t", "true", "on", "1"];$/;"	C
Target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    type Target = std::ffi::OsStr;$/;"	t	implementation:OsStr
Target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    type Target = str;$/;"	t	implementation:Str
Target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    type Target = ArgMatches;$/;"	t	implementation:ArgMatcher
Target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^impl Default for Target {$/;"	c
Target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^impl fmt::Debug for Target {$/;"	c
Target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^pub enum Target {$/;"	g
TestVisitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        impl<'kvs> Visitor<'kvs> for TestVisitor {$/;"	c	function:tests::test_record_key_values_builder
TestVisitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        struct TestVisitor {$/;"	s	function:tests::test_record_key_values_builder
Text	/home/jcoombes/Src/chisel/src/opcodes.rs	/^    Text(String),$/;"	e	enum:OpCode
Timestamp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^impl fmt::Debug for Timestamp {$/;"	c
Timestamp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^impl fmt::Display for Timestamp {$/;"	c
Timestamp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^pub struct Timestamp {$/;"	s
TimestampPrecision	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^impl Default for TimestampPrecision {$/;"	c
TimestampPrecision	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^pub enum TimestampPrecision {$/;"	g
TimestampValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^        impl<'a> fmt::Debug for TimestampValue<'a> {$/;"	c	method:Timestamp::fmt
TimestampValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^        struct TimestampValue<'a>(&'a Timestamp);$/;"	s	method:Timestamp::fmt
ToKey	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^pub trait ToKey {$/;"	i
ToValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl ToValue for () {$/;"	c
ToValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^pub trait ToValue {$/;"	i
TooFewValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    TooFewValues,$/;"	e	enum:ErrorKind
TooManyValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    TooManyValues,$/;"	e	enum:ErrorKind
Trace	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Trace,$/;"	e	enum:Level
Trace	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Trace,$/;"	e	enum:LevelFilter
TrailingArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    TrailingArg,$/;"	e	enum:ContextKind
TrailingVarArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    TrailingVarArg,$/;"	e	enum:AppSettings
TrailingVarArg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    TrailingVarArg,$/;"	e	enum:ArgSettings
TryMapValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<P, F, T, E> TryMapValueParser<P, F>$/;"	c
TryMapValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<P, F, T, E> TypedValueParser for TryMapValueParser<P, F>$/;"	c
TryMapValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct TryMapValueParser<P, F> {$/;"	s
TypedValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub trait TypedValueParser: Clone + Send + Sync + 'static {$/;"	i
UNINITIALIZED	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^const UNINITIALIZED: usize = 0;$/;"	C
UNION	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        const UNION: Flags = Flags::A.union(Flags::C);$/;"	C	function:tests::test_set_ops_const
USAGE_CODE	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/mod.rs	/^pub(crate) const USAGE_CODE: i32 = 2;$/;"	C
Unknown	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    Unknown,$/;"	e	enum:ValueHint
UnknownArgument	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    UnknownArgument,$/;"	e	enum:ErrorKind
UnknownArgument	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/error.rs	/^    UnknownArgument {$/;"	e	enum:MatchesError
UnneededAttachedValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    UnneededAttachedValue {$/;"	e	enum:ParseResult
Url	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    Url,$/;"	e	enum:ValueHint
Usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    Usage,$/;"	e	enum:ContextKind
Usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^impl<'cmd> Usage<'cmd> {$/;"	c
Usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^pub(crate) struct Usage<'cmd> {$/;"	s
Username	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    Username,$/;"	e	enum:ValueHint
V	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^impl<K, V> Source for (K, V)$/;"	c
VERSION	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    pub(crate) const VERSION: &'static str = "version";$/;"	C	implementation:Id
Vacant	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    Vacant(VacantEntry<'a, K, V>),$/;"	e	enum:Entry
VacantEntry	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^pub struct VacantEntry<'a, K: 'a, V: 'a> {$/;"	s
ValidSubcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    ValidSubcommand,$/;"	e	enum:ContextKind
ValidValue	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    ValidValue,$/;"	e	enum:ContextKind
Validator	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^impl<'cmd> Validator<'cmd> {$/;"	c
Validator	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^pub(crate) struct Validator<'cmd> {$/;"	s
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external/serde_support.rs	/^            type Value = T;$/;"	t	function:deserialize_bits_default
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    Value(T),$/;"	e	enum:Resettable
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Value = E;$/;"	t	implementation:EnumValueParser
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Value = String;$/;"	t	implementation:NonEmptyStringValueParser
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Value = String;$/;"	t	implementation:PossibleValuesParser
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Value = String;$/;"	t	implementation:StringValueParser
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Value = T;$/;"	t
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Value = bool;$/;"	t	implementation:BoolValueParser
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Value = bool;$/;"	t	implementation:BoolishValueParser
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Value = bool;$/;"	t	implementation:FalseyValueParser
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Value = std::ffi::OsString;$/;"	t	implementation:OsStringValueParser
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Value = std::path::PathBuf;$/;"	t	implementation:PathBufValueParser
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    type Value: Send + Sync + Clone;$/;"	t	interface:TypedValueParser
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    Value(value_bag::Error),$/;"	e	enum:Inner
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    impl<'v> From<&'v String> for Value<'v> {$/;"	c	module:std_support
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    impl<'v> Value<'v> {$/;"	c	module:std_support
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    impl<'v> Value<'v> {$/;"	c	module:tests
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl ToValue for dyn self::sval::value::Value {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'v> From<&'v i128> for Value<'v> {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'v> From<&'v std::num::NonZeroI128> for Value<'v> {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'v> From<&'v std::num::NonZeroU128> for Value<'v> {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'v> From<&'v str> for Value<'v> {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'v> From<&'v u128> for Value<'v> {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'v> ToValue for Value<'v> {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'v> Value<'v> {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'v> fmt::Debug for Value<'v> {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'v> fmt::Display for Value<'v> {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'v> self::serde::Serialize for Value<'v> {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl<'v> self::sval::value::Value for Value<'v> {$/;"	c
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^pub struct Value<'v> {$/;"	s
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            type Value = Level;$/;"	t	implementation:Level::deserialize::LevelEnum
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            type Value = Level;$/;"	t	implementation:Level::deserialize::LevelIdentifier
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            type Value = LevelFilter;$/;"	t	implementation:LevelFilter::deserialize::LevelFilterEnum
Value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            type Value = LevelFilter;$/;"	t	implementation:LevelFilter::deserialize::LevelFilterIdentifier
ValueEnum	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^pub trait ValueEnum: Sized + Clone {$/;"	i
ValueHint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<ValueHint> for ValueHint {$/;"	c
ValueHint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^impl Default for ValueHint {$/;"	c
ValueHint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^impl FromStr for ValueHint {$/;"	c
ValueHint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^pub enum ValueHint {$/;"	g
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl Clone for ValueParser {$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl From<_AnonymousValueParser> for ValueParser {$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl From<std::ops::Range<i64>> for ValueParser {$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl From<std::ops::RangeFrom<i64>> for ValueParser {$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl From<std::ops::RangeFull> for ValueParser {$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl From<std::ops::RangeInclusive<i64>> for ValueParser {$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl From<std::ops::RangeTo<i64>> for ValueParser {$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl From<std::ops::RangeToInclusive<i64>> for ValueParser {$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParser {$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl std::fmt::Debug for ValueParser {$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<P, const C: usize> From<[P; C]> for ValueParser$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<P> From<P> for ValueParser$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<P> From<Vec<P>> for ValueParser$/;"	c
ValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct ValueParser(ValueParserInner);$/;"	s
ValueParserFactory	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub trait ValueParserFactory {$/;"	i
ValueParserInner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^enum ValueParserInner {$/;"	g
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl Default for ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl From<std::ops::Range<usize>> for ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl From<std::ops::RangeFrom<usize>> for ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl From<std::ops::RangeFull> for ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl From<std::ops::RangeInclusive<usize>> for ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl From<std::ops::RangeTo<usize>> for ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl From<std::ops::RangeToInclusive<usize>> for ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl From<usize> for ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl std::fmt::Debug for ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl std::fmt::Display for ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^impl std::ops::RangeBounds<usize> for ValueRange {$/;"	c
ValueRange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^pub struct ValueRange {$/;"	s
ValueSource	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/value_source.rs	/^impl ValueSource {$/;"	c
ValueSource	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/value_source.rs	/^pub enum ValueSource {$/;"	g
ValueValidation	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    ValueValidation,$/;"	e	enum:ErrorKind
Values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<T> Default for Values<T> {$/;"	c
Values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<T> DoubleEndedIterator for Values<T> {$/;"	c
Values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<T> ExactSizeIterator for Values<T> {}$/;"	c
Values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<T> Iterator for Values<T> {$/;"	c
Values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct Values<T> {$/;"	s
ValuesDone	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    ValuesDone,$/;"	e	enum:ParseResult
ValuesDone	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    ValuesDone,$/;"	e	enum:ParseState
ValuesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a, T: 'a> Default for ValuesRef<'a, T> {$/;"	c
ValuesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a, T: 'a> DoubleEndedIterator for ValuesRef<'a, T> {$/;"	c
ValuesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a, T: 'a> ExactSizeIterator for ValuesRef<'a, T> {}$/;"	c
ValuesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^impl<'a, T: 'a> Iterator for ValuesRef<'a, T> {$/;"	c
ValuesRef	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^pub struct ValuesRef<'a, T> {$/;"	s
Var	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^impl<'a> Var<'a> {$/;"	c
Var	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^struct Var<'a> {$/;"	s
Vec	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl From<Str> for Vec<u8> {$/;"	c
Vec	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    impl<S> Source for Vec<S>$/;"	c	module:std_support
Version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    Version,$/;"	e	enum:ArgAction
Visit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^pub trait Visit<'v> {$/;"	i
Visitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub trait Visitor<'kvs> {$/;"	i
Visitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        impl<'v, V> value_bag::visit::Visit<'v> for Visitor<V>$/;"	c	method:Value::visit
Visitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        struct Visitor<V>(V);$/;"	s	method:Value::visit
Warn	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Warn,$/;"	e	enum:Level
Warn	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    Warn,$/;"	e	enum:LevelFilter
Warning	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    Warning,$/;"	e	enum:Style
White	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    White,$/;"	e	enum:Color
WritableTarget	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^impl Default for WritableTarget {$/;"	c
WritableTarget	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^impl From<Target> for WritableTarget {$/;"	c
WritableTarget	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^impl fmt::Debug for WritableTarget {$/;"	c
WritableTarget	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^pub(super) enum WritableTarget {$/;"	g
WriteStyle	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^impl Default for WriteStyle {$/;"	c
WriteStyle	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^pub enum WriteStyle {$/;"	g
WriteStyle	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^impl WriteStyle {$/;"	c
Writer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^impl Writer {$/;"	c
Writer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^impl fmt::Debug for Writer {$/;"	c
Writer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^pub(crate) struct Writer {$/;"	s
WrongNumberOfValues	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    WrongNumberOfValues,$/;"	e	enum:ErrorKind
Yellow	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    Yellow,$/;"	e	enum:Color
_AnonymousValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct _AnonymousValueParser(ValueParser);$/;"	s
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<E: crate::ValueEnum + Clone + Send + Sync + 'static> _ValueParserViaValueEnum$/;"	c	module:via_prelude
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<E: crate::ValueEnum> _ValueParserViaValueEnumSealed for &&&&&_AutoValueParser<E> {}$/;"	c	module:private
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<FromOsStr> _ValueParserViaFromOsStr for &&&_AutoValueParser<FromOsStr>$/;"	c	module:via_prelude
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<FromOsStr> _ValueParserViaFromOsStrSealed for &&&_AutoValueParser<FromOsStr> where$/;"	c	module:private
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<FromOsString> _ValueParserViaFromOsString for &&&&_AutoValueParser<FromOsString>$/;"	c	module:via_prelude
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<FromOsString> _ValueParserViaFromOsStringSealed for &&&&_AutoValueParser<FromOsString> /;"	c	module:private
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<FromStr> _ValueParserViaFromStr for &_AutoValueParser<FromStr>$/;"	c	module:via_prelude
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<FromStr> _ValueParserViaFromStrSealed for &_AutoValueParser<FromStr> where$/;"	c	module:private
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<FromString> _ValueParserViaFromString for &&_AutoValueParser<FromString>$/;"	c	module:via_prelude
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<FromString> _ValueParserViaFromStringSealed for &&_AutoValueParser<FromString> where$/;"	c	module:private
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<P: Into<ValueParser>> _ValueParserViaSelfSealed for &&&&&&&_AutoValueParser<P> {}$/;"	c	module:private
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<P: ValueParserFactory> _ValueParserViaFactory for &&&&&&_AutoValueParser<P> {$/;"	c	module:via_prelude
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<P: ValueParserFactory> _ValueParserViaFactorySealed for &&&&&&_AutoValueParser<P> {}$/;"	c	module:private
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<Parse> _ValueParserViaParse for _AutoValueParser<Parse>$/;"	c	module:via_prelude
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    impl<Parse> _ValueParserViaParseSealed for _AutoValueParser<Parse>$/;"	c	module:private
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl<T> _AutoValueParser<T> {$/;"	c
_AutoValueParser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub struct _AutoValueParser<T>(std::marker::PhantomData<T>);$/;"	s
_M1	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        const _M1: Flags = Flags::empty();$/;"	C	function:tests::test_const_fn
_ValueParserViaFactory	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFactory: private::_ValueParserViaFactorySealed {$/;"	i	module:via_prelude
_ValueParserViaFactorySealed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFactorySealed {}$/;"	i	module:private
_ValueParserViaFromOsStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFromOsStr: private::_ValueParserViaFromOsStrSealed {$/;"	i	module:via_prelude
_ValueParserViaFromOsStrSealed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFromOsStrSealed {}$/;"	i	module:private
_ValueParserViaFromOsString	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFromOsString: private::_ValueParserViaFromOsStringSealed {$/;"	i	module:via_prelude
_ValueParserViaFromOsStringSealed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFromOsStringSealed {}$/;"	i	module:private
_ValueParserViaFromStr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFromStr: private::_ValueParserViaFromStrSealed {$/;"	i	module:via_prelude
_ValueParserViaFromStrSealed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFromStrSealed {}$/;"	i	module:private
_ValueParserViaFromString	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFromString: private::_ValueParserViaFromStringSealed {$/;"	i	module:via_prelude
_ValueParserViaFromStringSealed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaFromStringSealed {}$/;"	i	module:private
_ValueParserViaParse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaParse: private::_ValueParserViaParseSealed {$/;"	i	module:via_prelude
_ValueParserViaParseSealed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaParseSealed {}$/;"	i	module:private
_ValueParserViaSelfSealed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaSelfSealed {}$/;"	i	module:private
_ValueParserViaValueEnum	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaValueEnum: private::_ValueParserViaValueEnumSealed {$/;"	i	module:via_prelude
_ValueParserViaValueEnumSealed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub trait _ValueParserViaValueEnumSealed {}$/;"	i	module:private
__declare_internal_bitflags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/internal.rs	/^macro_rules! __declare_internal_bitflags {$/;"	M
__declare_public_bitflags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/public.rs	/^macro_rules! __declare_public_bitflags {$/;"	M
__impl_external_bitflags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external.rs	/^macro_rules! __impl_external_bitflags {$/;"	M
__impl_external_bitflags_serde	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external.rs	/^macro_rules! __impl_external_bitflags_serde {$/;"	M
__impl_internal_bitflags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/internal.rs	/^macro_rules! __impl_internal_bitflags {$/;"	M
__impl_public_bitflags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/public.rs	/^macro_rules! __impl_public_bitflags {$/;"	M
__log_file	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! __log_file {$/;"	M
__log_format_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! __log_format_args {$/;"	M
__log_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! __log_key {$/;"	M
__log_line	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! __log_line {$/;"	M
__log_module_path	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! __log_module_path {$/;"	M
__macro_refs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^pub mod __macro_refs {$/;"	n
__private	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^pub mod __private {$/;"	n
__private_api	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub mod __private_api {$/;"	n
__private_api_enabled	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn __private_api_enabled(level: Level, target: &str) -> bool {$/;"	f
__private_api_log	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn __private_api_log($/;"	f
_build	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn _build(&mut self) {$/;"	P	implementation:Arg
_build	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    pub(crate) fn _build(&mut self) {$/;"	P	implementation:MKeyMap
_build_bin_names_internal	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn _build_bin_names_internal(&mut self) {$/;"	P	implementation:Command
_build_recursive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn _build_recursive(&mut self, expand_help_tree: bool) {$/;"	P	implementation:Command
_build_self	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn _build_self(&mut self, expand_help_tree: bool) {$/;"	P	implementation:Command
_build_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn _build_subcommand(&mut self, name: &str) -> Option<&mut Self> {$/;"	P	implementation:Command
_check	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn _check(_: &dyn Source) {}$/;"	f	function:tests::source_is_object_safe
_check	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn _check(_: &dyn Visitor) {}$/;"	f	function:tests::visitor_is_object_safe
_check_help_and_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn _check_help_and_version(&mut self, expand_help_tree: bool) {$/;"	P	implementation:Command
_cookbook	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^pub mod _cookbook;$/;"	n
_copy_subtree_for_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn _copy_subtree_for_help(&self) -> Command {$/;"	P	implementation:Command
_derive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^pub mod _derive;$/;"	n
_do_parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn _do_parse($/;"	P	implementation:Command
_faq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^pub mod _faq;$/;"	n
_features	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^pub mod _features;$/;"	n
_panic_on_missing_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn _panic_on_missing_help(&self, help_required_globally: bool) {$/;"	P	implementation:Command
_propagate	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn _propagate(&mut self) {$/;"	P	implementation:Command
_propagate_global_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn _propagate_global_args(&mut self) {$/;"	P	implementation:Command
_propagate_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn _propagate_subcommand(&self, sc: &mut Self) {$/;"	P	implementation:Command
_render_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn _render_version(&self, use_long: bool) -> String {$/;"	P	implementation:Command
_tutorial	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_derive/mod.rs	/^pub mod _tutorial;$/;"	n
_tutorial	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^pub mod _tutorial;$/;"	n
_verify_positionals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^fn _verify_positionals(cmd: &Command) -> bool {$/;"	f
about	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    about: Option<StyledStr>,$/;"	m	struct:Command
about	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn about(mut self, about: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:Command
accepts_more	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub(crate) fn accepts_more(&self, current: usize) -> bool {$/;"	P	implementation:ValueRange
action	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn action(mut self, action: impl IntoResettable<ArgAction>) -> Self {$/;"	P	implementation:Arg
action	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) action: Option<ArgAction>,$/;"	m	struct:Arg
action	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod action;$/;"	n
add_default_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn add_default_value(&self, arg: &Arg, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Parser
add_defaults	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn add_defaults(&self, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Parser
add_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn add_env(&mut self, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Parser
add_index_to	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn add_index_to(&mut self, arg: &Id, idx: usize) {$/;"	P	implementation:ArgMatcher
add_val_to	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn add_val_to(&mut self, arg: &Id, val: AnyValue, raw_val: OsString) {$/;"	P	implementation:ArgMatcher
after_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    after_help: Option<StyledStr>,$/;"	m	struct:Command
after_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn after_help(mut self, help: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:Command
after_long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    after_long_help: Option<StyledStr>,$/;"	m	struct:Command
after_long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn after_long_help(mut self, help: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:Command
alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn alias(mut self, name: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Arg
alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn alias(mut self, name: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Command
alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub fn alias(mut self, name: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:PossibleValue
aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn aliases(mut self, names: impl IntoIterator<Item = impl Into<Str>>) -> Self {$/;"	P	implementation:Arg
aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) aliases: Vec<(Str, bool)>, \/\/ (name, visible)$/;"	m	struct:Arg
aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    aliases: Vec<(Str, bool)>,             \/\/ (name, visible)$/;"	m	struct:Command
aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn aliases(mut self, names: impl IntoIterator<Item = impl Into<Str>>) -> Self {$/;"	P	implementation:Command
aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    aliases: Vec<Str>, \/\/ (name, visible)$/;"	m	struct:PossibleValue
aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub fn aliases(mut self, names: impl IntoIterator<Item = impl Into<Str>>) -> Self {$/;"	P	implementation:PossibleValue
aliases_to	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn aliases_to(&self, name: impl AsRef<std::ffi::OsStr>) -> bool {$/;"	P	implementation:Command
align_to_about	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn align_to_about(&mut self, arg: &Arg, next_line_help: bool, longest: usize) {$/;"	P	implementation:HelpTemplate
all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn all() -> Self;$/;"	P	interface:BitFlags
all_subcommand_names	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn all_subcommand_names(&self) -> impl Iterator<Item = &str> + Captures {$/;"	P	implementation:Command
all_val_groups_empty	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn all_val_groups_empty(&self) -> bool {$/;"	P	implementation:MatchedArg
allow_external_subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn allow_external_subcommands(self, yes: bool) -> Self {$/;"	P	implementation:Command
allow_hyphen_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn allow_hyphen_values(self, yes: bool) -> Self {$/;"	P	implementation:Arg
allow_hyphen_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn allow_hyphen_values(self, yes: bool) -> Self {$/;"	P	implementation:Command
allow_missing_positional	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn allow_missing_positional(self, yes: bool) -> Self {$/;"	P	implementation:Command
allow_negative_numbers	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn allow_negative_numbers(self, yes: bool) -> Self {$/;"	P	implementation:Arg
allow_negative_numbers	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn allow_negative_numbers(self, yes: bool) -> Self {$/;"	P	implementation:Command
ambiguous	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^    fn ambiguous() {$/;"	f	module:test
ansi	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub fn ansi(&self) -> impl std::fmt::Display + '_ {$/;"	P	implementation:StyledStr
any_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/mod.rs	/^mod any_value;$/;"	n
any_value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn any_value_parser(&self) -> &dyn AnyValueParser {$/;"	P	implementation:ValueParser
app_send_sync	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/tests.rs	/^fn app_send_sync() {$/;"	f
app_settings	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod app_settings;$/;"	n
append_keys	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^fn append_keys(keys: &mut Vec<Key>, arg: &Arg, index: usize) {$/;"	f
append_val	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn append_val(&mut self, val: AnyValue, raw_val: OsString) {$/;"	P	implementation:MatchedArg
apply	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn apply<EF: ErrorFormatter>(self) -> Error<EF> {$/;"	P	implementation:Error
arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn arg(mut self, arg_id: impl IntoResettable<Id>) -> Self {$/;"	P	implementation:ArgGroup
arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn arg(mut self, a: impl Into<Arg>) -> Self {$/;"	P	implementation:Command
arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod arg;$/;"	n
arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/macros.rs	/^macro_rules! arg {$/;"	M
arg_group	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod arg_group;$/;"	n
arg_group_expose_get_args_helper	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    fn arg_group_expose_get_args_helper() {$/;"	f	module:test
arg_group_expose_is_multiple_helper	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    fn arg_group_expose_is_multiple_helper() {$/;"	f	module:test
arg_group_send_sync	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    fn arg_group_send_sync() {$/;"	f	module:test
arg_ids	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn arg_ids(&self) -> std::slice::Iter<'_, Id> {$/;"	P	implementation:ArgMatcher
arg_impl	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/macros.rs	/^macro_rules! arg_impl {$/;"	M
arg_internal	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn arg_internal(&mut self, mut arg: Arg) {$/;"	P	implementation:Command
arg_matcher	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/mod.rs	/^mod arg_matcher;$/;"	n
arg_matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/mod.rs	/^mod arg_matches;$/;"	n
arg_next_line_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn arg_next_line_help(&self, arg: &Arg, spec_vals: &str, longest: usize) -> bool {$/;"	P	implementation:HelpTemplate
arg_predicate	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod arg_predicate;$/;"	n
arg_required_else_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn arg_required_else_help(self, yes: bool) -> Self {$/;"	P	implementation:Command
arg_send_sync	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/tests.rs	/^fn arg_send_sync() {$/;"	f
arg_settings	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod arg_settings;$/;"	n
args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn args(mut self, ns: impl IntoIterator<Item = impl Into<Id>>) -> Self {$/;"	P	implementation:ArgGroup
args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub(crate) args: Vec<Id>,$/;"	m	struct:ArgGroup
args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    args: MKeyMap,$/;"	m	struct:Command
args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn args(mut self, args: impl IntoIterator<Item = impl Into<Arg>>) -> Self {$/;"	P	implementation:Command
args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    args: Vec<Arg>,$/;"	m	struct:MKeyMap
args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    pub(crate) fn args(&self) -> impl Iterator<Item = &Arg> {$/;"	P	implementation:MKeyMap
args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn args(&self) -> crate::util::flat_map::Iter<'_, Id, MatchedArg> {$/;"	P	implementation:ArgMatcher
args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub(crate) args: FlatMap<Id, MatchedArg>,$/;"	m	struct:ArgMatches
args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    args: fmt::Arguments<'a>,$/;"	m	struct:Record
args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn args(&mut self, args: fmt::Arguments<'a>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn args(&self) -> &fmt::Arguments<'a> {$/;"	P	implementation:Record
args_conflicts_with_subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn args_conflicts_with_subcommands(self, yes: bool) -> Self {$/;"	P	implementation:Command
args_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    pub(crate) fn args_mut(&mut self) -> impl Iterator<Item = &mut Arg> {$/;"	P	implementation:MKeyMap
args_override_self	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn args_override_self(self, yes: bool) -> Self {$/;"	P	implementation:Command
args_present	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn args_present(&self) -> bool {$/;"	P	implementation:ArgMatches
argument_conflict	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn argument_conflict($/;"	P	implementation:Error
as_debug	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! as_debug {$/;"	M
as_display	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! as_display {$/;"	M
as_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! as_error {$/;"	M
as_internal_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    pub(crate) fn as_internal_str(&self) -> &Str {$/;"	P	implementation:Id
as_list	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn as_list() {$/;"	f	module:tests
as_list	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub fn as_list<S>(source: S) -> AsList<S>$/;"	f
as_list	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub mod as_list {$/;"	n
as_map	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn as_map() {$/;"	f	module:tests
as_map	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub fn as_map<S>(source: S) -> AsMap<S>$/;"	f
as_map	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub mod as_map {$/;"	n
as_os_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^        pub(crate) fn as_os_str(&self) -> &std::ffi::OsStr {$/;"	P	implementation:inner::Inner
as_os_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    pub fn as_os_str(&self) -> &std::ffi::OsStr {$/;"	P	implementation:OsStr
as_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn as_ref(&self) -> &std::ffi::OsStr {$/;"	P	implementation:OsStr
as_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn as_ref(&self) -> &std::path::Path {$/;"	P	implementation:OsStr
as_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	P	implementation:Str
as_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn as_ref(&self) -> &std::ffi::OsStr {$/;"	P	implementation:Str
as_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn as_ref(&self) -> &std::path::Path {$/;"	P	implementation:Str
as_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:Str
as_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:Id
as_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:Key
as_serde	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! as_serde {$/;"	M
as_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^        pub(crate) fn as_str(&self) -> &str {$/;"	P	implementation:inner::Inner
as_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Str
as_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    pub fn as_str(self) -> Option<&'static str> {$/;"	P	implementation:ContextKind
as_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    pub fn as_str(self) -> Option<&'static str> {$/;"	P	implementation:ErrorKind
as_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Id
as_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Key
as_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn as_str(&self) -> &'static str {$/;"	P	implementation:Level
as_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn as_str(&self) -> &'static str {$/;"	P	implementation:LevelFilter
as_sval	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! as_sval {$/;"	M
as_usize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn as_usize(&self) -> usize {$/;"	P	implementation:Style
assert_app	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^pub(crate) fn assert_app(cmd: &Command) {$/;"	f
assert_app_flags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^fn assert_app_flags(cmd: &Command) {$/;"	f
assert_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^fn assert_arg(arg: &Arg) {$/;"	f
assert_arg_flags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^fn assert_arg_flags(arg: &Arg) {$/;"	f
assert_defaults	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^fn assert_defaults<'d>($/;"	f
assert_is_log	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        fn assert_is_log<T: Log + ?Sized>() {}$/;"	f	function:tests::test_foreign_impl
atty	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^mod atty;$/;"	n
augment_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn augment_args(cmd: Command) -> Command {$/;"	P	implementation:Box
augment_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn augment_args(cmd: Command) -> Command;$/;"	P	interface:Args
augment_args_for_update	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn augment_args_for_update(cmd: Command) -> Command {$/;"	P	implementation:Box
augment_args_for_update	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn augment_args_for_update(cmd: Command) -> Command;$/;"	P	interface:Args
augment_subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn augment_subcommands(cmd: Command) -> Command {$/;"	P	implementation:Box
augment_subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn augment_subcommands(cmd: Command) -> Command;$/;"	P	interface:Subcommand
augment_subcommands_for_update	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn augment_subcommands_for_update(cmd: Command) -> Command {$/;"	P	implementation:Box
augment_subcommands_for_update	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn augment_subcommands_for_update(cmd: Command) -> Command;$/;"	P	interface:Subcommand
author	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    author: Option<Str>,$/;"	m	struct:Command
author	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn author(mut self, author: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Command
backtrace	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    backtrace: Option<Backtrace>,$/;"	m	struct:ErrorInner
before_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    before_help: Option<StyledStr>,$/;"	m	struct:Command
before_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn before_help(mut self, help: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:Command
before_long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    before_long_help: Option<StyledStr>,$/;"	m	struct:Command
before_long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn before_long_help(mut self, help: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:Command
best_fit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^    fn best_fit() {$/;"	f	module:test
best_fit_long_common_prefix_issue_4660	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^    fn best_fit_long_common_prefix_issue_4660() {$/;"	f	module:test
bin_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    bin_name: Option<String>,$/;"	m	struct:Command
bin_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn bin_name(mut self, name: impl IntoResettable<String>) -> Self {$/;"	P	implementation:Command
bitflags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^macro_rules! bitflags {$/;"	M
bits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn bits(&self) -> Self::Bits;$/;"	P	interface:BitFlags
blacklist	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) blacklist: Vec<Id>,$/;"	m	struct:Arg
bool	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub const fn bool() -> Self {$/;"	P	implementation:ValueParser
bool	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for bool {$/;"	c
bool	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn bool() -> impl Iterator<Item = Value<'static>> {$/;"	f	module:tests
borrow	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn borrow(&self) -> &std::ffi::OsStr {$/;"	P	implementation:OsStr
borrow	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn borrow(&self) -> &str {$/;"	P	implementation:Str
borrow	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn borrow(&self) -> &str {$/;"	P	implementation:Id
borrow	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn borrow(&self) -> &str {$/;"	P	implementation:Key
bounds	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    bounds: (std::ops::Bound<i64>, std::ops::Bound<i64>),$/;"	m	struct:RangedI64ValueParser
bounds	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    bounds: (std::ops::Bound<u64>, std::ops::Bound<u64>),$/;"	m	struct:RangedU64ValueParser
boxed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^        pub fn boxed<E>(err: E) -> Self$/;"	P	implementation:std_support::Error
btree_map	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn btree_map() {$/;"	f	module:std_support::tests
buf	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    buf: &'a mut Formatter,$/;"	m	struct:DefaultFormat
buf	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    buf: Rc<RefCell<Buffer>>,$/;"	m	struct:Formatter
buf	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    buf: Rc<RefCell<Buffer>>,$/;"	m	struct:Style
buffer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    pub(super) fn buffer(&self) -> Buffer {$/;"	P	implementation:Writer
buffer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt::writer) fn buffer(&self) -> Buffer {$/;"	P	implementation:BufferWriter
buffer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt::writer) fn buffer(&self) -> Buffer {$/;"	P	implementation:BufferWriter
build	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn build(&mut self) {$/;"	P	implementation:Command
build	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn build(&mut self) -> Filter {$/;"	P	implementation:Builder
build	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub fn build(&mut self) -> FormatFn {$/;"	P	implementation:Builder
build	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    pub(crate) fn build(&mut self) -> Writer {$/;"	P	implementation:Builder
build	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn build(&mut self) -> Logger {$/;"	P	implementation:Builder
build	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn build(&self) -> Metadata<'a> {$/;"	P	implementation:MetadataBuilder
build	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn build(&self) -> Record<'a> {$/;"	P	implementation:RecordBuilder
build_conflict_err	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn build_conflict_err($/;"	P	implementation:Validator
build_conflict_err_usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn build_conflict_err_usage($/;"	P	implementation:Validator
builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^pub mod builder;$/;"	n
builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn builder() -> Builder {$/;"	f
builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn builder() -> MetadataBuilder<'a> {$/;"	P	implementation:Metadata
builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn builder() -> RecordBuilder<'a> {$/;"	P	implementation:Record
builder_parse_env_overrides_existing_filters	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn builder_parse_env_overrides_existing_filters() {$/;"	f	module:tests
built	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    built: bool,$/;"	m	struct:Builder
built	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    built: bool,$/;"	m	struct:Builder
built	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    built: bool,$/;"	m	struct:Builder
built	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    built: bool,$/;"	m	struct:Builder
bytes	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt) fn bytes(&self) -> &[u8] {$/;"	P	implementation:Buffer
bytes	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt) fn bytes(&self) -> &[u8] {$/;"	P	implementation:Buffer
capture_debug	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn capture_debug<T>(value: &'v T) -> Self$/;"	P	implementation:Value
capture_display	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn capture_display<T>(value: &'v T) -> Self$/;"	P	implementation:Value
capture_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn capture_error<T>(err: &'v T) -> Self$/;"	P	implementation:Value
capture_serde	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn capture_serde<T>(value: &'v T) -> Self$/;"	P	implementation:Value
capture_sval	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn capture_sval<T>(value: &'v T) -> Self$/;"	P	implementation:Value
cargo_example	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod cargo_example;$/;"	n
cargo_example_derive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod cargo_example_derive;$/;"	n
ch_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/core.rs	/^fn ch_width(_: char) -> usize {$/;"	f
ch_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/core.rs	/^fn ch_width(ch: char) -> usize {$/;"	f
char	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<char> for char {$/;"	c
char	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn char() -> impl Iterator<Item = Value<'static>> {$/;"	f	module:tests
check_auto_traits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^fn check_auto_traits() {$/;"	f
check_auto_traits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^fn check_auto_traits() {$/;"	f
check_auto_traits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/error.rs	/^fn check_auto_traits() {$/;"	f
check_auto_traits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn check_auto_traits() {$/;"	f	module:tests
check_explicit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn check_explicit(&self, arg: &Id, predicate: &ArgPredicate) -> bool {$/;"	P	implementation:ArgMatcher
check_explicit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn check_explicit(&self, predicate: &ArgPredicate) -> bool {$/;"	P	implementation:MatchedArg
check_terminator	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn check_terminator(&self, arg: &Arg, val: &RawOsStr) -> Option<ParseResult> {$/;"	P	implementation:Parser
checker	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^    macro_rules! checker {$/;"	M	function:assert_app_flags
checker	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^    macro_rules! checker {$/;"	M	function:assert_arg_flags
children	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^    children: Vec<usize>,$/;"	m	struct:Child
clear	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub(crate) fn clear(&mut self) {$/;"	P	implementation:Formatter
clear	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt) fn clear(&mut self) {$/;"	P	implementation:Buffer
clear	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt) fn clear(&mut self) {$/;"	P	implementation:Buffer
clone	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:ValueParser
clone	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn clone(&self) -> Level {$/;"	P	implementation:Level
clone	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn clone(&self) -> LevelFilter {$/;"	P	implementation:LevelFilter
clone_any	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn clone_any(&self) -> Box<dyn AnyValueParser> {$/;"	f
clone_any	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn clone_any(&self) -> Box<dyn AnyValueParser>;$/;"	P	interface:AnyValueParser
cmd	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    cmd: &'cmd Command,$/;"	m	struct:HelpTemplate
cmd	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    cmd: &'cmd Command,$/;"	m	struct:Usage
cmd	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    cmd: &'cmd mut Command,$/;"	m	struct:Parser
cmd	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    cmd: &'cmd Command,$/;"	m	struct:Validator
cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn cmp(&self, other: &Arg) -> Ordering {$/;"	P	implementation:Arg
cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^    fn cmp(&self, other: &Self) -> Ordering {$/;"	P	implementation:Flag
cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn cmp(&self, other: &Inner) -> std::cmp::Ordering {$/;"	P	implementation:Inner
cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn cmp(&self, other: &Inner) -> std::cmp::Ordering {$/;"	P	implementation:Inner
cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn cmp(&self, other: &Self) -> std::cmp::Ordering {$/;"	P	implementation:StyledStr
cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    fn cmp(&self, other: &Self) -> std::cmp::Ordering {$/;"	P	implementation:AnyValueId
cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn cmp(&self, other: &Self) -> cmp::Ordering {$/;"	P	implementation:Key
cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn cmp(&self, other: &Level) -> cmp::Ordering {$/;"	P	implementation:Level
cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn cmp(&self, other: &LevelFilter) -> cmp::Ordering {$/;"	P	implementation:LevelFilter
cmp_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^fn cmp_key(c: (Option<Style>, &str)) -> (Option<usize>, &str) {$/;"	f
color	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn color(self, color: ColorChoice) -> Self {$/;"	P	implementation:Command
color	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/mod.rs	/^pub(crate) mod color;$/;"	n
color_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn color_help(&self) -> ColorChoice {$/;"	P	implementation:Command
color_help_when	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    color_help_when: ColorChoice,$/;"	m	struct:ErrorInner
color_when	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    color_when: ColorChoice,$/;"	m	struct:ErrorInner
color_when	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^    color_when: ColorChoice,$/;"	m	struct:Colorizer
command	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod command;$/;"	n
command	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn command() -> Command;$/;"	P	interface:CommandFactory
command	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn command<'help>() -> Command {$/;"	P	implementation:Box
command	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/macros.rs	/^macro_rules! command {$/;"	M
command_for_update	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn command_for_update() -> Command;$/;"	P	interface:CommandFactory
command_for_update	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn command_for_update<'help>() -> Command {$/;"	P	implementation:Box
compare_exchange	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn compare_exchange($/;"	P	implementation:AtomicUsize
conflicts	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub(crate) conflicts: Vec<Id>,$/;"	m	struct:ArgGroup
conflicts_with	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn conflicts_with(mut self, arg_id: impl IntoResettable<Id>) -> Self {$/;"	P	implementation:Arg
conflicts_with	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn conflicts_with(mut self, id: impl IntoResettable<Id>) -> Self {$/;"	P	implementation:ArgGroup
conflicts_with_all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn conflicts_with_all(mut self, names: impl IntoIterator<Item = impl Into<Id>>) -> Self /;"	P	implementation:Arg
conflicts_with_all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn conflicts_with_all(mut self, ns: impl IntoIterator<Item = impl Into<Id>>) -> Self {$/;"	P	implementation:ArgGroup
contains	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn contains(&self, other: Self) -> bool;$/;"	P	interface:BitFlags
contains	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    pub(crate) fn contains<K>(&self, key: K) -> bool$/;"	P	implementation:MKeyMap
contains	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn contains(&self, arg: &Id) -> bool {$/;"	P	implementation:ArgMatcher
contains	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    pub fn contains<Q: ?Sized>(&self, value: &Q) -> bool$/;"	P	implementation:FlatSet
contains	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^    pub(crate) fn contains(&self, req: &T) -> bool {$/;"	f
contains_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn contains_id(&self, id: &str) -> bool {$/;"	P	implementation:ArgMatches
contains_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub fn contains_key<Q: ?Sized>(&self, key: &Q) -> bool$/;"	P	implementation:FlatMap
contains_short	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn contains_short(&self, s: char) -> bool {$/;"	P	implementation:Command
content	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^    content: StyledStr,$/;"	m	struct:Colorizer
context	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    context: FlatMap<ContextKind, ContextValue>,$/;"	m	struct:ErrorInner
context	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn context(&self) -> impl Iterator<Item = (ContextKind, &ContextValue)> {$/;"	P	implementation:Error
context	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^mod context;$/;"	n
core	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^pub(crate) mod core;$/;"	n
count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            fn count(&self) -> usize {$/;"	P	implementation:tests::count::OnePair
count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn count(&self) -> usize {$/;"	f	module:std_support
count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn count() {$/;"	f	module:std_support::tests
count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn count(&self) -> usize {$/;"	P	interface:Source
count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn count(&self) -> usize {$/;"	f
count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn count(&self) -> usize;$/;"	P	interface:Source
count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn count() {$/;"	f	module:tests
count_default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub(crate) fn count_default(source: impl Source) -> usize {$/;"	f
crate_authors	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/macros.rs	/^macro_rules! crate_authors {$/;"	M
crate_description	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/macros.rs	/^macro_rules! crate_description {$/;"	M
crate_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/macros.rs	/^macro_rules! crate_name {$/;"	M
crate_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/macros.rs	/^macro_rules! crate_version {$/;"	M
create_help_usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    fn create_help_usage(&self, incl_reqs: bool) -> StyledStr {$/;"	P	implementation:Usage
create_smart_usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    fn create_smart_usage(&self, used: &[Id]) -> StyledStr {$/;"	P	implementation:Usage
create_usage_no_title	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    pub(crate) fn create_usage_no_title(&self, used: &[Id]) -> Option<StyledStr> {$/;"	P	implementation:Usage
create_usage_with_title	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    pub(crate) fn create_usage_with_title(&self, used: &[Id]) -> Option<StyledStr> {$/;"	P	implementation:Usage
cur_idx	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    cur_idx: Cell<usize>,$/;"	m	struct:Parser
current_disp_ord	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    current_disp_ord: Option<usize>,$/;"	m	struct:Command
current_help_heading	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    current_help_heading: Option<Str>,$/;"	m	struct:Command
custom_format	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub custom_format: Option<FormatFn>,$/;"	m	struct:Builder
debug	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/macros.rs	/^macro_rules! debug {$/;"	M
debug	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! debug {$/;"	M
debug_assert	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn debug_assert(mut self) {$/;"	P	implementation:Command
debug_asserts	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod debug_asserts;$/;"	n
debug_impl	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    fn debug_impl() {$/;"	f	module:test
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/app_settings.rs	/^    fn default() -> Self {$/;"	P	implementation:AppFlags
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    fn default() -> Self {$/;"	P	implementation:ArgFlags
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn default() -> Self {$/;"	P	implementation:Command
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn default() -> Self {$/;"	P	implementation:Inner
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn default() -> Self {$/;"	P	implementation:ValueRange
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn default() -> Self {$/;"	P	implementation:Inner
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn default() -> Self {$/;"	P	implementation:StyledStr
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    fn default() -> Self {$/;"	P	implementation:ValueHint
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn default() -> Self {$/;"	P	implementation:BoolValueParser
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn default() -> Self {$/;"	P	implementation:BoolishValueParser
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn default() -> Self {$/;"	P	implementation:EnumValueParser
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn default() -> Self {$/;"	P	implementation:FalseyValueParser
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn default() -> Self {$/;"	P	implementation:NonEmptyStringValueParser
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn default() -> Self {$/;"	P	implementation:OsStringValueParser
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn default() -> Self {$/;"	P	implementation:PathBufValueParser
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn default() -> Self {$/;"	P	implementation:RangedI64ValueParser
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn default() -> Self {$/;"	P	implementation:RangedU64ValueParser
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn default() -> Self {$/;"	P	implementation:StringValueParser
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:GroupedValues
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:Indices
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:Occurrences
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:OccurrencesRef
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:RawOccurrences
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:RawValues
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:Values
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:ValuesRef
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^    fn default() -> Self {$/;"	P	implementation:ColorChoice
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    fn default() -> Self {$/;"	P	implementation:FlatMap
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    fn default() -> Self {$/;"	P	implementation:FlatSet
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Builder
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Builder
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:TimestampPrecision
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Builder
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:Target
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:WritableTarget
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:WriteStyle
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    default: Option<Cow<'a, str>>,$/;"	m	struct:Var
default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:Env
default_filter_or	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn default_filter_or<V>(mut self, default: V) -> Self$/;"	P	implementation:Env
default_format	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn default_format(&mut self) -> &mut Self {$/;"	P	implementation:Builder
default_level_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn default_level_style(&self, level: Level) -> Style {$/;"	P	implementation:Formatter
default_missing_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) default_missing_vals: Vec<OsStr>,$/;"	m	struct:Arg
default_missing_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    pub(crate) fn default_missing_value(&self) -> Option<&'static std::ffi::OsStr> {$/;"	P	implementation:ArgAction
default_missing_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_missing_value(mut self, val: impl IntoResettable<OsStr>) -> Self {$/;"	P	implementation:Arg
default_missing_value_os	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_missing_value_os(self, val: impl Into<OsStr>) -> Self {$/;"	P	implementation:Arg
default_missing_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_missing_values(self, vals: impl IntoIterator<Item = impl Into<OsStr>>) -> Sel/;"	P	implementation:Arg
default_missing_values_os	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_missing_values_os($/;"	P	implementation:Arg
default_styled_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn default_styled_level(&self, level: Level) -> StyledValue<'static, Level> {$/;"	P	implementation:Formatter
default_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) default_vals: Vec<OsStr>,$/;"	m	struct:Arg
default_vals_ifs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) default_vals_ifs: Vec<(Id, ArgPredicate, Option<OsStr>)>,$/;"	m	struct:Arg
default_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    pub(crate) fn default_value(&self) -> Option<&'static std::ffi::OsStr> {$/;"	P	implementation:ArgAction
default_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_value(mut self, val: impl IntoResettable<OsStr>) -> Self {$/;"	P	implementation:Arg
default_value_if	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_value_if($/;"	P	implementation:Arg
default_value_if_os	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_value_if_os($/;"	P	implementation:Arg
default_value_ifs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_value_ifs($/;"	P	implementation:Arg
default_value_ifs_os	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_value_ifs_os($/;"	P	implementation:Arg
default_value_os	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_value_os(self, val: impl Into<OsStr>) -> Self {$/;"	P	implementation:Arg
default_value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    pub(crate) fn default_value_parser(&self) -> Option<super::ValueParser> {$/;"	P	implementation:ArgAction
default_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_values(mut self, vals: impl IntoIterator<Item = impl Into<OsStr>>) -> Self {$/;"	P	implementation:Arg
default_values_os	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn default_values_os(self, vals: impl IntoIterator<Item = impl Into<OsStr>>) -> Self {$/;"	P	implementation:Arg
default_write_style_or	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn default_write_style_or<V>(mut self, default: V) -> Self$/;"	P	implementation:Env
deref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn deref(&self) -> &std::ffi::OsStr {$/;"	P	implementation:OsStr
deref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn deref(&self) -> &str {$/;"	P	implementation:Str
deref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:ArgMatcher
derive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^mod derive;$/;"	n
derive_serialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn derive_serialize() {$/;"	f	module:serde_support::tests
derive_stream	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn derive_stream() {$/;"	f	module:sval_support::tests
deserialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:Level::deserialize::LevelIdentifier
deserialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:LevelFilter::deserialize::LevelFilterIdentifier
deserialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Level
deserialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:LevelFilter
deserialize_bits_default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external/serde_support.rs	/^pub fn deserialize_bits_default<$/;"	f
detect_duplicate_flags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^fn detect_duplicate_flags(flags: &[Flag], short_or_long: &str) {$/;"	f
did_you_mean	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^fn did_you_mean(styled: &mut StyledStr, context: &str, valid: &ContextValue) {$/;"	f
did_you_mean	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^pub(crate) fn did_you_mean<T, I>(_: &str, _: I) -> Vec<String>$/;"	f
did_you_mean	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^pub(crate) fn did_you_mean<T, I>(v: &str, possible_values: I) -> Vec<String>$/;"	f
did_you_mean_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn did_you_mean_error($/;"	P	implementation:Parser
did_you_mean_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^pub(crate) fn did_you_mean_flag<'a, 'help, I, T>($/;"	f
dimensions	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^pub(crate) fn dimensions() -> (Option<usize>, Option<usize>) {$/;"	f
directives	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    directives: HashMap<Option<String>, LevelFilter>,$/;"	m	struct:Builder
directives	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    directives: Vec<Directive>,$/;"	m	struct:Filter
disable_colored_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn disable_colored_help(self, yes: bool) -> Self {$/;"	P	implementation:Command
disable_help_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn disable_help_flag(self, yes: bool) -> Self {$/;"	P	implementation:Command
disable_help_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn disable_help_subcommand(self, yes: bool) -> Self {$/;"	P	implementation:Command
disable_version_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn disable_version_flag(self, yes: bool) -> Self {$/;"	P	implementation:Command
disp_ord	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) disp_ord: Option<usize>,$/;"	m	struct:Arg
disp_ord	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    disp_ord: Option<usize>,$/;"	m	struct:Command
display_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn display_help(cmd: &Command, styled: StyledStr) -> Self {$/;"	P	implementation:Error
display_help_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn display_help_error(cmd: &Command, styled: StyledStr) -> Self {$/;"	P	implementation:Error
display_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    display_name: Option<String>,$/;"	m	struct:Command
display_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn display_name(mut self, name: impl IntoResettable<String>) -> Self {$/;"	P	implementation:Command
display_order	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn display_order(mut self, ord: impl IntoResettable<usize>) -> Self {$/;"	P	implementation:Arg
display_order	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn display_order(mut self, ord: impl IntoResettable<usize>) -> Self {$/;"	P	implementation:Command
display_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn display_version(cmd: &Command, styled: StyledStr) -> Self {$/;"	P	implementation:Error
display_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn display_width(&self) -> usize {$/;"	P	implementation:StyledStr
display_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/core.rs	/^pub(crate) fn display_width(text: &str) -> usize {$/;"	f
display_width_emojis	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/core.rs	/^    fn display_width_emojis() {$/;"	f	module:tests
display_width_handles_emojis	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn display_width_handles_emojis() {$/;"	f	module:test
display_width_handles_non_ascii	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn display_width_handles_non_ascii() {$/;"	f	module:test
display_width_narrow_emojis	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/core.rs	/^    fn display_width_narrow_emojis() {$/;"	f	module:tests
display_width_narrow_emojis_variant_selector	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/core.rs	/^    fn display_width_narrow_emojis_variant_selector() {$/;"	f	module:tests
display_width_works	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/core.rs	/^    fn display_width_works() {$/;"	f	module:tests
dont_collapse_args_in_usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn dont_collapse_args_in_usage(self, _yes: bool) -> Self {$/;"	P	implementation:Command
dont_delimit_trailing_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn dont_delimit_trailing_values(self, yes: bool) -> Self {$/;"	P	implementation:Command
downcast_into	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    pub(crate) fn downcast_into<T: std::any::Any + Clone + Send + Sync>(self) -> Result<T, Self>/;"	P	implementation:AnyValue
downcast_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    pub(crate) fn downcast_ref<T: std::any::Any + Clone + Send + Sync + 'static>($/;"	P	implementation:AnyValue
downcast_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn downcast_ref<T: 'static>(&self) -> Option<&T> {$/;"	P	implementation:Value
duplicate_tip	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^fn duplicate_tip(cmd: &Command, first: &Arg, second: &Arg) -> &'static str {$/;"	f
emojis_have_correct_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/core.rs	/^    fn emojis_have_correct_width() {$/;"	f	module:tests
empty	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn empty() -> Self;$/;"	P	interface:BitFlags
empty_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^    pub fn empty_flag() -> Self {$/;"	P	implementation:ParseError
empty_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn empty_value(cmd: &Command, good_vals: &[String], arg: String) -> Self {$/;"	P	implementation:Error
enabled	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn enabled(&self, metadata: &Metadata) -> bool {$/;"	P	implementation:Filter
enabled	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^fn enabled(directives: &[Directive], level: Level, target: &str) -> bool {$/;"	f
enabled	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn enabled(&self, metadata: &Metadata) -> bool {$/;"	P	implementation:Logger
enabled	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn enabled(&self, _: &Metadata) -> bool {$/;"	P	implementation:NopLogger
enabled	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn enabled(&self, metadata: &Metadata) -> bool {$/;"	f
enabled	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn enabled(&self, metadata: &Metadata) -> bool;$/;"	P	interface:Log
end_bound	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn end_bound(&self) -> std::ops::Bound<&usize> {$/;"	P	implementation:ValueRange
end_inclusive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    end_inclusive: usize,$/;"	m	struct:ValueRange
ensure_tests_cover_level_universe	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn ensure_tests_cover_level_universe() {$/;"	f	module:tests
ensure_typed_applies_to_parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn ensure_typed_applies_to_parse() {$/;"	f	module:test
entry	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn entry(&mut self, arg: Id) -> crate::util::Entry<Id, MatchedArg> {$/;"	P	implementation:ArgMatcher
entry	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub fn entry(&mut self, key: K) -> Entry<K, V> {$/;"	P	implementation:FlatMap
env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn env(mut self, name: impl IntoResettable<OsStr>) -> Self {$/;"	P	implementation:Arg
env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) env: Option<(OsStr, Option<OsString>)>,$/;"	m	struct:Arg
env_get_filter_reads_from_default_if_var_not_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn env_get_filter_reads_from_default_if_var_not_set() {$/;"	f	module:tests
env_get_filter_reads_from_var_if_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn env_get_filter_reads_from_var_if_set() {$/;"	f	module:tests
env_get_write_style_reads_from_default_if_var_not_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn env_get_write_style_reads_from_default_if_var_not_set() {$/;"	f	module:tests
env_get_write_style_reads_from_var_if_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn env_get_write_style_reads_from_var_if_set() {$/;"	f	module:tests
env_os	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn env_os(self, name: impl Into<OsStr>) -> Self {$/;"	P	implementation:Arg
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn eq(&self, other: &Arg) -> bool {$/;"	P	implementation:Arg
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^    fn eq(&self, other: &Flag) -> bool {$/;"	P	implementation:Flag
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn eq(&self, other: &&std::ffi::OsStr) -> bool {$/;"	P	implementation:OsStr
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn eq(&self, other: &&str) -> bool {$/;"	P	implementation:OsStr
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn eq(&self, other: &Inner) -> bool {$/;"	P	implementation:Inner
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn eq(&self, other: &OsStr) -> bool {$/;"	P	implementation:OsStr
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn eq(&self, other: &OsStr) -> bool {$/;"	P	implementation:OsString
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn eq(&self, other: &OsStr) -> bool {$/;"	P	implementation:String
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn eq(&self, other: &OsStr) -> bool {$/;"	P	implementation:str
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn eq(&self, other: &std::ffi::OsString) -> bool {$/;"	P	implementation:OsStr
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn eq(&self, other: &std::string::String) -> bool {$/;"	P	implementation:OsStr
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	P	implementation:OsStr
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn eq(&self, other: &&std::ffi::OsStr) -> bool {$/;"	P	implementation:Str
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn eq(&self, other: &&str) -> bool {$/;"	P	implementation:Str
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn eq(&self, other: &Inner) -> bool {$/;"	P	implementation:Inner
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn eq(&self, other: &Str) -> bool {$/;"	P	implementation:OsStr
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn eq(&self, other: &Str) -> bool {$/;"	P	implementation:String
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn eq(&self, other: &Str) -> bool {$/;"	P	implementation:str
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn eq(&self, other: &std::ffi::OsStr) -> bool {$/;"	P	implementation:Str
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn eq(&self, other: &std::string::String) -> bool {$/;"	P	implementation:Str
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	P	implementation:Str
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    fn eq(&self, rhs: &&str) -> bool {$/;"	P	implementation:KeyType
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    fn eq(&self, rhs: &OsStr) -> bool {$/;"	P	implementation:KeyType
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    fn eq(&self, rhs: &char) -> bool {$/;"	P	implementation:KeyType
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    fn eq(&self, rhs: &str) -> bool {$/;"	P	implementation:KeyType
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    fn eq(&self, rhs: &usize) -> bool {$/;"	P	implementation:KeyType
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:AnyValueId
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    fn eq(&self, other: &MatchedArg) -> bool {$/;"	P	implementation:MatchedArg
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn eq(&self, other: &&str) -> bool {$/;"	P	implementation:Id
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn eq(&self, other: &Id) -> bool {$/;"	P	implementation:Str
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn eq(&self, other: &Id) -> bool {$/;"	P	implementation:String
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn eq(&self, other: &Id) -> bool {$/;"	P	implementation:str
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn eq(&self, other: &Str) -> bool {$/;"	P	implementation:Id
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn eq(&self, other: &std::string::String) -> bool {$/;"	P	implementation:Id
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	P	implementation:Id
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn eq(&self, other: &Key<'ko>) -> bool {$/;"	P	implementation:Key
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn eq(&self, other: &Level) -> bool {$/;"	P	implementation:Level
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn eq(&self, other: &Level) -> bool {$/;"	P	implementation:LevelFilter
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn eq(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:Level
eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn eq(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:LevelFilter
eq_ignore_ascii_case	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^fn eq_ignore_ascii_case(a: &str, b: &str) -> bool {$/;"	f
eq_ignore_case	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/mod.rs	/^pub(crate) fn eq_ignore_case(left: &str, right: &str) -> bool {$/;"	f
error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn error(&mut self, kind: ErrorKind, message: impl std::fmt::Display) -> Error {$/;"	P	implementation:Command
error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn error(&mut self, msg: impl Into<String>) {$/;"	P	implementation:StyledStr
error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^pub mod error;$/;"	n
error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/mod.rs	/^mod error;$/;"	n
error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/mod.rs	/^mod error;$/;"	n
error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! error {$/;"	M
escape	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^fn escape(s: impl AsRef<str>) -> String {$/;"	f
escaped_positional	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod escaped_positional;$/;"	n
escaped_positional_derive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod escaped_positional_derive;$/;"	n
example_generated	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^pub mod example_generated;$/;"	n
exclusive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn exclusive(self, yes: bool) -> Self {$/;"	P	implementation:Arg
exit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn exit(&self) -> ! {$/;"	P	implementation:Error
expecting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external/serde_support.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize_bits_default
expecting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Level::deserialize::LevelEnum
expecting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Level::deserialize::LevelIdentifier
expecting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:LevelFilter::deserialize::LevelFilterEnum
expecting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:LevelFilter::deserialize::LevelFilterIdentifier
extend	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn extend($/;"	P	implementation:StyledStr
extend	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {$/;"	P	implementation:FlatSet
extend_context_unchecked	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn extend_context_unchecked<const N: usize>($/;"	P	implementation:Error
extend_unchecked	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub(crate) fn extend_unchecked(&mut self, iter: impl IntoIterator<Item = (K, V)>) {$/;"	P	implementation:FlatMap
external	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^mod external;$/;"	n
external_subcommand_value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn external_subcommand_value_parser($/;"	P	implementation:Command
external_value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    external_value_parser: Option<super::ValueParser>,$/;"	m	struct:Command
fails_arg_required_unless	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn fails_arg_required_unless(&self, a: &Arg, matcher: &ArgMatcher) -> bool {$/;"	P	implementation:Validator
features	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/mod.rs	/^pub(crate) mod features;$/;"	n
file	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    file: Option<MaybeStaticStr<'a>>,$/;"	m	struct:Record
file	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn file(&mut self, file: Option<&'a str>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
file	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn file(&self) -> Option<&'a str> {$/;"	P	implementation:Record
file_static	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn file_static(&mut self, file: Option<&'static str>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
file_static	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn file_static(&self) -> Option<&'static str> {$/;"	P	implementation:Record
fill_in_global_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    fn fill_in_global_values($/;"	P	implementation:ArgMatcher
filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    filter: Option<inner::Filter>,$/;"	m	struct:Builder
filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    filter: Option<inner::Filter>,$/;"	m	struct:Filter
filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn filter(&mut self, module: Option<&str>, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn filter(&self) -> LevelFilter {$/;"	P	implementation:Filter
filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    filter: Filter,$/;"	m	struct:Logger
filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    filter: Var<'a>,$/;"	m	struct:Env
filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    filter: filter::Builder,$/;"	m	struct:Builder
filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter(&mut self, module: Option<&str>, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter(&self) -> LevelFilter {$/;"	P	implementation:Logger
filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter<E>(mut self, filter_env: E) -> Self$/;"	P	implementation:Env
filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub mod filter;$/;"	n
filter_beginning_longest_match	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn filter_beginning_longest_match() {$/;"	f	module:tests
filter_info	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn filter_info() {$/;"	f	module:tests
filter_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn filter_level(&mut self, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter_level(&mut self, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter_module	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn filter_module(&mut self, module: &str, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter_module	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter_module(&mut self, module: &str, level: LevelFilter) -> &mut Self {$/;"	P	implementation:Builder
filter_or	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter_or<E, V>(mut self, filter_env: E, default: V) -> Self$/;"	P	implementation:Env
find	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod find;$/;"	n
find	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn find(&self, arg_id: &Id) -> Option<&Arg> {$/;"	P	implementation:Command
find_duplicates	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^fn find_duplicates<T: PartialEq>(slice: &[T]) -> impl Iterator<Item = (&T, &T)> {$/;"	f
find_group	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn find_group(&self, group_id: &Id) -> Option<&ArgGroup> {$/;"	P	implementation:Command
find_long_subcmd	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn find_long_subcmd(&self, long: &str) -> Option<&str> {$/;"	P	implementation:Command
find_short_subcmd	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn find_short_subcmd(&self, c: char) -> Option<&str> {$/;"	P	implementation:Command
find_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn find_subcommand(&self, name: impl AsRef<std::ffi::OsStr>) -> Option<&Command> {$/;"	P	implementation:Command
find_subcommand_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn find_subcommand_mut($/;"	P	implementation:Command
find_words_ascii_space	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/word_separators.rs	/^pub(crate) fn find_words_ascii_space(line: &str) -> impl Iterator<Item = &'_ str> + '_ {$/;"	f
finish_header	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn finish_header(&mut self) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
first	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn first(&self) -> Option<&AnyValue> {$/;"	P	implementation:MatchedArg
first_raw	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn first_raw(&self) -> Option<&OsString> {$/;"	P	implementation:MatchedArg
flag_ambiguous	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^    fn flag_ambiguous() {$/;"	f	module:test
flag_best_fit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^    fn flag_best_fit() {$/;"	f	module:test
flag_display_count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn flag_display_count() {$/;"	f	module:test
flag_display_long	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn flag_display_long() {$/;"	f	module:test
flag_display_multiple_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn flag_display_multiple_aliases() {$/;"	f	module:test
flag_display_multiple_short_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn flag_display_multiple_short_aliases() {$/;"	f	module:test
flag_display_short	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn flag_display_short() {$/;"	f	module:test
flag_display_single_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn flag_display_single_alias() {$/;"	f	module:test
flag_display_single_short_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn flag_display_single_short_alias() {$/;"	f	module:test
flag_missing_letter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^    fn flag_missing_letter() {$/;"	f	module:test
flag_subcmd_at	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    flag_subcmd_at: Option<usize>,$/;"	m	struct:Parser
flag_subcmd_skip	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    flag_subcmd_skip: usize,$/;"	m	struct:Parser
flag_unrelated	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^    fn flag_unrelated() {$/;"	f	module:test
flat_map	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/mod.rs	/^pub(crate) mod flat_map;$/;"	n
flat_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/mod.rs	/^pub(crate) mod flat_set;$/;"	n
float	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn float() -> impl Iterator<Item = Value<'static>> {$/;"	f	module:tests
flush	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^                    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:DefaultFormat::write_args::IndentWrapper
flush	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Formatter
flush	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt) fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Buffer
flush	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt) fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Buffer
flush	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn flush(&self) {}$/;"	P	implementation:Logger
flush	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn flush(&self) {$/;"	f
flush	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn flush(&self) {}$/;"	P	implementation:NopLogger
flush	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn flush(&self);$/;"	P	interface:Log
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:tests::FmtFlags
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseError
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Arg
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:Arg
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Command
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:OsStr
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	P	implementation:ValueRange
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:Str
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	P	implementation:AnsiDisplay
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	P	implementation:StyledStr
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> Result<(), std::fmt::Error> {$/;"	P	implementation:ValueParser
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:ContextKind
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/context.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:ContextValue
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/kind.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:ErrorKind
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn fmt(&self, _: &mut Formatter) -> fmt::Result {$/;"	P	implementation:Backtrace
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:Backtrace
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:Error
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	P	implementation:Colorizer
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/mod.rs	/^pub(crate) mod fmt;$/;"	n
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/error.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	P	implementation:MatchesError
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:AnyValue
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {$/;"	P	implementation:AnyValueId
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:ColorChoice
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:Id
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Builder
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Filter
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/regex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Filter
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/string.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Filter
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^            fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Timestamp::fmt::TimestampValue
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Timestamp
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^                    fmt: &'a mut DefaultFormat<'b>,$/;"	m	struct:DefaultFormat::write_args::IndentWrapper
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Formatter
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Writer
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Target
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:WritableTarget
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Style
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:std_fmt_impls::Builder
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:std_fmt_impls::Logger
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub mod fmt;$/;"	n
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Key
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Value
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:KeyValues
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Level
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:LevelFilter
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseLevelError
fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SetLoggerError
fn	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub const fn new() -> Self {$/;"	C	implementation:StyledStr
fn	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub const fn bool() -> Self {$/;"	C	implementation:ValueParser
fn	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub const fn os_string() -> Self {$/;"	C	implementation:ValueParser
fn	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub const fn path_buf() -> Self {$/;"	C	implementation:ValueParser
fn	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub const fn string() -> Self {$/;"	C	implementation:ValueParser
fn	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    const fn new(v: usize) -> AtomicUsize {$/;"	C	implementation:AtomicUsize
foo	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        mod foo {$/;"	n	module:tests::t1
foo	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^        fn foo<T: Send + Sync>(_: T) {}$/;"	f	function:test::arg_group_send_sync
foo	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/tests.rs	/^    fn foo<T: Send + Sync>(_: T) {}$/;"	f	function:app_send_sync
foo	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/tests.rs	/^    fn foo<T: Send + Sync>(_: T) {}$/;"	f	function:arg_send_sync
for_app	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn for_app(kind: ErrorKind, cmd: &Command, styled: StyledStr) -> Self {$/;"	P	implementation:Error
forall	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        fn forall<T: Log + ?Sized>() {$/;"	f	function:tests::test_foreign_impl
format	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn format(&mut self, cmd: &Command, usage: Option<StyledStr>) {$/;"	P	implementation:Message
format	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn format(mut self, cmd: &mut Command) -> Self {$/;"	P	implementation:Error
format	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^mod format;$/;"	n
format	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    format: FormatFn,$/;"	m	struct:Logger
format	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    format: fmt::Builder,$/;"	m	struct:Builder
format	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format<F: 'static>(&mut self, format: F) -> &mut Self$/;"	P	implementation:Builder
format_bounds	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn format_bounds(&self) -> String {$/;"	P	implementation:RangedI64ValueParser
format_bounds	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn format_bounds(&self) -> String {$/;"	P	implementation:RangedU64ValueParser
format_empty_target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_empty_target() {$/;"	f	module:tests
format_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^fn format_error<I: CommandFactory>(err: crate::Error) -> crate::Error {$/;"	f
format_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^    fn format_error(error: &crate::error::Error<Self>) -> StyledStr {$/;"	P	implementation:KindFormatter
format_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^    fn format_error(error: &crate::error::Error<Self>) -> StyledStr {$/;"	P	implementation:RichFormatter
format_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^    fn format_error(error: &crate::error::Error<Self>) -> StyledStr;$/;"	P	interface:ErrorFormatter
format_error_message	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^pub(crate) fn format_error_message($/;"	f
format_group	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn format_group(&self, g: &Id) -> StyledStr {$/;"	P	implementation:Command
format_indent	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub format_indent: Option<usize>,$/;"	m	struct:Builder
format_indent	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_indent(&mut self, indent: Option<usize>) -> &mut Self {$/;"	P	implementation:Builder
format_indent_spaces	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_indent_spaces() {$/;"	f	module:tests
format_indent_spaces_no_header	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_indent_spaces_no_header() {$/;"	f	module:tests
format_indent_zero_spaces	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_indent_zero_spaces() {$/;"	f	module:tests
format_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub format_level: bool,$/;"	m	struct:Builder
format_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_level(&mut self, write: bool) -> &mut Self {$/;"	P	implementation:Builder
format_module_path	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub format_module_path: bool,$/;"	m	struct:Builder
format_module_path	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_module_path(&mut self, write: bool) -> &mut Self {$/;"	P	implementation:Builder
format_no_header	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_no_header() {$/;"	f	module:tests
format_no_target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_no_target() {$/;"	f	module:tests
format_parse_case	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        fn format_parse_case(flags: FmtFlags) {$/;"	f	function:tests::test_display_from_str_roundtrip
format_suffix	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_suffix() {$/;"	f	module:tests
format_suffix	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub format_suffix: &'static str,$/;"	m	struct:Builder
format_suffix	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_suffix(&mut self, suffix: &'static str) -> &mut Self {$/;"	P	implementation:Builder
format_suffix_with_indent	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_suffix_with_indent() {$/;"	f	module:tests
format_target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_target() {$/;"	f	module:tests
format_target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub format_target: bool,$/;"	m	struct:Builder
format_target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_target(&mut self, write: bool) -> &mut Self {$/;"	P	implementation:Builder
format_timestamp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub format_timestamp: Option<TimestampPrecision>,$/;"	m	struct:Builder
format_timestamp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_timestamp(&mut self, timestamp: Option<fmt::TimestampPrecision>) -> &mut Self /;"	P	implementation:Builder
format_timestamp_micros	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_timestamp_micros(&mut self) -> &mut Self {$/;"	P	implementation:Builder
format_timestamp_millis	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_timestamp_millis(&mut self) -> &mut Self {$/;"	P	implementation:Builder
format_timestamp_nanos	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_timestamp_nanos(&mut self) -> &mut Self {$/;"	P	implementation:Builder
format_timestamp_secs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_timestamp_secs(&mut self) -> &mut Self {$/;"	P	implementation:Builder
format_with_header	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_with_header() {$/;"	f	module:tests
formatted	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn formatted(&self) -> Cow<'_, StyledStr> {$/;"	P	implementation:Error
formatted	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn formatted(&self) -> Cow<StyledStr> {$/;"	P	implementation:Message
found	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        found: Option<Value<'v>>,$/;"	m	struct:get_default::Get
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn from(a: &Arg) -> Self {$/;"	P	implementation:Arg
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    fn from(g: &ArgGroup) -> Self {$/;"	P	implementation:ArgGroup
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_predicate.rs	/^    fn from(other: S) -> Self {$/;"	P	implementation:ArgPredicate
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn from(cmd: &'_ Command) -> Self {$/;"	P	implementation:Command
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(id: &'_ OsStr) -> Self {$/;"	P	implementation:OsStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(id: &'_ Str) -> Self {$/;"	P	implementation:OsStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(id: Str) -> Self {$/;"	P	implementation:OsStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(name: &'_ &'static std::ffi::OsStr) -> Self {$/;"	P	implementation:OsStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(name: &'_ &'static str) -> Self {$/;"	P	implementation:OsStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(name: &'_ std::ffi::OsString) -> Self {$/;"	P	implementation:OsStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(name: &'_ std::string::String) -> Self {$/;"	P	implementation:OsStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(name: &'static std::ffi::OsStr) -> Self {$/;"	P	implementation:OsStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(name: &'static str) -> Self {$/;"	P	implementation:OsStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(name: OsStr) -> Self {$/;"	P	implementation:OsString
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(name: OsStr) -> Self {$/;"	P	implementation:PathBuf
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(name: std::ffi::OsString) -> Self {$/;"	P	implementation:OsStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn from(name: std::string::String) -> Self {$/;"	P	implementation:OsStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    fn from(s: S) -> Self {$/;"	P	implementation:PossibleValue
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from(_: std::ops::RangeFull) -> Self {$/;"	P	implementation:ValueRange
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from(fixed: usize) -> Self {$/;"	P	implementation:ValueRange
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from(range: std::ops::Range<usize>) -> Self {$/;"	P	implementation:ValueRange
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from(range: std::ops::RangeFrom<usize>) -> Self {$/;"	P	implementation:ValueRange
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from(range: std::ops::RangeInclusive<usize>) -> Self {$/;"	P	implementation:ValueRange
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from(range: std::ops::RangeTo<usize>) -> Self {$/;"	P	implementation:ValueRange
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from(range: std::ops::RangeToInclusive<usize>) -> Self {$/;"	P	implementation:ValueRange
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn from(other: Option<T>) -> Self {$/;"	P	implementation:Resettable
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn from(other: T) -> Self {$/;"	P	implementation:Resettable
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn from(id: &'_ Str) -> Self {$/;"	P	implementation:Str
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn from(name: &'_ &'static str) -> Self {$/;"	P	implementation:Str
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn from(name: &'_ std::string::String) -> Self {$/;"	P	implementation:Str
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn from(name: &'static str) -> Self {$/;"	P	implementation:Str
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn from(name: Str) -> Self {$/;"	P	implementation:OsString
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn from(name: Str) -> Self {$/;"	P	implementation:PathBuf
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn from(name: Str) -> Self {$/;"	P	implementation:String
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn from(name: Str) -> Self {$/;"	P	implementation:Vec
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn from(name: std::string::String) -> Self {$/;"	P	implementation:Str
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn from(name: &'_ &'static str) -> Self {$/;"	P	implementation:StyledStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn from(name: &'_ std::string::String) -> Self {$/;"	P	implementation:StyledStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn from(name: &'static str) -> Self {$/;"	P	implementation:StyledStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn from(name: std::string::String) -> Self {$/;"	P	implementation:StyledStr
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(p: P) -> Self {$/;"	f
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(p: _AnonymousValueParser) -> Self {$/;"	P	implementation:ValueParser
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(range: B) -> Self {$/;"	P	implementation:RangedI64ValueParser
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(range: B) -> Self {$/;"	P	implementation:RangedU64ValueParser
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(value: std::ops::Range<i64>) -> Self {$/;"	P	implementation:ValueParser
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(value: std::ops::RangeFrom<i64>) -> Self {$/;"	P	implementation:ValueParser
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(value: std::ops::RangeFull) -> Self {$/;"	P	implementation:ValueParser
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(value: std::ops::RangeInclusive<i64>) -> Self {$/;"	P	implementation:ValueParser
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(value: std::ops::RangeTo<i64>) -> Self {$/;"	P	implementation:ValueParser
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(value: std::ops::RangeToInclusive<i64>) -> Self {$/;"	P	implementation:ValueParser
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(values: I) -> Self {$/;"	f
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(values: Vec<P>) -> Self {$/;"	f
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn from(values: [P; C]) -> Self {$/;"	f
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn from(e: fmt::Error) -> Self {$/;"	P	implementation:Error
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn from(e: io::Error) -> Self {$/;"	P	implementation:Error
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn from(inner: String) -> Self {$/;"	P	implementation:Message
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn from(inner: StyledStr) -> Self {$/;"	P	implementation:Message
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    fn from(_: &'a A) -> Self {$/;"	P	implementation:AnyValueId
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn from(id: &'_ Id) -> Self {$/;"	P	implementation:Id
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn from(name: &'_ &'static str) -> Self {$/;"	P	implementation:Id
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn from(name: &'_ Str) -> Self {$/;"	P	implementation:Id
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn from(name: &'_ std::string::String) -> Self {$/;"	P	implementation:Id
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn from(name: &'static str) -> Self {$/;"	P	implementation:Id
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn from(name: Id) -> Self {$/;"	P	implementation:Str
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn from(name: Id) -> Self {$/;"	P	implementation:String
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn from(name: Str) -> Self {$/;"	P	implementation:Id
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    fn from(name: std::string::String) -> Self {$/;"	P	implementation:Id
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn from(target: Target) -> Self {$/;"	P	implementation:WritableTarget
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn from(filter_env: T) -> Self {$/;"	f
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^        fn from(err: io::Error) -> Self {$/;"	P	implementation:std_support::Error
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    fn from(_: fmt::Error) -> Self {$/;"	P	implementation:Error
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn from(s: &'k str) -> Self {$/;"	P	implementation:Key
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        fn from(v: &'v String) -> Self {$/;"	P	implementation:std_support::Value
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from(v: &'v std::num::NonZeroI128) -> Value<'v> {$/;"	P	implementation:Value
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from(v: &'v std::num::NonZeroU128) -> Value<'v> {$/;"	P	implementation:Value
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from(value: &'v i128) -> Self {$/;"	P	implementation:Value
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from(value: &'v str) -> Self {$/;"	P	implementation:Value
from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from(value: &'v u128) -> Self {$/;"	P	implementation:Value
from_any	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_any<T>(value: &'v T) -> Self$/;"	P	implementation:Value
from_arg_matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn from_arg_matches(matches: &ArgMatches) -> Result<Self, Error> {$/;"	P	implementation:Box
from_arg_matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn from_arg_matches(matches: &ArgMatches) -> Result<Self, Error>;$/;"	P	interface:FromArgMatches
from_arg_matches_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn from_arg_matches_mut(matches: &mut ArgMatches) -> Result<Self, Error> {$/;"	P	implementation:Box
from_arg_matches_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn from_arg_matches_mut(matches: &mut ArgMatches) -> Result<Self, Error> {$/;"	P	interface:FromArgMatches
from_bits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn from_bits(bits: Self::Bits) -> Option<Self>$/;"	P	interface:BitFlags
from_bits_retain	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn from_bits_retain(bits: Self::Bits) -> Self;$/;"	P	interface:BitFlags
from_bits_truncate	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn from_bits_truncate(bits: Self::Bits) -> Self;$/;"	P	interface:BitFlags
from_debug	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_debug<T>(value: &'v T) -> Self$/;"	P	implementation:Value
from_default_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn from_default_env() -> Self {$/;"	P	implementation:Builder
from_default_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn from_default_env() -> Self {$/;"	P	implementation:Logger
from_display	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_display<T>(value: &'v T) -> Self$/;"	P	implementation:Value
from_dyn_debug	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_dyn_debug(value: &'v dyn fmt::Debug) -> Self {$/;"	P	implementation:Value
from_dyn_display	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_dyn_display(value: &'v dyn fmt::Display) -> Self {$/;"	P	implementation:Value
from_dyn_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_dyn_error(err: &'v (dyn std::error::Error + 'static)) -> Self {$/;"	P	implementation:Value
from_dyn_sval	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_dyn_sval(value: &'v dyn self::sval::value::Value) -> Self {$/;"	P	implementation:Value
from_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn from_env(env: &str) -> Builder {$/;"	P	implementation:Builder
from_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn from_env<'a, E>(env: E) -> Self$/;"	P	implementation:Builder
from_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn from_env<'a, E>(env: E) -> Self$/;"	P	implementation:Logger
from_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn from_env<'a, E>(env: E) -> Builder$/;"	f
from_fixed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from_fixed() {$/;"	f	module:test
from_fixed_empty	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from_fixed_empty() {$/;"	f	module:test
from_iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> Self {$/;"	P	implementation:FlatSet
from_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn from_name(name: &str) -> Option<Self>$/;"	P	interface:BitFlags
from_range	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from_range() {$/;"	f	module:test
from_range_from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from_range_from() {$/;"	f	module:test
from_range_full	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from_range_full() {$/;"	f	module:test
from_range_inclusive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from_range_inclusive() {$/;"	f	module:test
from_range_to	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from_range_to() {$/;"	f	module:test
from_range_to_inclusive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn from_range_to_inclusive() {$/;"	f	module:test
from_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^        pub(crate) fn from_ref(name: &std::ffi::OsStr) -> Self {$/;"	P	implementation:inner::Inner
from_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    pub(crate) fn from_ref(name: &std::ffi::OsStr) -> Self {$/;"	P	implementation:OsStr
from_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^        pub(crate) fn from_ref(name: &str) -> Self {$/;"	P	implementation:inner::Inner
from_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    pub(crate) fn from_ref(name: &str) -> Self {$/;"	P	implementation:Str
from_serde	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_serde<T>(value: &'v T) -> Self$/;"	P	implementation:Value
from_static_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^        pub(crate) fn from_static_ref(name: &'static std::ffi::OsStr) -> Self {$/;"	P	implementation:inner::Inner
from_static_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    pub(crate) fn from_static_ref(name: &'static std::ffi::OsStr) -> Self {$/;"	P	implementation:OsStr
from_static_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^        pub(crate) fn from_static_ref(name: &'static str) -> Self {$/;"	P	implementation:inner::Inner
from_static_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    pub(crate) fn from_static_ref(name: &'static str) -> Self {$/;"	P	implementation:Str
from_static_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    pub(crate) fn from_static_ref(name: &'static str) -> Self {$/;"	P	implementation:Id
from_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        fn from_str(flags: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:tests::FmtFlags
from_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_hint.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	P	implementation:ValueHint
from_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn from_str(input: &str, ignore_case: bool) -> Result<Self, String> {$/;"	P	interface:ValueEnum
from_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:ColorChoice
from_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    pub fn from_str(key: &'k str) -> Self {$/;"	P	implementation:Key
from_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn from_str(level: &str) -> Result<Level, Self::Err> {$/;"	P	implementation:Level
from_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn from_str(level: &str) -> Result<LevelFilter, Self::Err> {$/;"	P	implementation:LevelFilter
from_string	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^        pub(crate) fn from_string(name: std::ffi::OsString) -> Self {$/;"	P	implementation:inner::Inner
from_string	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    pub(crate) fn from_string(name: std::ffi::OsString) -> Self {$/;"	P	implementation:OsStr
from_string	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^        pub(crate) fn from_string(name: std::string::String) -> Self {$/;"	P	implementation:inner::Inner
from_string	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    pub(crate) fn from_string(name: std::string::String) -> Self {$/;"	P	implementation:Str
from_sval	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_sval<T>(value: &'v T) -> Self$/;"	P	implementation:Value
from_usize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn from_usize(u: usize) -> Option<Level> {$/;"	P	implementation:Level
from_usize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn from_usize(u: usize) -> Option<LevelFilter> {$/;"	P	implementation:LevelFilter
from_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    pub(super) fn from_value(err: value_bag::Error) -> Self {$/;"	P	implementation:Error
from_value_bag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from_value_bag<T>(value: T) -> Self$/;"	P	implementation:Value
func	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    func: F,$/;"	m	struct:MapValueParser
func	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    func: F,$/;"	m	struct:TryMapValueParser
g_settings	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    g_settings: AppFlags,$/;"	m	struct:Command
gather_arg_direct_conflicts	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^fn gather_arg_direct_conflicts(cmd: &Command, arg: &Arg) -> Vec<Id> {$/;"	f
gather_conflicts	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn gather_conflicts(&self, cmd: &Command, arg_id: &Id) -> Vec<Id> {$/;"	P	implementation:Conflicts
gather_direct_conflicts	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^fn gather_direct_conflicts(cmd: &Command, id: &Id) -> Vec<Id> {$/;"	f
gather_group_direct_conflicts	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^fn gather_group_direct_conflicts(group: &ArgGroup) -> Vec<Id> {$/;"	f
gather_requires	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn gather_requires(&mut self, matcher: &ArgMatcher) {$/;"	P	implementation:Validator
ge	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn ge(&self, other: &Level) -> bool {$/;"	P	implementation:Level
ge	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn ge(&self, other: &Level) -> bool {$/;"	P	implementation:LevelFilter
ge	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn ge(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:Level
ge	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn ge(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:LevelFilter
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn get(&self, kind: ContextKind) -> Option<&ContextValue> {$/;"	P	implementation:Error
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    pub(crate) fn get<K: ?Sized>(&self, key: &K) -> Option<&Arg>$/;"	P	implementation:MKeyMap
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn get(&self, arg: &Id) -> Option<&MatchedArg> {$/;"	P	implementation:ArgMatcher
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub fn get<Q: ?Sized>(&self, k: &Q) -> Option<&V>$/;"	P	implementation:FlatMap
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn get(&self) -> Option<String> {$/;"	P	implementation:Var
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	P	implementation:tests::count::OnePair
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn get() {$/;"	f	module:std_support::tests
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	f	module:std_support
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn get() {$/;"	f	module:tests
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	P	interface:Source
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	f
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn get<'v>(&'v self, key: Key) -> Option<Value<'v>>;$/;"	P	interface:Source
get	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn get(&self) -> &'a str {$/;"	P	implementation:MaybeStaticStr
get_about	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_about(&self) -> Option<&StyledStr> {$/;"	P	implementation:Command
get_action	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_action(&self) -> &super::ArgAction {$/;"	P	implementation:Arg
get_after_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_after_help(&self) -> Option<&StyledStr> {$/;"	P	implementation:Command
get_after_long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_after_long_help(&self) -> Option<&StyledStr> {$/;"	P	implementation:Command
get_all_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_all_aliases(&self) -> Option<Vec<&str>> {$/;"	P	implementation:Arg
get_all_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_all_aliases(&self) -> impl Iterator<Item = &str> + '_ {$/;"	P	implementation:Command
get_all_long_flag_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_all_long_flag_aliases(&self) -> impl Iterator<Item = &str> + '_ {$/;"	P	implementation:Command
get_all_short_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_all_short_aliases(&self) -> Option<Vec<char>> {$/;"	P	implementation:Arg
get_all_short_flag_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_all_short_flag_aliases(&self) -> impl Iterator<Item = char> + '_ {$/;"	P	implementation:Command
get_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn get_arg<'s>(&'s self, arg: &str) -> Option<&'s MatchedArg> {$/;"	P	implementation:ArgMatches
get_arg_conflicts_with	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_arg_conflicts_with(&self, arg: &Arg) -> Vec<&Arg> \/\/ FIXME: This could probably/;"	P	implementation:Command
get_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn get_args(&self) -> impl Iterator<Item = &Id> {$/;"	P	implementation:ArgGroup
get_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    pub(crate) fn get_args(&self, incls: &[Id], force_optional: bool) -> Vec<StyledStr> {$/;"	P	implementation:Usage
get_arguments	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_arguments(&self) -> impl Iterator<Item = &Arg> {$/;"	P	implementation:Command
get_author	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_author(&self) -> Option<&str> {$/;"	P	implementation:Command
get_before_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_before_help(&self) -> Option<&StyledStr> {$/;"	P	implementation:Command
get_before_long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_before_long_help(&self) -> Option<&StyledStr> {$/;"	P	implementation:Command
get_bin_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_bin_name(&self) -> Option<&str> {$/;"	P	implementation:Command
get_color	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_color(&self) -> ColorChoice {$/;"	P	implementation:Command
get_count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn get_count(&self, id: &str) -> u8 {$/;"	P	implementation:ArgMatches
get_default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub(crate) fn get_default<'v>(source: &'v (impl Source + ?Sized), key: Key) -> Option<Value<'v>>/;"	f
get_default_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_default_values(&self) -> &[OsStr] {$/;"	P	implementation:Arg
get_direct_conflicts	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn get_direct_conflicts(&self, arg_id: &Id) -> Option<&[Id]> {$/;"	P	implementation:Conflicts
get_display_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_display_name(&self) -> Option<&str> {$/;"	P	implementation:Command
get_display_order	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn get_display_order(&self) -> usize {$/;"	P	implementation:Arg
get_display_order	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn get_display_order(&self) -> usize {$/;"	P	implementation:Command
get_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_env(&self) -> Option<&std::ffi::OsStr> {$/;"	P	implementation:Arg
get_external_subcommand_value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_external_subcommand_value_parser(&self) -> Option<&super::ValueParser> {$/;"	P	implementation:Command
get_filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn get_filter(&self) -> Option<String> {$/;"	P	implementation:Env
get_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn get_flag(&self, id: &str) -> bool {$/;"	P	implementation:ArgMatches
get_global_arg_conflicts_with	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn get_global_arg_conflicts_with(&self, arg: &Arg) -> Vec<&Arg> \/\/ FIXME: This could proba/;"	P	implementation:Command
get_groups	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_groups(&self) -> impl Iterator<Item = &ArgGroup> {$/;"	P	implementation:Command
get_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_help(&self) -> Option<&StyledStr> {$/;"	P	implementation:Arg
get_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub fn get_help(&self) -> Option<&StyledStr> {$/;"	P	implementation:PossibleValue
get_help_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^pub(crate) fn get_help_flag(cmd: &Command) -> Option<&'static str> {$/;"	f
get_help_heading	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_help_heading(&self) -> Option<&str> {$/;"	P	implementation:Arg
get_help_template	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn get_help_template(&self) -> Option<&StyledStr> {$/;"	P	implementation:Command
get_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_id(&self) -> &Id {$/;"	P	implementation:Arg
get_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn get_id(&self) -> &Id {$/;"	P	implementation:ArgGroup
get_index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_index(&self) -> Option<usize> {$/;"	P	implementation:Arg
get_index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn get_index(&self, index: usize) -> Option<usize> {$/;"	P	implementation:MatchedArg
get_keymap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn get_keymap(&self) -> &MKeyMap {$/;"	P	implementation:Command
get_long	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_long(&self) -> Option<&str> {$/;"	P	implementation:Arg
get_long_about	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_long_about(&self) -> Option<&StyledStr> {$/;"	P	implementation:Command
get_long_and_visible_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_long_and_visible_aliases(&self) -> Option<Vec<&str>> {$/;"	P	implementation:Arg
get_long_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_long_flag(&self) -> Option<&str> {$/;"	P	implementation:Command
get_long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_long_help(&self) -> Option<&StyledStr> {$/;"	P	implementation:Arg
get_long_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_long_version(&self) -> Option<&str> {$/;"	P	implementation:Command
get_many	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn get_many<T: Any + Clone + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
get_matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_matches(self) -> ArgMatches {$/;"	P	implementation:Command
get_matches_from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_matches_from<I, T>(mut self, itr: I) -> ArgMatches$/;"	P	implementation:Command
get_matches_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_matches_mut(&mut self) -> ArgMatches {$/;"	P	implementation:Command
get_matches_with	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    pub(crate) fn get_matches_with($/;"	P	implementation:Parser
get_max_term_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn get_max_term_width(&self) -> Option<usize> {$/;"	P	implementation:Command
get_min_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn get_min_vals(&self) -> usize {$/;"	P	implementation:Arg
get_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn get_mut(&mut self, arg: &Id) -> Option<&mut MatchedArg> {$/;"	P	implementation:ArgMatcher
get_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub fn get_mut<Q: ?Sized>(&mut self, k: &Q) -> Option<&mut V>$/;"	P	implementation:FlatMap
get_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_name(&self) -> &str {$/;"	P	implementation:Command
get_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub fn get_name(&self) -> &str {$/;"	P	implementation:PossibleValue
get_name_and_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub fn get_name_and_aliases(&self) -> impl Iterator<Item = &str> + '_ {$/;"	P	implementation:PossibleValue
get_name_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn get_name_str(&self) -> &Str {$/;"	P	implementation:Command
get_next_help_heading	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_next_help_heading(&self) -> Option<&str> {$/;"	P	implementation:Command
get_non_positionals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn get_non_positionals(&self) -> impl Iterator<Item = &Arg> {$/;"	P	implementation:Command
get_num_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_num_args(&self) -> Option<ValueRange> {$/;"	P	implementation:Arg
get_occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn get_occurrences<T: Any + Clone + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
get_one	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn get_one<T: Any + Clone + Send + Sync + 'static>(&self, id: &str) -> Option<&T> {$/;"	P	implementation:ArgMatches
get_opts	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_opts(&self) -> impl Iterator<Item = &Arg> {$/;"	P	implementation:Command
get_override_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn get_override_help(&self) -> Option<&StyledStr> {$/;"	P	implementation:Command
get_override_usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn get_override_usage(&self) -> Option<&StyledStr> {$/;"	P	implementation:Command
get_positionals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_positionals(&self) -> impl Iterator<Item = &Arg> {$/;"	P	implementation:Command
get_possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_possible_values(&self) -> Vec<PossibleValue> {$/;"	P	implementation:Arg
get_possible_values_cli	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^pub(crate) fn get_possible_values_cli(a: &Arg) -> Vec<PossibleValue> {$/;"	f
get_raw	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn get_raw(&self, id: &str) -> Option<RawValues<'_>> {$/;"	P	implementation:ArgMatches
get_raw_occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn get_raw_occurrences(&self, id: &str) -> Option<RawOccurrences<'_>> {$/;"	P	implementation:ArgMatches
get_replacement	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn get_replacement(&self, key: &str) -> Option<&[Str]> {$/;"	P	implementation:Command
get_required_usage_from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    pub(crate) fn get_required_usage_from($/;"	P	implementation:Usage
get_short	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_short(&self) -> Option<char> {$/;"	P	implementation:Arg
get_short_and_visible_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_short_and_visible_aliases(&self) -> Option<Vec<char>> {$/;"	P	implementation:Arg
get_short_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_short_flag(&self) -> Option<char> {$/;"	P	implementation:Command
get_spaces	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn get_spaces(&self, n: usize) -> String {$/;"	P	implementation:HelpTemplate
get_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn get_subcommand(&self, name: &str) -> Option<&SubCommand> {$/;"	P	implementation:ArgMatches
get_subcommand_help_heading	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_subcommand_help_heading(&self) -> Option<&str> {$/;"	P	implementation:Command
get_subcommand_value_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_subcommand_value_name(&self) -> Option<&str> {$/;"	P	implementation:Command
get_subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_subcommands(&self) -> impl Iterator<Item = &Command> {$/;"	P	implementation:Command
get_subcommands_containing	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn get_subcommands_containing(&self, arg: &Arg) -> Vec<&Self> {$/;"	P	implementation:Command
get_subcommands_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_subcommands_mut(&mut self) -> impl Iterator<Item = &mut Command> {$/;"	P	implementation:Command
get_term_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn get_term_width(&self) -> Option<usize> {$/;"	P	implementation:Command
get_usage_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn get_usage_name(&self) -> Option<&str> {$/;"	P	implementation:Command
get_used_global_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn get_used_global_args(&self, matches: &ArgMatches, global_arg_vec: &mut Vec<Id>) {$/;"	P	implementation:Command
get_value_delimiter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_value_delimiter(&self) -> Option<char> {$/;"	P	implementation:Arg
get_value_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_value_hint(&self) -> ValueHint {$/;"	P	implementation:Arg
get_value_names	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_value_names(&self) -> Option<&[Str]> {$/;"	P	implementation:Arg
get_value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_value_parser(&self) -> &super::ValueParser {$/;"	P	implementation:Arg
get_value_terminator	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_value_terminator(&self) -> Option<&Str> {$/;"	P	implementation:Arg
get_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_version(&self) -> Option<&str> {$/;"	P	implementation:Command
get_visible_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_visible_aliases(&self) -> Option<Vec<&str>> {$/;"	P	implementation:Arg
get_visible_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_visible_aliases(&self) -> impl Iterator<Item = &str> + '_ {$/;"	P	implementation:Command
get_visible_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub(crate) fn get_visible_help(&self) -> Option<&StyledStr> {$/;"	P	implementation:PossibleValue
get_visible_long_flag_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_visible_long_flag_aliases(&self) -> impl Iterator<Item = &str> + '_ {$/;"	P	implementation:Command
get_visible_quoted_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub(crate) fn get_visible_quoted_name(&self) -> Option<std::borrow::Cow<'_, str>> {$/;"	P	implementation:PossibleValue
get_visible_short_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn get_visible_short_aliases(&self) -> Option<Vec<char>> {$/;"	P	implementation:Arg
get_visible_short_flag_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn get_visible_short_flag_aliases(&self) -> impl Iterator<Item = char> + '_ {$/;"	P	implementation:Command
get_write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn get_write_style(&self) -> Option<String> {$/;"	P	implementation:Env
git	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod git;$/;"	n
git_derive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod git_derive;$/;"	n
glob	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^pub(in crate::fmt) mod glob {$/;"	n
glob	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/shim_impl.rs	/^pub(in crate::fmt) mod glob {}$/;"	n
glob	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^pub(crate) mod glob {$/;"	n
glob	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^pub(super) mod glob {$/;"	n
glob	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^pub(in crate::fmt::writer) mod glob {$/;"	n
glob	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^pub(in crate::fmt::writer) mod glob {}$/;"	n
global	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn global(self, yes: bool) -> Self {$/;"	P	implementation:Arg
global_setting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn global_setting(mut self, setting: AppSettings) -> Self {$/;"	P	implementation:Command
global_setting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/tests.rs	/^fn global_setting() {$/;"	f
good	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn good(&mut self, msg: impl Into<String>) {$/;"	P	implementation:StyledStr
graph	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/mod.rs	/^mod graph;$/;"	n
group	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn group(mut self, group_id: impl IntoResettable<Id>) -> Self {$/;"	P	implementation:Arg
group	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn group(mut self, group: impl Into<ArgGroup>) -> Self {$/;"	P	implementation:Command
group_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn group_id() -> Option<crate::Id> {$/;"	P	interface:Args
grouped_values_of	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn grouped_values_of(&self, id: &str) -> Option<GroupedValues> {$/;"	P	implementation:ArgMatches
groups	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn groups(mut self, group_ids: impl IntoIterator<Item = impl Into<Id>>) -> Self {$/;"	P	implementation:Arg
groups	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) groups: Vec<Id>,$/;"	m	struct:Arg
groups	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    fn groups() {$/;"	f	module:test
groups	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    groups: Vec<ArgGroup>,$/;"	m	struct:Command
groups	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn groups(mut self, groups: impl IntoIterator<Item = impl Into<ArgGroup>>) -> Self {$/;"	P	implementation:Command
groups_for_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn groups_for_arg<'a>(&'a self, arg: &Id) -> impl Iterator<Item = Id> + 'a {$/;"	P	implementation:Command
gt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn gt(&self, other: &Level) -> bool {$/;"	P	implementation:Level
gt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn gt(&self, other: &Level) -> bool {$/;"	P	implementation:LevelFilter
gt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn gt(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:Level
gt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn gt(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:LevelFilter
hard_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/wrap_algorithms.rs	/^    hard_width: usize,$/;"	m	struct:LineWrapper
has_positionals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn has_positionals(&self) -> bool {$/;"	P	implementation:Command
has_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn has_subcommand(name: &str) -> bool {$/;"	P	implementation:Box
has_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn has_subcommand(name: &str) -> bool;$/;"	P	interface:Subcommand
has_subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn has_subcommands(&self) -> bool {$/;"	P	implementation:Command
has_uncolored_target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    has_uncolored_target: bool,$/;"	m	struct:Buffer
has_visible_subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn has_visible_subcommands(&self) -> bool {$/;"	P	implementation:Command
hash	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn hash<T: Hash>(t: &T) -> u64 {$/;"	f	module:tests
hash	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:Inner
hash	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:Inner
hash	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:AnyValueId
hash	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn hash<H>(&self, state: &mut H)$/;"	P	implementation:Key
hash_map	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn hash_map() {$/;"	f	module:std_support::tests
header	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn header(&mut self, msg: impl Into<String>) {$/;"	P	implementation:StyledStr
header	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn header<T: Into<String>>(&mut self, msg: T) {$/;"	P	implementation:HelpTemplate
help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn help(mut self, h: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:Arg
help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) help: Option<StyledStr>,$/;"	m	struct:Arg
help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    help: Option<StyledStr>,$/;"	m	struct:PossibleValue
help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub fn help(mut self, help: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:PossibleValue
help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn help($/;"	P	implementation:HelpTemplate
help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/mod.rs	/^mod help;$/;"	n
help_err	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn help_err(&self, use_long: bool) -> ClapError {$/;"	P	implementation:Parser
help_expected	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn help_expected(self, yes: bool) -> Self {$/;"	P	implementation:Command
help_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    help_flag: Option<&'static str>,$/;"	m	struct:ErrorInner
help_heading	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn help_heading(mut self, heading: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Arg
help_heading	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) help_heading: Option<Option<Str>>,$/;"	m	struct:Arg
help_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    help_str: Option<StyledStr>,$/;"	m	struct:Command
help_template	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn help_template(mut self, s: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:Command
help_template	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/mod.rs	/^mod help_template;$/;"	n
hide	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn hide(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn hide(self, yes: bool) -> Self {$/;"	P	implementation:Command
hide	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    hide: bool,$/;"	m	struct:PossibleValue
hide	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub fn hide(mut self, yes: bool) -> Self {$/;"	P	implementation:PossibleValue
hide_default_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn hide_default_value(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn hide_env(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide_env_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn hide_env_values(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide_long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn hide_long_help(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide_possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn hide_possible_values(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide_possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn hide_possible_values(self, yes: bool) -> Self {$/;"	P	implementation:Command
hide_short_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn hide_short_help(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn hint(&mut self, msg: impl Into<String>) {$/;"	P	implementation:StyledStr
humantime	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^mod humantime;$/;"	n
i128	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl ToValue for i128 {$/;"	c
i16	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for i16 {$/;"	c
i32	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for i32 {$/;"	c
i64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for i64 {$/;"	c
i8	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for i8 {$/;"	c
id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn id(mut self, id: impl Into<Id>) -> Self {$/;"	P	implementation:Arg
id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) id: Id,$/;"	m	struct:Arg
id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn id(mut self, id: impl Into<Id>) -> Self {$/;"	P	implementation:ArgGroup
id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub(crate) id: Id,$/;"	m	struct:ArgGroup
id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    id: AnyValueId,$/;"	m	struct:AnyValue
id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    pub(crate) id: Id,$/;"	m	struct:PendingArg
id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^    id: T,$/;"	m	struct:Child
id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/mod.rs	/^mod id;$/;"	n
id_exists	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn id_exists(&self, id: &Id) -> bool {$/;"	P	implementation:Command
ident	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    pub(crate) ident: Option<Identifier>,$/;"	m	struct:PendingArg
ids	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn ids(&self) -> IdsRef<'_> {$/;"	P	implementation:ArgMatches
ignore_case	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn ignore_case(self, yes: bool) -> Self {$/;"	P	implementation:Arg
ignore_case	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    ignore_case: bool,$/;"	m	struct:MatchedArg
ignore_errors	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn ignore_errors(self, yes: bool) -> Self {$/;"	P	implementation:Command
imp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/mod.rs	/^mod imp;$/;"	n
imp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/atty.rs	/^mod imp {$/;"	n
imp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/mod.rs	/^mod imp;$/;"	n
impl_bits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^macro_rules! impl_bits {$/;"	M
impl_settings	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/macros.rs	/^macro_rules! impl_settings {$/;"	M
impl_styled_value_fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^macro_rules! impl_styled_value_fmt {$/;"	M
impl_to_value_nonzero_primitive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! impl_to_value_nonzero_primitive {$/;"	M
impl_to_value_primitive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! impl_to_value_primitive {$/;"	M
impl_value_to_primitive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! impl_value_to_primitive {$/;"	M
indent	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn indent(&mut self, initial: &str, trailing: &str) {$/;"	P	implementation:StyledStr
indent	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    indent: Option<usize>,$/;"	m	struct:DefaultFormat
indent_count	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^                    indent_count: usize,$/;"	m	struct:DefaultFormat::write_args::IndentWrapper
index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn index(mut self, idx: impl IntoResettable<usize>) -> Self {$/;"	P	implementation:Arg
index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) index: Option<usize>,$/;"	m	struct:Arg
index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn index(&self, key: &Id) -> &Self::Output {$/;"	P	implementation:Command
index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    fn index(&self, key: &KeyType) -> &Self::Output {$/;"	P	implementation:MKeyMap
index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    index: usize,$/;"	m	struct:Key
index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    index: usize,$/;"	m	struct:OccupiedEntry
index_of	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn index_of(&self, id: &str) -> Option<usize> {$/;"	P	implementation:ArgMatches
indices	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    indices: Vec<usize>,$/;"	m	struct:MatchedArg
indices	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn indices(&self) -> Cloned<Iter<'_, usize>> {$/;"	P	implementation:MatchedArg
indices_exact_size	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn indices_exact_size() {$/;"	f	module:tests
indices_of	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn indices_of(&self, id: &str) -> Option<Indices<'_>> {$/;"	P	implementation:ArgMatches
infer_long_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn infer_long_args(self, yes: bool) -> Self {$/;"	P	implementation:Command
infer_subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn infer_subcommands(self, yes: bool) -> Self {$/;"	P	implementation:Command
infer_type_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn infer_type_id(&self, expected: AnyValueId) -> AnyValueId {$/;"	P	implementation:MatchedArg
info	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! info {$/;"	M
init	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn init(&mut self) {$/;"	P	implementation:Builder
init	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn init() {$/;"	f
init_from_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn init_from_env<'a, E>(env: E)$/;"	f
init_logging	/home/jcoombes/Src/chisel/src/main.rs	/^fn init_logging() {$/;"	f
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^pub(crate) mod inner {$/;"	n
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^pub(crate) mod inner {$/;"	n
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    inner: Box<ErrorInner>,$/;"	m	struct:Error
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    inner: std::sync::Arc<dyn std::any::Any + Send + Sync + 'static>,$/;"	m	struct:AnyValue
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    inner: Vec<T>,$/;"	m	struct:FlatSet
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^mod inner;$/;"	n
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/regex.rs	/^    inner: Regex,$/;"	m	struct:Filter
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/string.rs	/^    inner: String,$/;"	m	struct:Filter
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    inner: BufferWriter,$/;"	m	struct:Writer
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    inner: termcolor::Buffer,$/;"	m	struct:Buffer
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    inner: termcolor::BufferWriter,$/;"	m	struct:BufferWriter
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    inner: Inner,$/;"	m	struct:Error
inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    inner: ValueBag<'v>,$/;"	m	struct:Value
insert	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn insert(&mut self, other: Self);$/;"	P	interface:BitFlags
insert	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn insert(&mut self, kind: ContextKind, value: ContextValue) -> Option<ContextValue> {$/;"	P	implementation:Error
insert	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub(crate) fn insert(&mut self, key: K, mut value: V) -> Option<V> {$/;"	P	implementation:FlatMap
insert	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    pub(crate) fn insert(&mut self, value: T) -> bool {$/;"	P	implementation:FlatSet
insert	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^    pub(crate) fn insert(&mut self, req: T) -> usize {$/;"	f
insert_child	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^    pub(crate) fn insert_child(&mut self, parent: usize, child: T) -> usize {$/;"	f
insert_context_unchecked	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn insert_context_unchecked($/;"	P	implementation:Error
insert_unchecked	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub(crate) fn insert_unchecked(&mut self, key: K, value: V) {$/;"	P	implementation:FlatMap
internal	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^mod internal;$/;"	n
intersects	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn intersects(&self, other: Self) -> bool;$/;"	P	interface:BitFlags
into_color_choice	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn into_color_choice(self) -> ColorChoice {$/;"	P	implementation:WriteStyle
into_inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    pub(crate) fn into_inner(self) -> Inner {$/;"	P	implementation:Str
into_inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn into_inner(self) -> ArgMatches {$/;"	P	implementation:ArgMatcher
into_iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn into_iter(self) -> impl Iterator<Item = (Option<Style>, String)> {$/;"	P	implementation:StyledStr
into_iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:FlatSet
into_option	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    pub(crate) fn into_option(self) -> Option<T> {$/;"	P	implementation:Resettable
into_os_string	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^        pub(crate) fn into_os_string(self) -> std::ffi::OsString {$/;"	P	implementation:inner::Inner
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<ArgAction> {$/;"	P	implementation:ArgAction
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<ArgAction> {$/;"	P	implementation:Option
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<OsStr> {$/;"	P	implementation:I
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<OsStr> {$/;"	P	implementation:Option
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<Str> {$/;"	P	implementation:I
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<Str> {$/;"	P	implementation:Option
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<String> {$/;"	P	implementation:I
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<StyledStr> {$/;"	P	implementation:I
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<StyledStr> {$/;"	P	implementation:Option
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<T> {$/;"	P	implementation:Resettable
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<T>;$/;"	P	interface:IntoResettable
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<ValueHint> {$/;"	P	implementation:Option
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<ValueHint> {$/;"	P	implementation:ValueHint
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<ValueParser> {$/;"	P	implementation:I
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<ValueParser> {$/;"	P	implementation:Option
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<ValueRange> {$/;"	P	implementation:I
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<char> {$/;"	P	implementation:Option
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<char> {$/;"	P	implementation:char
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<crate::Id> {$/;"	P	implementation:I
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<usize> {$/;"	P	implementation:Option
into_resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^    fn into_resettable(self) -> Resettable<usize> {$/;"	P	implementation:usize
into_string	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^        pub(crate) fn into_string(self) -> String {$/;"	P	implementation:inner::Inner
into_termcolor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn into_termcolor(self) -> termcolor::Color {$/;"	P	implementation:Color
into_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn into_vals(self) -> Vec<Vec<AnyValue>> {$/;"	P	implementation:MatchedArg
into_vals_flatten	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn into_vals_flatten(self) -> Flatten<std::vec::IntoIter<Vec<AnyValue>>> {$/;"	P	implementation:MatchedArg
into_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(crate) fn into_value<T>(self, value: T) -> StyledValue<'static, T> {$/;"	P	implementation:Style
into_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    pub(super) fn into_value(self) -> value_bag::Error {$/;"	P	implementation:Error
invalid_hex_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^    pub fn invalid_hex_flag(flag: impl fmt::Display) -> Self {$/;"	P	implementation:ParseError
invalid_named_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/parser.rs	/^    pub fn invalid_named_flag(flag: impl fmt::Display) -> Self {$/;"	P	implementation:ParseError
invalid_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn invalid_subcommand($/;"	P	implementation:Error
invalid_utf8	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn invalid_utf8(cmd: &Command, usage: Option<StyledStr>) -> Self {$/;"	P	implementation:Error
invalid_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn invalid_value($/;"	P	implementation:Error
is	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn is<T: 'static>(&self) -> bool {$/;"	P	implementation:Value
is_a_tty	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^fn is_a_tty(stream: Stream) -> bool {$/;"	f
is_all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn is_all(&self) -> bool;$/;"	P	interface:BitFlags
is_allow_external_subcommands_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_allow_external_subcommands_set(&self) -> bool {$/;"	P	implementation:Command
is_allow_hyphen_values_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_allow_hyphen_values_set(&self) -> bool {$/;"	P	implementation:Arg
is_allow_hyphen_values_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn is_allow_hyphen_values_set(&self) -> bool {$/;"	P	implementation:Command
is_allow_missing_positional_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_allow_missing_positional_set(&self) -> bool {$/;"	P	implementation:Command
is_allow_negative_numbers_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_allow_negative_numbers_set(&self) -> bool {$/;"	P	implementation:Arg
is_allow_negative_numbers_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_allow_negative_numbers_set(&self) -> bool {$/;"	P	implementation:Command
is_arg_required_else_help_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_arg_required_else_help_set(&self) -> bool {$/;"	P	implementation:Command
is_args_conflicts_with_subcommands_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_args_conflicts_with_subcommands_set(&self) -> bool {$/;"	P	implementation:Command
is_args_override_self	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_args_override_self(&self) -> bool {$/;"	P	implementation:Command
is_disable_colored_help_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_disable_colored_help_set(&self) -> bool {$/;"	P	implementation:Command
is_disable_help_flag_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_disable_help_flag_set(&self) -> bool {$/;"	P	implementation:Command
is_disable_help_subcommand_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_disable_help_subcommand_set(&self) -> bool {$/;"	P	implementation:Command
is_disable_version_flag_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_disable_version_flag_set(&self) -> bool {$/;"	P	implementation:Command
is_dont_collapse_args_in_usage_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_dont_collapse_args_in_usage_set(&self) -> bool {$/;"	P	implementation:Command
is_dont_delimit_trailing_values_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_dont_delimit_trailing_values_set(&self) -> bool {$/;"	P	implementation:Command
is_empty	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn is_empty(&self) -> bool;$/;"	P	interface:BitFlags
is_empty	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:StyledStr
is_empty	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:FlatMap
is_empty	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:FlatSet
is_exclusive_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_exclusive_set(&self) -> bool {$/;"	P	implementation:Arg
is_explicit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/value_source.rs	/^    pub(crate) fn is_explicit(self) -> bool {$/;"	P	implementation:ValueSource
is_fixed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub(crate) fn is_fixed(&self) -> bool {$/;"	P	implementation:ValueRange
is_global_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_global_set(&self) -> bool {$/;"	P	implementation:Arg
is_help_expected_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn is_help_expected_set(&self) -> bool {$/;"	P	implementation:Command
is_hide_default_value_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_hide_default_value_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_env_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_hide_env_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_env_values_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_hide_env_values_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_long_help_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_hide_long_help_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_possible_values_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_hide_possible_values_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_hide_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_hide_set(&self) -> bool {$/;"	P	implementation:Command
is_hide_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub fn is_hide_set(&self) -> bool {$/;"	P	implementation:PossibleValue
is_hide_short_help_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_hide_short_help_set(&self) -> bool {$/;"	P	implementation:Arg
is_ignore_case_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_ignore_case_set(&self) -> bool {$/;"	P	implementation:Arg
is_ignore_errors_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn is_ignore_errors_set(&self) -> bool {$/;"	P	implementation:Command
is_infer_long_args_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn is_infer_long_args_set(&self) -> bool {$/;"	P	implementation:Command
is_infer_subcommands_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn is_infer_subcommands_set(&self) -> bool {$/;"	P	implementation:Command
is_last_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_last_set(&self) -> bool {$/;"	P	implementation:Arg
is_match	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/regex.rs	/^    pub fn is_match(&self, s: &str) -> bool {$/;"	P	implementation:Filter
is_match	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/string.rs	/^    pub fn is_match(&self, s: &str) -> bool {$/;"	P	implementation:Filter
is_missing_required_ok	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn is_missing_required_ok(&self, a: &Arg, conflicts: &Conflicts) -> bool {$/;"	P	implementation:Validator
is_multicall_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_multicall_set(&self) -> bool {$/;"	P	implementation:Command
is_multiple	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn is_multiple(&self) -> bool {$/;"	P	implementation:Arg
is_multiple	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn is_multiple(&mut self) -> bool {$/;"	P	implementation:ArgGroup
is_multiple	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub(crate) fn is_multiple(&self) -> bool {$/;"	P	implementation:ValueRange
is_multiple_values_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn is_multiple_values_set(&self) -> bool {$/;"	P	implementation:Arg
is_new_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn is_new_arg(&self, next: &clap_lex::ParsedArg<'_>, current_positional: &Arg) -> bool {$/;"	P	implementation:Parser
is_next_line_help_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_next_line_help_set(&self) -> bool {$/;"	P	implementation:Arg
is_next_line_help_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_next_line_help_set(&self) -> bool {$/;"	P	implementation:Command
is_no_binary_name_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_no_binary_name_set(&self) -> bool {$/;"	P	implementation:Command
is_position	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    pub(crate) fn is_position(&self) -> bool {$/;"	P	implementation:KeyType
is_positional	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_positional(&self) -> bool {$/;"	P	implementation:Arg
is_propagate_version_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_propagate_version_set(&self) -> bool {$/;"	P	implementation:Command
is_require_equals_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_require_equals_set(&self) -> bool {$/;"	P	implementation:Arg
is_required_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_required_set(&self) -> bool {$/;"	P	implementation:Arg
is_required_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn is_required_set(&self) -> bool {$/;"	P	implementation:ArgGroup
is_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:Arg
is_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn is_set(&self, s: AppSettings) -> bool {$/;"	P	implementation:Command
is_stderr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/atty.rs	/^    pub(in crate::fmt) fn is_stderr() -> bool {$/;"	f	module:imp
is_stdout	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/atty.rs	/^    pub(in crate::fmt) fn is_stdout() -> bool {$/;"	f	module:imp
is_subcommand_negates_reqs_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_subcommand_negates_reqs_set(&self) -> bool {$/;"	P	implementation:Command
is_subcommand_precedence_over_arg_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_subcommand_precedence_over_arg_set(&self) -> bool {$/;"	P	implementation:Command
is_subcommand_required_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_subcommand_required_set(&self) -> bool {$/;"	P	implementation:Command
is_takes_value_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn is_takes_value_set(&self) -> bool {$/;"	P	implementation:Arg
is_test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    is_test: bool,$/;"	m	struct:Builder
is_test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    pub(crate) fn is_test(&mut self, is_test: bool) -> &mut Self {$/;"	P	implementation:Builder
is_test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn is_test(&mut self, is_test: bool) -> &mut Self {$/;"	P	implementation:Builder
is_trailing_var_arg_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn is_trailing_var_arg_set(&self) -> bool {$/;"	P	implementation:Arg
is_trailing_var_arg_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn is_trailing_var_arg_set(&self) -> bool {$/;"	P	implementation:Command
is_unbounded	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub(crate) fn is_unbounded(&self) -> bool {$/;"	P	implementation:ValueRange
is_valid_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn is_valid_subcommand(&self, _name: &str) -> bool {$/;"	P	implementation:ArgMatches
issue_129	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn issue_129() {$/;"	f	module:test
issue_2090	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/tests.rs	/^fn issue_2090() {$/;"	f
issue_99	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn issue_99() {$/;"	f	module:test
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn iter(&self) -> Self::Iter;$/;"	P	interface:BitFlags
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn iter(&self) -> impl Iterator<Item = (Option<Style>, &str)> {$/;"	P	implementation:StyledStr
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: Cloned<Iter<'a, usize>>,$/;"	m	struct:Indices
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: Map<Flatten<Iter<'a, Vec<AnyValue>>>, fn(&AnyValue) -> &T>,$/;"	m	struct:ValuesRef
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: Map<Flatten<Iter<'a, Vec<OsString>>>, fn(&OsString) -> &OsStr>,$/;"	m	struct:RawValues
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: Map<Flatten<std::vec::IntoIter<Vec<AnyValue>>>, fn(AnyValue) -> T>,$/;"	m	struct:Values
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: Map<Iter<'a, AnyValue>, fn(&AnyValue) -> &T>,$/;"	m	struct:OccurrenceValuesRef
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: Map<Iter<'a, OsString>, fn(&OsString) -> &OsStr>,$/;"	m	struct:RawOccurrenceValues
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: Map<Iter<'a, Vec<AnyValue>>, fn(&Vec<AnyValue>) -> OccurrenceValuesRef<'_, T>>,$/;"	m	struct:OccurrencesRef
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: Map<Iter<'a, Vec<AnyValue>>, fn(&Vec<AnyValue>) -> Vec<&str>>,$/;"	m	struct:GroupedValues
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: Map<Iter<'a, Vec<OsString>>, fn(&Vec<OsString>) -> RawOccurrenceValues<'_>>,$/;"	m	struct:RawOccurrences
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: Map<std::vec::IntoIter<AnyValue>, fn(AnyValue) -> T>,$/;"	m	struct:OccurrenceValues
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: Map<std::vec::IntoIter<Vec<AnyValue>>, fn(Vec<AnyValue>) -> OccurrenceValues<T>>,$/;"	m	struct:Occurrences
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    iter: std::slice::Iter<'a, Id>,$/;"	m	struct:IdsRef
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub fn iter(&self) -> Iter<K, V> {$/;"	P	implementation:FlatMap
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    pub(crate) fn iter(&self) -> std::slice::Iter<'_, T> {$/;"	P	implementation:FlatSet
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^    pub(crate) fn iter(&self) -> impl Iterator<Item = &T> {$/;"	f
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn iter() -> impl Iterator<Item = Self> {$/;"	P	implementation:Level
iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn iter() -> impl Iterator<Item = Self> {$/;"	P	implementation:LevelFilter
iter_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn iter_mut(&mut self) -> impl Iterator<Item = (Option<Style>, &mut String)> {$/;"	P	implementation:StyledStr
iter_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub fn iter_mut(&mut self) -> IterMut<K, V> {$/;"	P	implementation:FlatMap
iter_names	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn iter_names(&self) -> Self::IterNames;$/;"	P	interface:BitFlags
key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    key: KeyType,$/;"	m	struct:Key
key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    key: K,$/;"	m	struct:VacantEntry
key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    key: &'k str,$/;"	m	struct:Key
key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/mod.rs	/^mod key;$/;"	n
key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            key: &'static str,$/;"	m	struct:tests::count::OnePair
key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        key: Key<'k>,$/;"	m	struct:get_default::Get
key_from_string	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn key_from_string() {$/;"	f	module:tests
key_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    key_values: KeyValues<'a>,$/;"	m	struct:Record
key_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn key_values(&mut self, kvs: &'a dyn kv::Source) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
key_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn key_values(&self) -> &dyn kv::Source {$/;"	P	implementation:Record
keys	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    keys: Vec<Key>,$/;"	m	struct:MKeyMap
keys	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    pub(crate) fn keys(&self) -> impl Iterator<Item = &KeyType> {$/;"	P	implementation:MKeyMap
keys	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    keys: Vec<K>,$/;"	m	struct:FlatMap
keys	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    keys: std::slice::Iter<'a, K>,$/;"	m	struct:Iter
keys	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    keys: std::slice::IterMut<'a, K>,$/;"	m	struct:IterMut
keys	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub fn keys(&self) -> std::slice::Iter<'_, K> {$/;"	P	implementation:FlatMap
kind	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    kind: ErrorKind,$/;"	m	struct:ErrorInner
kind	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn kind(&self) -> ErrorKind {$/;"	P	implementation:Error
kind	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^mod kind;$/;"	n
kv	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub mod kv;$/;"	n
kvs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^                kvs: &'a dyn Source,$/;"	m	struct:serde_support::tests::derive_serialize::MyRecordAsList
kvs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^                kvs: &'a dyn Source,$/;"	m	struct:serde_support::tests::derive_serialize::MyRecordAsMap
kvs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^                kvs: source::AsList<&'a dyn Source>,$/;"	m	struct:sval_support::tests::derive_stream::MyRecordAsList
kvs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^                kvs: source::AsMap<&'a dyn Source>,$/;"	m	struct:sval_support::tests::derive_stream::MyRecordAsMap
last	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn last(self, yes: bool) -> Self {$/;"	P	implementation:Arg
le	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn le(&self, other: &Level) -> bool {$/;"	P	implementation:Level
le	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn le(&self, other: &Level) -> bool {$/;"	P	implementation:LevelFilter
le	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn le(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:Level
le	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn le(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:LevelFilter
leading_whitespace	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn leading_whitespace() {$/;"	f	module:test
leading_whitespace_empty_first_line	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn leading_whitespace_empty_first_line() {$/;"	f	module:test
len	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    len: usize,$/;"	m	struct:GroupedValues
len	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    len: usize,$/;"	m	struct:Indices
len	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    len: usize,$/;"	m	struct:RawValues
len	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    len: usize,$/;"	m	struct:Values
len	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    len: usize,$/;"	m	struct:ValuesRef
level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    level: LevelFilter,$/;"	m	struct:Directive
level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    level: bool,$/;"	m	struct:DefaultFormat
level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    level: Level,$/;"	m	struct:Metadata
level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn level(&mut self, arg: Level) -> &mut MetadataBuilder<'a> {$/;"	P	implementation:MetadataBuilder
level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn level(&mut self, level: Level) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn level(&self) -> Level {$/;"	P	implementation:Metadata
level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn level(&self) -> Level {$/;"	P	implementation:Record
level_bytes_tokens	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_bytes_tokens(variant: &'static [u8]) -> [Token; 3] {$/;"	f	module:tests
level_filter_bytes_tokens	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_filter_bytes_tokens(variant: &'static [u8]) -> [Token; 3] {$/;"	f	module:tests
level_filter_token	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_filter_token(variant: &'static str) -> Token {$/;"	f	module:tests
level_filter_variant_tokens	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_filter_variant_tokens(variant: u32) -> [Token; 3] {$/;"	f	module:tests
level_token	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_token(variant: &'static str) -> Token {$/;"	f	module:tests
level_variant_tokens	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_variant_tokens(variant: u32) -> [Token; 3] {$/;"	f	module:tests
line	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    line: Option<u32>,$/;"	m	struct:Record
line	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn line(&mut self, line: Option<u32>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
line	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn line(&self) -> Option<u32> {$/;"	P	implementation:Record
line_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/wrap_algorithms.rs	/^    line_width: usize,$/;"	m	struct:LineWrapper
literal	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn literal(&mut self, msg: impl Into<String>) {$/;"	P	implementation:StyledStr
literal	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn literal<T: Into<String>>(&mut self, msg: T) {$/;"	P	implementation:HelpTemplate
load	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn load(&self, _order: Ordering) -> usize {$/;"	P	implementation:AtomicUsize
log	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn log(&self, record: &Record) {$/;"	P	implementation:Logger
log	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn log(&self, _: &Record) {}$/;"	P	implementation:NopLogger
log	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn log(&self, record: &Record) {$/;"	f
log	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn log(&self, record: &Record);$/;"	P	interface:Log
log	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! log {$/;"	M
log_enabled	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! log_enabled {$/;"	M
logger	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn logger() -> &'static dyn Log {$/;"	f
long	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn long(mut self, l: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Arg
long	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) long: Option<Str>,$/;"	m	struct:Arg
long	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn long(&mut self, arg: &Arg) {$/;"	P	implementation:HelpTemplate
long_about	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    long_about: Option<StyledStr>,$/;"	m	struct:Command
long_about	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn long_about(mut self, long_about: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:Command
long_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    long_flag: Option<Str>,$/;"	m	struct:Command
long_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn long_flag(mut self, long: impl Into<Str>) -> Self {$/;"	P	implementation:Command
long_flag_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn long_flag_alias(mut self, name: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Command
long_flag_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    long_flag_aliases: Vec<(Str, bool)>,   \/\/ (name, visible)$/;"	m	struct:Command
long_flag_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn long_flag_aliases(mut self, names: impl IntoIterator<Item = impl Into<Str>>) -> Self /;"	P	implementation:Command
long_flag_aliases_to	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn long_flag_aliases_to(&self, flag: &str) -> bool {$/;"	P	implementation:Command
long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn long_help(mut self, h: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:Arg
long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) long_help: Option<StyledStr>,$/;"	m	struct:Arg
long_help_exists	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    long_help_exists: bool,$/;"	m	struct:Command
long_help_exists	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn long_help_exists(&self) -> bool {$/;"	P	implementation:Command
long_help_exists_	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn long_help_exists_(&self) -> bool {$/;"	P	implementation:Command
long_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    long_version: Option<Str>,$/;"	m	struct:Command
long_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn long_version(mut self, ver: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Command
long_word	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn long_word() {$/;"	f	module:test
long_words	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn long_words() {$/;"	f	module:test
longest_filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^fn longest_filter(arg: &Arg) -> bool {$/;"	f
lt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn lt(&self, other: &Level) -> bool {$/;"	P	implementation:Level
lt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn lt(&self, other: &Level) -> bool {$/;"	P	implementation:LevelFilter
lt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn lt(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:Level
lt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn lt(&self, other: &LevelFilter) -> bool {$/;"	P	implementation:LevelFilter
macros	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^mod macros;$/;"	n
macros	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^mod macros;$/;"	n
main	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/bin/stdio-fixture.rs	/^fn main() {$/;"	f
main	/home/jcoombes/Src/chisel/src/main.rs	/^fn main() {$/;"	f
make_logger_filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn make_logger_filter(dirs: Vec<Directive>) -> Filter {$/;"	f	module:tests
map	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn map<T, F>(self, func: F) -> MapValueParser<Self, F>$/;"	P	interface:TypedValueParser
match_arg_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn match_arg_error($/;"	P	implementation:Parser
match_beginning	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn match_beginning() {$/;"	f	module:tests
match_beginning_longest_match	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn match_beginning_longest_match() {$/;"	f	module:tests
match_default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn match_default() {$/;"	f	module:tests
match_full_path	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn match_full_path() {$/;"	f	module:tests
matched_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/mod.rs	/^mod matched_arg;$/;"	n
matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub fn matches(&self, value: &str, ignore_case: bool) -> bool {$/;"	P	implementation:PossibleValue
matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    matches: ArgMatches,$/;"	m	struct:ArgMatcher
matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub(crate) matches: ArgMatches,$/;"	m	struct:SubCommand
matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/mod.rs	/^mod matches;$/;"	n
matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn matches(&self, record: &Record) -> bool {$/;"	P	implementation:Filter
matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn matches(&self, record: &Record) -> bool {$/;"	P	implementation:Logger
max	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn max() -> Level {$/;"	P	implementation:Level
max	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn max() -> LevelFilter {$/;"	P	implementation:LevelFilter
max_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn max_level() -> LevelFilter {$/;"	f
max_term_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn max_term_width(mut self, w: usize) -> Self {$/;"	P	implementation:Command
max_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub fn max_values(&self) -> usize {$/;"	P	implementation:ValueRange
max_w	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    max_w: Option<usize>,$/;"	m	struct:Command
max_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn max_width() {$/;"	f	module:test
message	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    message: Option<Message>,$/;"	m	struct:ErrorInner
metadata	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    metadata: Metadata<'a>,$/;"	m	struct:MetadataBuilder
metadata	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    metadata: Metadata<'a>,$/;"	m	struct:Record
metadata	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn metadata(&mut self, metadata: Metadata<'a>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
metadata	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn metadata(&self) -> &Metadata<'a> {$/;"	P	implementation:Record
min_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub fn min_values(&self) -> usize {$/;"	P	implementation:ValueRange
missing_letter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^    fn missing_letter() {$/;"	f	module:test
missing_required_argument	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn missing_required_argument($/;"	P	implementation:Error
missing_required_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn missing_required_error($/;"	P	implementation:Validator
missing_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn missing_subcommand($/;"	P	implementation:Error
mkeymap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^mod mkeymap;$/;"	n
module	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        mod module {$/;"	n	function:tests::test_pub_crate
module	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        mod module {$/;"	n	function:tests::test_pub_in_module
module_path	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    module_path: bool,$/;"	m	struct:DefaultFormat
module_path	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    module_path: Option<MaybeStaticStr<'a>>,$/;"	m	struct:Record
module_path	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn module_path(&mut self, path: Option<&'a str>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
module_path	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn module_path(&self) -> Option<&'a str> {$/;"	P	implementation:Record
module_path_static	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn module_path_static(&mut self, path: Option<&'static str>) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
module_path_static	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn module_path_static(&self) -> Option<&'static str> {$/;"	P	implementation:Record
msg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    pub fn msg(msg: &'static str) -> Self {$/;"	P	implementation:Error
msg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^                msg: &'a str,$/;"	m	struct:serde_support::tests::derive_serialize::MyRecordAsList
msg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^                msg: &'a str,$/;"	m	struct:serde_support::tests::derive_serialize::MyRecordAsMap
msg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^                msg: &'a str,$/;"	m	struct:sval_support::tests::derive_stream::MyRecordAsList
msg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^                msg: &'a str,$/;"	m	struct:sval_support::tests::derive_stream::MyRecordAsMap
multicall	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn multicall(self, yes: bool) -> Self {$/;"	P	implementation:Command
multicall_busybox	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod multicall_busybox;$/;"	n
multicall_hostname	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod multicall_hostname;$/;"	n
multiple	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn multiple(mut self, yes: bool) -> Self {$/;"	P	implementation:ArgGroup
multiple	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub(crate) multiple: bool,$/;"	m	struct:ArgGroup
multiple_words_on_first_line	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn multiple_words_on_first_line() {$/;"	f	module:test
mut_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn mut_arg<F>(mut self, arg_id: impl AsRef<str>, f: F) -> Self$/;"	P	implementation:Command
mut_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn mut_subcommand<F>(mut self, name: impl AsRef<str>, f: F) -> Self$/;"	P	implementation:Command
name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    name: Str,$/;"	m	struct:Command
name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn name(mut self, name: impl Into<Str>) -> Self {$/;"	P	implementation:Command
name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    name: Inner,$/;"	m	struct:OsStr
name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    name: Str,$/;"	m	struct:PossibleValue
name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    name: Inner,$/;"	m	struct:Str
name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub(crate) name: String,$/;"	m	struct:SubCommand
name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    name: Option<String>,$/;"	m	struct:Directive
name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    name: Cow<'a, str>,$/;"	m	struct:Var
name_no_brackets	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn name_no_brackets(&self) -> String {$/;"	P	implementation:Arg
needs_more_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn needs_more_vals(&self, o: &Arg) -> bool {$/;"	P	implementation:ArgMatcher
needs_options_tag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    fn needs_options_tag(&self) -> bool {$/;"	P	implementation:Usage
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn new(id: impl Into<Id>) -> Self {$/;"	P	implementation:Arg
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn new(id: impl Into<Id>) -> Self {$/;"	P	implementation:ArgGroup
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn new(name: impl Into<Str>) -> Self {$/;"	P	implementation:Command
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub fn new(name: impl Into<Str>) -> Self {$/;"	P	implementation:PossibleValue
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub fn new(range: impl Into<Self>) -> Self {$/;"	P	implementation:ValueRange
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub const fn new() -> Self {$/;"	P	implementation:StyledStr
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn new(parser: P, func: F) -> Self {$/;"	f
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	P	implementation:BoolValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	P	implementation:BoolishValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	P	implementation:EnumValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	P	implementation:FalseyValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	P	implementation:NonEmptyStringValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	P	implementation:OsStringValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	P	implementation:PathBufValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	P	implementation:RangedI64ValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	P	implementation:RangedU64ValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	P	implementation:StringValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new() -> Self {$/;"	P	implementation:_AutoValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new(values: impl Into<PossibleValuesParser>) -> Self {$/;"	P	implementation:PossibleValuesParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn new<P>(other: P) -> Self$/;"	P	implementation:ValueParser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn new() -> Option<Self> {$/;"	P	implementation:Backtrace
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn new(kind: ErrorKind) -> Self {$/;"	P	implementation:Error
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^    pub(crate) fn new(stream: Stream, color_when: ColorChoice) -> Self {$/;"	P	implementation:Colorizer
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    pub(crate) fn new($/;"	P	implementation:AutoHelp
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    pub(crate) fn new($/;"	P	implementation:HelpTemplate
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/wrap_algorithms.rs	/^    pub(crate) fn new(hard_width: usize) -> Self {$/;"	P	implementation:LineWrapper
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    pub(crate) fn new(cmd: &'cmd Command) -> Self {$/;"	P	implementation:Usage
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn new(_cmd: &Command) -> Self {$/;"	P	implementation:ArgMatcher
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    pub(crate) fn new<V: std::any::Any + Clone + Send + Sync + 'static>(inner: V) -> Self {$/;"	P	implementation:AnyValue
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    pub(crate) fn new(cmd: &'cmd mut Command) -> Self {$/;"	P	implementation:Parser
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    pub(crate) fn new(cmd: &'cmd Command) -> Self {$/;"	P	implementation:Validator
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:FlatMap
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:FlatSet
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^    fn new(id: T) -> Self {$/;"	P	implementation:Child
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn new() -> Builder {$/;"	P	implementation:Builder
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/regex.rs	/^    pub fn new(spec: &str) -> Result<Filter, String> {$/;"	P	implementation:Filter
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/string.rs	/^    pub fn new(spec: &str) -> Result<Filter, String> {$/;"	P	implementation:Filter
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub(crate) fn new(writer: &Writer) -> Self {$/;"	P	implementation:Formatter
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:Builder
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn new<E>(name: E) -> Self$/;"	P	implementation:Var
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn new() -> Builder {$/;"	P	implementation:Builder
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Env
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    const fn new(v: usize) -> AtomicUsize {$/;"	P	implementation:AtomicUsize
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn new() -> MetadataBuilder<'a> {$/;"	P	implementation:MetadataBuilder
new	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn new() -> RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
new_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn new_arg(arg: &crate::Arg) -> Self {$/;"	P	implementation:MatchedArg
new_external	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn new_external(cmd: &crate::Command) -> Self {$/;"	P	implementation:MatchedArg
new_group	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn new_group() -> Self {$/;"	P	implementation:MatchedArg
new_inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^        fn new_inner(name: Str) -> Command {$/;"	f	method:Command::new
new_val_group	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn new_val_group(&mut self) {$/;"	P	implementation:MatchedArg
new_with_default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn new_with_default<E, V>(name: E, default: V) -> Self$/;"	P	implementation:Var
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a Id> {$/;"	P	implementation:IdsRef
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a OsStr> {$/;"	P	implementation:RawValues
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:GroupedValues
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:OccurrenceValues
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Occurrences
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:RawOccurrences
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Values
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:ValuesRef
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:Indices
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    fn next(&mut self) -> Option<(&'a K, &'a V)> {$/;"	P	implementation:Iter
next	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    fn next(&mut self) -> Option<(&'a K, &'a mut V)> {$/;"	P	implementation:IterMut
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a Id> {$/;"	P	implementation:IdsRef
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a OsStr> {$/;"	P	implementation:RawValues
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:GroupedValues
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:OccurrenceValues
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Occurrences
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:RawOccurrences
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Values
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:ValuesRef
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<usize> {$/;"	P	implementation:Indices
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    fn next_back(&mut self) -> Option<(&'a K, &'a V)> {$/;"	P	implementation:Iter
next_back	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    fn next_back(&mut self) -> Option<(&'a K, &'a mut V)> {$/;"	P	implementation:IterMut
next_display_order	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn next_display_order(mut self, disp_ord: impl IntoResettable<usize>) -> Self {$/;"	P	implementation:Command
next_help_heading	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn next_help_heading(mut self, heading: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Command
next_line_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn next_line_help(self, yes: bool) -> Self {$/;"	P	implementation:Arg
next_line_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn next_line_help(self, yes: bool) -> Self {$/;"	P	implementation:Command
next_line_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    next_line_help: bool,$/;"	m	struct:HelpTemplate
no_binary_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn no_binary_name(self, yes: bool) -> Self {$/;"	P	implementation:Command
no_equals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn no_equals(cmd: &Command, arg: String, usage: Option<StyledStr>) -> Self {$/;"	P	implementation:Error
no_match	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn no_match() {$/;"	f	module:tests
no_wrap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn no_wrap() {$/;"	f	module:test
none	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn none(&mut self, msg: impl Into<String>) {$/;"	P	implementation:StyledStr
none	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn none<T: Into<String>>(&mut self, msg: T) {$/;"	P	implementation:HelpTemplate
num_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn num_args(mut self, qty: impl IntoResettable<ValueRange>) -> Self {$/;"	P	implementation:Arg
num_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) num_vals: Option<ValueRange>,$/;"	m	struct:Arg
num_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn num_vals(&self) -> usize {$/;"	P	implementation:MatchedArg
num_vals_last_group	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn num_vals_last_group(&self) -> usize {$/;"	P	implementation:MatchedArg
num_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub(crate) fn num_values(&self) -> Option<usize> {$/;"	P	implementation:ValueRange
number_of_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn number_of_values(self, qty: usize) -> Self {$/;"	P	implementation:Arg
of	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    pub(crate) fn of<A: ?Sized + 'static>() -> Self {$/;"	P	implementation:AnyValueId
ok	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/macros.rs	/^macro_rules! ok {$/;"	M
ok_or	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^fn ok_or<T, E>(t: Option<T>, e: E) -> Result<T, E> {$/;"	f
option_display3	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display3() {$/;"	f	module:test
option_display_multiple_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_multiple_aliases() {$/;"	f	module:test
option_display_multiple_occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_multiple_occurrences() {$/;"	f	module:test
option_display_multiple_short_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_multiple_short_aliases() {$/;"	f	module:test
option_display_multiple_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_multiple_values() {$/;"	f	module:test
option_display_one_or_more_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_one_or_more_values() {$/;"	f	module:test
option_display_one_or_more_values_with_value_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_one_or_more_values_with_value_name() {$/;"	f	module:test
option_display_optional_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_optional_value() {$/;"	f	module:test
option_display_single_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_single_alias() {$/;"	f	module:test
option_display_single_short_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_single_short_alias() {$/;"	f	module:test
option_display_value_names	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_value_names() {$/;"	f	module:test
option_display_zero_or_more_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_zero_or_more_values() {$/;"	f	module:test
option_display_zero_or_more_values_with_value_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn option_display_zero_or_more_values_with_value_name() {$/;"	f	module:test
option_sort_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^fn option_sort_key(arg: &Arg) -> (usize, String) {$/;"	f
or_insert	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub fn or_insert(self, default: V) -> &'a mut V {$/;"	P	implementation:Entry
or_insert_with	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub fn or_insert_with<F: FnOnce() -> V>(self, default: F) -> &'a mut V {$/;"	P	implementation:Entry
os_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod os_str;$/;"	n
os_string	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub const fn os_string() -> Self {$/;"	P	implementation:ValueParser
os_values_exact_size	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn os_values_exact_size() {$/;"	f	module:tests
output	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^mod output;$/;"	n
override_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn override_help(mut self, help: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:Command
override_usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn override_usage(mut self, usage: impl IntoResettable<StyledStr>) -> Self {$/;"	P	implementation:Command
overrides	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) overrides: Vec<Id>,$/;"	m	struct:Arg
overrides_with	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn overrides_with(mut self, arg_id: impl IntoResettable<Id>) -> Self {$/;"	P	implementation:Arg
overrides_with_all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn overrides_with_all(mut self, names: impl IntoIterator<Item = impl Into<Id>>) -> Self /;"	P	implementation:Arg
pacman	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod pacman;$/;"	n
parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        fn parse(_: &str) -> Result<usize, std::io::Error> {$/;"	f	function:test::ensure_typed_applies_to_parse
parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse($/;"	P	implementation:OsStringValueParser
parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse($/;"	P	implementation:PathBufValueParser
parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse($/;"	P	implementation:PossibleValuesParser
parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse($/;"	P	implementation:StringValueParser
parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse($/;"	P	interface:AnyValueParser
parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse($/;"	P	interface:TypedValueParser
parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse($/;"	f
parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn parse() -> Self {$/;"	P	implementation:Box
parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn parse() -> Self {$/;"	P	interface:Parser
parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn parse(&mut self, filters: &str) -> &mut Self {$/;"	P	implementation:Builder
parse_case	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        fn parse_case(expected: FmtFlags, flags: &str) {$/;"	f	function:tests::test_display_from_str_roundtrip
parse_case	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        fn parse_case(pat: &str, flags: &str) {$/;"	f	function:tests::test_from_str_err
parse_default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default() {$/;"	f	module:tests
parse_default_bare_level_debug_lc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_debug_lc() {$/;"	f	module:tests
parse_default_bare_level_debug_mixed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_debug_mixed() {$/;"	f	module:tests
parse_default_bare_level_debug_uc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_debug_uc() {$/;"	f	module:tests
parse_default_bare_level_error_lc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_error_lc() {$/;"	f	module:tests
parse_default_bare_level_error_uc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_error_uc() {$/;"	f	module:tests
parse_default_bare_level_info_lc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_info_lc() {$/;"	f	module:tests
parse_default_bare_level_info_uc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_info_uc() {$/;"	f	module:tests
parse_default_bare_level_off_lc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_off_lc() {$/;"	f	module:tests
parse_default_bare_level_off_uc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_off_uc() {$/;"	f	module:tests
parse_default_bare_level_trace_lc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_trace_lc() {$/;"	f	module:tests
parse_default_bare_level_trace_uc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_trace_uc() {$/;"	f	module:tests
parse_default_bare_level_warn_lc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_warn_lc() {$/;"	f	module:tests
parse_default_bare_level_warn_uc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_warn_uc() {$/;"	f	module:tests
parse_default_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn parse_default_env(&mut self) -> &mut Self {$/;"	P	implementation:Builder
parse_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^fn parse_env(var: &str) -> Option<usize> {$/;"	f
parse_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn parse_env<'a, E>(&mut self, env: E) -> &mut Self$/;"	P	implementation:Builder
parse_filters	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn parse_filters(&mut self, filters: &str) -> &mut Self {$/;"	P	implementation:Builder
parse_from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn parse_from<I, It>(itr: I) -> Self$/;"	P	implementation:Box
parse_from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn parse_from<I, T>(itr: I) -> Self$/;"	P	interface:Parser
parse_help_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn parse_help_subcommand($/;"	P	implementation:Parser
parse_long_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn parse_long_arg($/;"	P	implementation:Parser
parse_opt_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn parse_opt_value($/;"	P	implementation:Parser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	P	implementation:BoolValueParser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	P	implementation:BoolishValueParser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	P	implementation:EnumValueParser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	P	implementation:FalseyValueParser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	P	implementation:NonEmptyStringValueParser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	P	implementation:OsStringValueParser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	P	implementation:PathBufValueParser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	P	implementation:PossibleValuesParser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	P	implementation:StringValueParser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	P	interface:AnyValueParser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	P	interface:TypedValueParser
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn parse_ref($/;"	f
parse_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub(crate) fn parse_ref($/;"	P	implementation:ValueParser
parse_short_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn parse_short_arg($/;"	P	implementation:Parser
parse_spec	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^fn parse_spec(spec: &str) -> (Vec<Directive>, Option<inner::Filter>) {$/;"	f
parse_spec_blank_level_isolated	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_blank_level_isolated() {$/;"	f	module:tests
parse_spec_blank_level_isolated_blank_comma	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_blank_level_isolated_blank_comma() {$/;"	f	module:tests
parse_spec_blank_level_isolated_comma_blank	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_blank_level_isolated_comma_blank() {$/;"	f	module:tests
parse_spec_blank_level_isolated_comma_only	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_blank_level_isolated_comma_only() {$/;"	f	module:tests
parse_spec_empty_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_empty_level() {$/;"	f	module:tests
parse_spec_empty_level_isolated	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_empty_level_isolated() {$/;"	f	module:tests
parse_spec_empty_with_filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_empty_with_filter() {$/;"	f	module:tests
parse_spec_global	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_global() {$/;"	f	module:tests
parse_spec_global_bare_warn_lc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_global_bare_warn_lc() {$/;"	f	module:tests
parse_spec_global_bare_warn_mixed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_global_bare_warn_mixed() {$/;"	f	module:tests
parse_spec_global_bare_warn_uc	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_global_bare_warn_uc() {$/;"	f	module:tests
parse_spec_invalid_crate	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_invalid_crate() {$/;"	f	module:tests
parse_spec_invalid_crate_filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_invalid_crate_filter() {$/;"	f	module:tests
parse_spec_invalid_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_invalid_level() {$/;"	f	module:tests
parse_spec_string_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_string_level() {$/;"	f	module:tests
parse_spec_valid	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_valid() {$/;"	f	module:tests
parse_spec_valid_filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_valid_filter() {$/;"	f	module:tests
parse_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn parse_subcommand($/;"	P	implementation:Parser
parse_write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    pub(crate) fn parse_write_style(&mut self, write_style: &str) -> &mut Self {$/;"	P	implementation:Builder
parse_write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^fn parse_write_style(spec: &str) -> WriteStyle {$/;"	f
parse_write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn parse_write_style(&mut self, write_style: &str) -> &mut Self {$/;"	P	implementation:Builder
parse_write_style_invalid	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn parse_write_style_invalid() {$/;"	f	module:tests
parse_write_style_valid	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn parse_write_style_valid() {$/;"	f	module:tests
parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^pub mod parser;$/;"	n
parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    parser: P,$/;"	m	struct:MapValueParser
parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    parser: P,$/;"	m	struct:TryMapValueParser
parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^pub mod parser;$/;"	n
parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/mod.rs	/^mod parser;$/;"	n
partial_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	P	implementation:Arg
partial_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/debug_asserts.rs	/^    fn partial_cmp(&self, other: &Flag) -> Option<Ordering> {$/;"	P	implementation:Flag
partial_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {$/;"	P	implementation:Inner
partial_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {$/;"	P	implementation:Inner
partial_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {$/;"	P	implementation:StyledStr
partial_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {$/;"	P	implementation:AnyValueId
partial_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn partial_cmp(&self, other: &Key<'ko>) -> Option<cmp::Ordering> {$/;"	P	implementation:Key
partial_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn partial_cmp(&self, other: &Level) -> Option<cmp::Ordering> {$/;"	P	implementation:Level
partial_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn partial_cmp(&self, other: &Level) -> Option<cmp::Ordering> {$/;"	P	implementation:LevelFilter
partial_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn partial_cmp(&self, other: &LevelFilter) -> Option<cmp::Ordering> {$/;"	P	implementation:Level
partial_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn partial_cmp(&self, other: &LevelFilter) -> Option<cmp::Ordering> {$/;"	P	implementation:LevelFilter
path_buf	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub const fn path_buf() -> Self {$/;"	P	implementation:ValueParser
pending	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pending: Option<PendingArg>,$/;"	m	struct:ArgMatcher
pending_arg_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn pending_arg_id(&self) -> Option<&Id> {$/;"	P	implementation:ArgMatcher
pending_values_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn pending_values_mut($/;"	P	implementation:ArgMatcher
phantom	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    phantom: std::marker::PhantomData<F>,$/;"	m	struct:Error
pieces	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pieces: String,$/;"	m	struct:StyledStr
pieces	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pieces: Vec<(Option<Style>, String)>,$/;"	m	struct:StyledStr
pipe	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt::writer) fn pipe($/;"	P	implementation:BufferWriter
pipe	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt::writer) fn pipe($/;"	P	implementation:BufferWriter
placeholder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn placeholder(&mut self, msg: impl Into<String>) {$/;"	P	implementation:StyledStr
positional_display_multiple_occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_multiple_occurrences() {$/;"	f	module:test
positional_display_multiple_occurrences_required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_multiple_occurrences_required() {$/;"	f	module:test
positional_display_multiple_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_multiple_values() {$/;"	f	module:test
positional_display_multiple_values_required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_multiple_values_required() {$/;"	f	module:test
positional_display_one_or_more_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_one_or_more_values() {$/;"	f	module:test
positional_display_one_or_more_values_required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_one_or_more_values_required() {$/;"	f	module:test
positional_display_optional_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_optional_value() {$/;"	f	module:test
positional_display_required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_required() {$/;"	f	module:test
positional_display_val_names	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_val_names() {$/;"	f	module:test
positional_display_val_names_req	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_val_names_req() {$/;"	f	module:test
positional_display_val_names_required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_val_names_required() {$/;"	f	module:test
positional_display_zero_or_more_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn positional_display_zero_or_more_values() {$/;"	f	module:test
positional_sort_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^fn positional_sort_key(arg: &Arg) -> (usize, String) {$/;"	f
possible_long_flag_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn possible_long_flag_subcommand(&self, arg: &str) -> Option<&str> {$/;"	P	implementation:Parser
possible_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn possible_subcommand($/;"	P	implementation:Parser
possible_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod possible_value;$/;"	n
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn possible_values($/;"	P	implementation:BoolValueParser
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn possible_values($/;"	P	implementation:BoolishValueParser
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn possible_values($/;"	P	implementation:EnumValueParser
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn possible_values($/;"	P	implementation:FalseyValueParser
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn possible_values($/;"	P	implementation:PossibleValuesParser
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn possible_values($/;"	P	interface:AnyValueParser
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn possible_values($/;"	P	interface:TypedValueParser
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn possible_values($/;"	f
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn possible_values() -> impl Iterator<Item = crate::builder::PossibleValue> {$/;"	P	implementation:BoolValueParser
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn possible_values() -> impl Iterator<Item = crate::builder::PossibleValue> {$/;"	P	implementation:BoolishValueParser
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn possible_values() -> impl Iterator<Item = crate::builder::PossibleValue> {$/;"	P	implementation:FalseyValueParser
possible_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn possible_values($/;"	P	implementation:ValueParser
potential	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    potential: FlatMap<Id, Vec<Id>>,$/;"	m	struct:Conflicts
precision	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    precision: TimestampPrecision,$/;"	m	struct:Timestamp
print	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn print(&self) -> io::Result<()> {$/;"	P	implementation:Error
print	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^    pub(crate) fn print(&self) -> std::io::Result<()> {$/;"	P	implementation:Colorizer
print	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub(crate) fn print(&self, writer: &Writer) -> io::Result<()> {$/;"	P	implementation:Formatter
print	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    pub(super) fn print(&self, buf: &Buffer) -> io::Result<()> {$/;"	P	implementation:Writer
print	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt::writer) fn print(&self, buf: &Buffer) -> io::Result<()> {$/;"	P	implementation:BufferWriter
print	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt::writer) fn print(&self, buf: &Buffer) -> io::Result<()> {$/;"	P	implementation:BufferWriter
print_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn print_help(&mut self) -> io::Result<()> {$/;"	P	implementation:Command
print_long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn print_long_help(&mut self) -> io::Result<()> {$/;"	P	implementation:Command
private	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^mod private {$/;"	n
propagate_globals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn propagate_globals(&mut self, global_arg_vec: &[Id]) {$/;"	P	implementation:ArgMatcher
propagate_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn propagate_version(self, yes: bool) -> Self {$/;"	P	implementation:Command
propagate_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/tests.rs	/^fn propagate_version() {$/;"	f
public	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^mod public;$/;"	n
push	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    pub(crate) fn push(&mut self, new_arg: Arg) {$/;"	P	implementation:MKeyMap
push_arg_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn push_arg_values($/;"	P	implementation:Parser
push_index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn push_index(&mut self, index: usize) {$/;"	P	implementation:MatchedArg
put_usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^fn put_usage(styled: &mut StyledStr, usage: StyledStr) {$/;"	f
r_ifs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) r_ifs: Vec<(Id, OsStr)>,$/;"	m	struct:Arg
r_ifs_all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) r_ifs_all: Vec<(Id, OsStr)>,$/;"	m	struct:Arg
r_unless	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) r_unless: Vec<Id>,$/;"	m	struct:Arg
r_unless_all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) r_unless_all: Vec<Id>,$/;"	m	struct:Arg
range	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod range;$/;"	n
range	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn range<B: RangeBounds<i64>>(mut self, range: B) -> Self {$/;"	P	implementation:RangedI64ValueParser
range	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn range<B: RangeBounds<u64>>(mut self, range: B) -> Self {$/;"	P	implementation:RangedU64ValueParser
raw	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn raw(mut self, yes: bool) -> Self {$/;"	P	implementation:Arg
raw	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub(crate) fn raw(start_inclusive: usize, end_inclusive: usize) -> Self {$/;"	P	implementation:ValueRange
raw	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn raw(kind: ErrorKind, message: impl std::fmt::Display) -> Self {$/;"	P	implementation:Error
raw_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn raw_vals(&self) -> Iter<Vec<OsString>> {$/;"	P	implementation:MatchedArg
raw_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    raw_vals: Vec<Vec<OsString>>,$/;"	m	struct:MatchedArg
raw_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    pub(crate) raw_vals: Vec<OsString>,$/;"	m	struct:PendingArg
raw_vals_flatten	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn raw_vals_flatten(&self) -> Flatten<Iter<Vec<OsString>>> {$/;"	P	implementation:MatchedArg
react	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn react($/;"	P	implementation:Parser
record	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    record: Record<'a>,$/;"	m	struct:RecordBuilder
remove	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn remove(&mut self, other: Self);$/;"	P	interface:BitFlags
remove	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn remove(&mut self, arg: &Id) -> bool {$/;"	P	implementation:ArgMatcher
remove	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub fn remove<Q: ?Sized>(&mut self, key: &Q) -> Option<V>$/;"	P	implementation:FlatMap
remove_by_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/mkeymap.rs	/^    pub(crate) fn remove_by_name(&mut self, name: &str) -> Option<Arg> {$/;"	P	implementation:MKeyMap
remove_entry	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    pub fn remove_entry<Q: ?Sized>(&mut self, key: &Q) -> Option<(K, V)>$/;"	P	implementation:FlatMap
remove_many	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn remove_many<T: Any + Clone + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
remove_occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn remove_occurrences<T: Any + Clone + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
remove_one	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn remove_one<T: Any + Clone + Send + Sync + 'static>(&mut self, id: &str) -> Option<T> /;"	P	implementation:ArgMatches
remove_overrides	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn remove_overrides(&self, arg: &Arg, matcher: &mut ArgMatcher) {$/;"	P	implementation:Parser
remove_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn remove_subcommand(&mut self) -> Option<(String, ArgMatches)> {$/;"	P	implementation:ArgMatches
render	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn render(&self) -> StyledStr {$/;"	P	implementation:Error
render_arg_val	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    fn render_arg_val(&self, required: bool) -> String {$/;"	P	implementation:Arg
render_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn render_help(&mut self) -> StyledStr {$/;"	P	implementation:Command
render_long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn render_long_help(&mut self) -> StyledStr {$/;"	P	implementation:Command
render_long_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn render_long_version(&self) -> String {$/;"	P	implementation:Command
render_usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn render_usage(&mut self) -> StyledStr {$/;"	P	implementation:Command
render_usage_	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn render_usage_(&mut self) -> Option<StyledStr> {$/;"	P	implementation:Command
render_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn render_version(&self) -> String {$/;"	P	implementation:Command
repl	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod repl;$/;"	n
replace	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn replace($/;"	P	implementation:Command
replace_newline_var	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^fn replace_newline_var(styled: &mut StyledStr) {$/;"	f
replacers	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    replacers: FlatMap<Str, Vec<Str>>,$/;"	m	struct:Command
require_equals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn require_equals(self, yes: bool) -> Self {$/;"	P	implementation:Arg
required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn required(self, yes: bool) -> Self {$/;"	P	implementation:Arg
required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn required(mut self, yes: bool) -> Self {$/;"	P	implementation:ArgGroup
required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub(crate) required: bool,$/;"	m	struct:ArgGroup
required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    pub(crate) fn required(mut self, required: &'cmd ChildGraph<Id>) -> Self {$/;"	P	implementation:Usage
required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    required: Option<&'cmd ChildGraph<Id>>,$/;"	m	struct:Usage
required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    required: ChildGraph<Id>,$/;"	m	struct:Validator
required_graph	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn required_graph(&self) -> ChildGraph<Id> {$/;"	P	implementation:Command
required_if_eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn required_if_eq(mut self, arg_id: impl Into<Id>, val: impl Into<OsStr>) -> Self {$/;"	P	implementation:Arg
required_if_eq_all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn required_if_eq_all($/;"	P	implementation:Arg
required_if_eq_any	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn required_if_eq_any($/;"	P	implementation:Arg
required_unless_present	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn required_unless_present(mut self, arg_id: impl IntoResettable<Id>) -> Self {$/;"	P	implementation:Arg
required_unless_present_all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn required_unless_present_all($/;"	P	implementation:Arg
required_unless_present_any	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn required_unless_present_any($/;"	P	implementation:Arg
requires	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn requires(mut self, arg_id: impl IntoResettable<Id>) -> Self {$/;"	P	implementation:Arg
requires	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) requires: Vec<(ArgPredicate, Id)>,$/;"	m	struct:Arg
requires	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn requires(mut self, id: impl IntoResettable<Id>) -> Self {$/;"	P	implementation:ArgGroup
requires	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub(crate) requires: Vec<Id>,$/;"	m	struct:ArgGroup
requires_all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn requires_all(self, ids: impl IntoIterator<Item = impl Into<Id>>) -> Self {$/;"	P	implementation:Arg
requires_all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    pub fn requires_all(mut self, ns: impl IntoIterator<Item = impl Into<Id>>) -> Self {$/;"	P	implementation:ArgGroup
requires_if	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn requires_if(mut self, val: impl Into<ArgPredicate>, arg_id: impl Into<Id>) -> Self {$/;"	P	implementation:Arg
requires_ifs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn requires_ifs($/;"	P	implementation:Arg
reset	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/wrap_algorithms.rs	/^    pub(crate) fn reset(&mut self) {$/;"	P	implementation:LineWrapper
reset	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn reset(&mut self) -> io::Result<()> {$/;"	P	implementation:Buffer
resettable	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod resettable;$/;"	n
resolve_pending	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn resolve_pending(&self, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Parser
retain	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    pub fn retain<F>(&mut self, f: F)$/;"	P	implementation:FlatSet
safe_exit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/mod.rs	/^pub(crate) fn safe_exit(code: i32) -> ! {$/;"	f
sc_spec_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn sc_spec_vals(&self, a: &Command) -> String {$/;"	P	implementation:HelpTemplate
seen_pairs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^            seen_pairs: usize,$/;"	m	struct:tests::test_record_key_values_builder::TestVisitor
serde	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^mod serde;$/;"	n
serde_support	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external.rs	/^pub mod serde_support;$/;"	n
serde_support	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^mod serde_support {$/;"	n
serde_support	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^mod serde_support {$/;"	n
serialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde_support::Key
serialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde_support
serialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    pub fn serialize<T, S>(source: &T, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:as_list
serialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    pub fn serialize<T, S>(source: &T, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:as_map
serialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn serialize<S>(&self, s: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Value
serialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Level
serialize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:LevelFilter
serialize_bits_default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external/serde_support.rs	/^pub fn serialize_bits_default<T: fmt::Display + AsRef<B>, B: Serialize, S: Serializer>($/;"	f
set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn set(&mut self, other: Self, value: bool);$/;"	P	interface:BitFlags
set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn set(&mut self, s: AppSettings) {$/;"	P	implementation:Command
set_bg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_bg(&mut self, color: Color) -> &mut Style {$/;"	P	implementation:Style
set_bin_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn set_bin_name(&mut self, name: impl Into<String>) {$/;"	P	implementation:Command
set_bold	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_bold(&mut self, yes: bool) -> &mut Style {$/;"	P	implementation:Style
set_boxed_logger	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn set_boxed_logger(logger: Box<dyn Log>) -> Result<(), SetLoggerError> {$/;"	f
set_color	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn set_color(mut self, color_when: ColorChoice) -> Self {$/;"	P	implementation:Error
set_color	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn set_color(&mut self, spec: &ColorSpec) -> io::Result<()> {$/;"	P	implementation:Buffer
set_color	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_color(&mut self, color: Color) -> &mut Style {$/;"	P	implementation:Style
set_colored_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn set_colored_help(mut self, color_help_when: ColorChoice) -> Self {$/;"	P	implementation:Error
set_dimmed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_dimmed(&mut self, yes: bool) -> &mut Style {$/;"	P	implementation:Style
set_help_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn set_help_flag(mut self, help_flag: Option<&'static str>) -> Self {$/;"	P	implementation:Error
set_intense	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_intense(&mut self, yes: bool) -> &mut Style {$/;"	P	implementation:Style
set_logger	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn set_logger(logger: &'static dyn Log) -> Result<(), SetLoggerError> {$/;"	f
set_logger_inner	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^fn set_logger_inner<F>(make_logger: F) -> Result<(), SetLoggerError>$/;"	f
set_logger_racy	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub unsafe fn set_logger_racy(logger: &'static dyn Log) -> Result<(), SetLoggerError> {$/;"	f
set_max_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn set_max_level(level: LevelFilter) {$/;"	f
set_message	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn set_message(mut self, message: impl Into<Message>) -> Self {$/;"	P	implementation:Error
set_source	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn set_source(mut self, source: Box<dyn error::Error + Send + Sync>) -> Self {$/;"	P	implementation:Error
set_source	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn set_source(&mut self, source: ValueSource) {$/;"	P	implementation:MatchedArg
setting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn setting<F>(mut self, setting: F) -> Self$/;"	P	implementation:Arg
setting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    fn setting() {$/;"	f	module:test
setting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn setting<F>(mut self, setting: F) -> Self$/;"	P	implementation:Command
setting_bitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    fn setting_bitor() {$/;"	f	module:test
settings	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) settings: ArgFlags,$/;"	m	struct:Arg
settings	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    settings: AppFlags,$/;"	m	struct:Command
short	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn short(mut self, s: impl IntoResettable<char>) -> Self {$/;"	P	implementation:Arg
short	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) short: Option<char>,$/;"	m	struct:Arg
short	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn short(&mut self, arg: &Arg) {$/;"	P	implementation:HelpTemplate
short_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn short_alias(mut self, name: impl IntoResettable<char>) -> Self {$/;"	P	implementation:Arg
short_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn short_aliases(mut self, names: impl IntoIterator<Item = char>) -> Self {$/;"	P	implementation:Arg
short_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) short_aliases: Vec<(char, bool)>, \/\/ (name, visible)$/;"	m	struct:Arg
short_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn short_flag(mut self, short: impl IntoResettable<char>) -> Self {$/;"	P	implementation:Command
short_flag	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    short_flag: Option<char>,$/;"	m	struct:Command
short_flag_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn short_flag_alias(mut self, name: impl IntoResettable<char>) -> Self {$/;"	P	implementation:Command
short_flag_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn short_flag_aliases(mut self, names: impl IntoIterator<Item = char>) -> Self {$/;"	P	implementation:Command
short_flag_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    short_flag_aliases: Vec<(char, bool)>, \/\/ (name, visible)$/;"	m	struct:Command
short_flag_aliases_to	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn short_flag_aliases_to(&self, flag: char) -> bool {$/;"	P	implementation:Command
should_show_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^fn should_show_arg(use_long: bool, arg: &Arg) -> bool {$/;"	f
should_show_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/possible_value.rs	/^    pub(crate) fn should_show_help(&self) -> bool {$/;"	P	implementation:PossibleValue
should_show_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^fn should_show_subcommand(subcommand: &Command) -> bool {$/;"	f
signed	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn signed() -> impl Iterator<Item = Value<'static>> {$/;"	f	module:tests
singular_or_plural	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^fn singular_or_plural(n: usize) -> &'static str {$/;"	f
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:GroupedValues
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IdsRef
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Indices
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:OccurrenceValues
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Occurrences
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RawOccurrences
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RawValues
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Values
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:ValuesRef
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Iter
size_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IterMut
some	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/macros.rs	/^macro_rules! some {$/;"	M
sort_by_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_set.rs	/^    pub fn sort_by_key<K, F>(&mut self, f: F)$/;"	P	implementation:FlatSet
source	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:Error
source	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    source: Option<Box<dyn error::Error + Send + Sync>>,$/;"	m	struct:ErrorInner
source	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn source(&self) -> Option<ValueSource> {$/;"	P	implementation:MatchedArg
source	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    source: Option<ValueSource>,$/;"	m	struct:MatchedArg
source	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/mod.rs	/^pub mod source;$/;"	n
source_is_object_safe	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn source_is_object_safe() {$/;"	f	module:tests
spaces	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn spaces(&mut self, n: usize) {$/;"	P	implementation:HelpTemplate
spec	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    spec: ColorSpec,$/;"	m	struct:Style
spec_vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn spec_vals(&self, a: &Arg) -> String {$/;"	P	implementation:HelpTemplate
start_bound	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    fn start_bound(&self) -> std::ops::Bound<&usize> {$/;"	P	implementation:ValueRange
start_custom_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn start_custom_arg(&mut self, arg: &Arg, source: ValueSource) {$/;"	P	implementation:ArgMatcher
start_custom_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn start_custom_arg(&self, matcher: &mut ArgMatcher, arg: &Arg, source: ValueSource) {$/;"	P	implementation:Parser
start_custom_group	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn start_custom_group(&mut self, id: Id, source: ValueSource) {$/;"	P	implementation:ArgMatcher
start_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^fn start_error(styled: &mut StyledStr) {$/;"	f
start_inclusive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    start_inclusive: usize,$/;"	m	struct:ValueRange
start_occurrence_of_external	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn start_occurrence_of_external(&mut self, cmd: &crate::Command) {$/;"	P	implementation:ArgMatcher
start_trailing	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn start_trailing(&mut self) {$/;"	P	implementation:ArgMatcher
static	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl ToValue for dyn std::error::Error + 'static {$/;"	c
std_fmt_impls	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^mod std_fmt_impls {$/;"	n
std_support	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^mod std_support {$/;"	n
std_support	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^mod std_support {$/;"	n
std_support	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^mod std_support {$/;"	n
std_support	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^mod std_support {$/;"	n
stderr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt::writer) fn stderr(is_test: bool, write_style: WriteStyle) -> Self {$/;"	P	implementation:BufferWriter
stderr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt::writer) fn stderr(_is_test: bool, _write_style: WriteStyle) -> Self {$/;"	P	implementation:BufferWriter
stdout	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt::writer) fn stdout(is_test: bool, write_style: WriteStyle) -> Self {$/;"	P	implementation:BufferWriter
stdout	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt::writer) fn stdout(_is_test: bool, _write_style: WriteStyle) -> Self {$/;"	P	implementation:BufferWriter
store	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn store(&self, val: usize, _order: Ordering) {$/;"	P	implementation:AtomicUsize
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    type IterNames: Iterator<Item = (&'static str, Self)>;$/;"	v	interface:BitFlags
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod str;$/;"	n
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialEq<OsStr> for &'_ str {$/;"	c
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^impl PartialEq<OsStr> for str {$/;"	c
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialEq<Str> for &'_ str {$/;"	c
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/str.rs	/^impl PartialEq<Str> for str {$/;"	c
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    pub(crate) const EXTERNAL: &'static str = "";$/;"	v	implementation:Id
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    pub(crate) const HELP: &'static str = "help";$/;"	v	implementation:Id
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^    pub(crate) const VERSION: &'static str = "version";$/;"	v	implementation:Id
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl PartialEq<Id> for &'_ str {$/;"	c
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/id.rs	/^impl PartialEq<Id> for str {$/;"	c
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^type SubtleStyle = &'static str;$/;"	v
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^type SubtleStyle = StyledValue<'static, &'static str>;$/;"	v
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^impl ToKey for str {$/;"	c
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn str() -> impl Iterator<Item = Value<'static>> {$/;"	f	module:tests
str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl ToValue for str {$/;"	c
str_to_bool	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/mod.rs	/^mod str_to_bool;$/;"	n
str_to_bool	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/str_to_bool.rs	/^pub(crate) fn str_to_bool(val: impl AsRef<str>) -> Option<bool> {$/;"	f
stream	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn stream(&self) -> Stream {$/;"	P	implementation:Error
stream	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^    stream: Stream,$/;"	m	struct:Colorizer
stream	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^        fn stream(&self, stream: &mut value::Stream) -> value::Result {$/;"	P	implementation:sval_support::Key
stream	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn stream(&self, stream: &mut value::Stream) -> value::Result {$/;"	f	module:sval_support
stream	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn stream(&self, stream: &mut self::sval::value::Stream) -> self::sval::value::Result {$/;"	P	implementation:Value
string	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub const fn string() -> Self {$/;"	P	implementation:ValueParser
style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn style(&self) -> Style {$/;"	P	implementation:Formatter
style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    style: Cow<'a, Style>,$/;"	m	struct:StyledValue
styled	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    styled: &'s StyledStr,$/;"	m	struct:AnsiDisplay
styled_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod styled_str;$/;"	n
stylize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn stylize(&mut self, style: impl Into<Option<Style>>, msg: impl Into<String>) {$/;"	P	implementation:StyledStr
stylize_	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn stylize_(&mut self, _style: Option<Style>, msg: String) {$/;"	P	implementation:StyledStr
stylize_	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    fn stylize_(&mut self, style: Option<Style>, msg: String) {$/;"	P	implementation:StyledStr
stylize_arg_suffix	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn stylize_arg_suffix(&self, required: Option<bool>) -> StyledStr {$/;"	P	implementation:Arg
stylized	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn stylized(&self, required: Option<bool>) -> StyledStr {$/;"	P	implementation:Arg
subcmd	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn subcmd(&mut self, sc_str: StyledStr, next_line_help: bool, longest: usize) {$/;"	P	implementation:HelpTemplate
subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn subcommand(self, subcmd: impl Into<Command>) -> Self {$/;"	P	implementation:Command
subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn subcommand(&mut self, sc: SubCommand) {$/;"	P	implementation:ArgMatcher
subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn subcommand(&self) -> Option<(&str, &ArgMatches)> {$/;"	P	implementation:ArgMatches
subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub(crate) subcommand: Option<Box<SubCommand>>,$/;"	m	struct:ArgMatches
subcommand_heading	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    subcommand_heading: Option<Str>,$/;"	m	struct:Command
subcommand_help_heading	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn subcommand_help_heading(mut self, heading: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Command
subcommand_internal	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn subcommand_internal(mut self, mut subcmd: Self) -> Self {$/;"	P	implementation:Command
subcommand_matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn subcommand_matches(&self, name: &str) -> Option<&ArgMatches> {$/;"	P	implementation:ArgMatches
subcommand_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn subcommand_name(&self) -> Option<&str> {$/;"	P	implementation:ArgMatcher
subcommand_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn subcommand_name(&self) -> Option<&str> {$/;"	P	implementation:ArgMatches
subcommand_negates_reqs	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn subcommand_negates_reqs(self, yes: bool) -> Self {$/;"	P	implementation:Command
subcommand_next_line_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn subcommand_next_line_help(&self, cmd: &Command, spec_vals: &str, longest: usize) -> bool /;"	P	implementation:HelpTemplate
subcommand_precedence_over_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn subcommand_precedence_over_arg(self, yes: bool) -> Self {$/;"	P	implementation:Command
subcommand_required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn subcommand_required(self, yes: bool) -> Self {$/;"	P	implementation:Command
subcommand_value_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn subcommand_value_name(mut self, value_name: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Command
subcommand_value_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    subcommand_value_name: Option<Str>,$/;"	m	struct:Command
subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn subcommands(mut self, subcmds: impl IntoIterator<Item = impl Into<Self>>) -> Self {$/;"	P	implementation:Command
subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    subcommands: Vec<Command>,$/;"	m	struct:Command
submodule	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^            mod submodule {$/;"	n	module:tests::test_pub_in_module::module
submodule	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    mod submodule {$/;"	n	module:tests
subtle_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn subtle_style(&self, text: &'static str) -> SubtleStyle {$/;"	P	implementation:DefaultFormat
suffix	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    suffix: &'a str,$/;"	m	struct:DefaultFormat
suggestions	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/mod.rs	/^pub(crate) mod suggestions;$/;"	n
sval_support	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^mod sval_support {$/;"	n
sval_support	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^mod sval_support {$/;"	n
t1	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    mod t1 {$/;"	n	module:tests
take_pending	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/arg_matcher.rs	/^    pub(crate) fn take_pending(&mut self) -> Option<PendingArg> {$/;"	P	implementation:ArgMatcher
takes_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    pub fn takes_values(&self) -> bool {$/;"	P	implementation:ArgAction
takes_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^    pub fn takes_values(&self) -> bool {$/;"	P	implementation:ValueRange
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    target: std::marker::PhantomData<T>,$/;"	m	struct:RangedI64ValueParser
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    target: std::marker::PhantomData<T>,$/;"	m	struct:RangedU64ValueParser
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    target: bool,$/;"	m	struct:DefaultFormat
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    pub(crate) fn target(&mut self, target: Target) -> &mut Self {$/;"	P	implementation:Builder
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    target: WritableTarget,$/;"	m	struct:Builder
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^    target: WritableTarget,$/;"	m	struct:BufferWriter
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn target(&mut self, target: fmt::Target) -> &mut Self {$/;"	P	implementation:Builder
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn target(&mut self, target: &'a str) -> &mut MetadataBuilder<'a> {$/;"	P	implementation:MetadataBuilder
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn target(&mut self, target: &'a str) -> &mut RecordBuilder<'a> {$/;"	P	implementation:RecordBuilder
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn target(&self) -> &'a str {$/;"	P	implementation:Metadata
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn target(&self) -> &'a str {$/;"	P	implementation:Record
target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    target: &'a str,$/;"	m	struct:Metadata
template	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    template: Option<StyledStr>,$/;"	m	struct:Command
template	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    template: HelpTemplate<'cmd, 'writer>,$/;"	m	struct:AutoHelp
term_w	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    term_w: Option<usize>,$/;"	m	struct:Command
term_w	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    term_w: usize,$/;"	m	struct:HelpTemplate
term_width	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn term_width(mut self, width: usize) -> Self {$/;"	P	implementation:Command
termcolor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^mod termcolor;$/;"	n
terminator	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) terminator: Option<Str>,$/;"	m	struct:Arg
test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^            mod test {$/;"	n	module:tests::test_pub_in_module::module
test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^mod test {$/;"	n
test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^mod test {$/;"	n
test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^mod test {$/;"	n
test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/range.rs	/^mod test {$/;"	n
test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^mod test {$/;"	n
test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^mod test {$/;"	n
test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^mod test {$/;"	n
test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^mod test {$/;"	n
test	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^mod test {$/;"	n
test_assignment_operators	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_assignment_operators() {$/;"	f	module:tests
test_binary	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_binary() {$/;"	f	module:tests
test_bits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_bits() {$/;"	f	module:tests
test_capture_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_capture_error() {$/;"	f	module:tests
test_capture_fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_capture_fmt() {$/;"	f	module:tests
test_capture_serde	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_capture_serde() {$/;"	f	module:tests
test_capture_sval	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_capture_sval() {$/;"	f	module:tests
test_const_fn	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_const_fn() {$/;"	f	module:tests
test_contains	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_contains() {$/;"	f	module:tests
test_cross_cmp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_cross_cmp() {$/;"	f	module:tests
test_cross_eq	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_cross_eq() {$/;"	f	module:tests
test_debug	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_debug() {$/;"	f	module:tests
test_default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_default() {$/;"	f	module:tests
test_default_indices	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn test_default_indices() {$/;"	f	module:tests
test_default_indices_with_shorter_lifetime	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn test_default_indices_with_shorter_lifetime() {$/;"	f	module:tests
test_default_raw_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn test_default_raw_values() {$/;"	f	module:tests
test_deprecated	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_deprecated() {$/;"	f	module:tests
test_disjoint_intersects	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_disjoint_intersects() {$/;"	f	module:tests
test_display_from_str_roundtrip	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_display_from_str_roundtrip() {$/;"	f	module:tests
test_downcast_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_downcast_ref() {$/;"	f	module:tests
test_empty_bitflags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_empty_bitflags() {$/;"	f	module:tests
test_empty_does_not_intersect_with_full	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_empty_does_not_intersect_with_full() {$/;"	f	module:tests
test_error_trait	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_error_trait() {$/;"	f	module:tests
test_extend	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_extend() {$/;"	f	module:tests
test_find_words	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/word_separators.rs	/^    macro_rules! test_find_words {$/;"	M	module:tests
test_foreign_impl	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_foreign_impl() {$/;"	f	module:tests
test_from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_group.rs	/^    fn test_from() {$/;"	f	module:test
test_from_bits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_from_bits() {$/;"	f	module:tests
test_from_bits_edge_cases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_from_bits_edge_cases() {$/;"	f	module:tests
test_from_bits_retain	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_from_bits_retain() {$/;"	f	module:tests
test_from_bits_truncate	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_from_bits_truncate() {$/;"	f	module:tests
test_from_bits_truncate_edge_cases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_from_bits_truncate_edge_cases() {$/;"	f	module:tests
test_from_iterator	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_from_iterator() {$/;"	f	module:tests
test_from_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_from_name() {$/;"	f	module:tests
test_from_str_err	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_from_str_err() {$/;"	f	module:tests
test_grouped_vals_first	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    fn test_grouped_vals_first() {$/;"	f	module:tests
test_hash	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_hash() {$/;"	f	module:tests
test_in_function	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_in_function() {$/;"	f	module:tests
test_insert	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_insert() {$/;"	f	module:tests
test_is_all	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_is_all() {$/;"	f	module:tests
test_is_empty	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_is_empty() {$/;"	f	module:tests
test_iter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_iter() {$/;"	f	module:tests
test_level_as_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_level_as_str() {$/;"	f	module:tests
test_level_case_insensitive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_case_insensitive() {$/;"	f	module:tests
test_level_de_bytes	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_de_bytes() {$/;"	f	module:tests
test_level_de_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_de_error() {$/;"	f	module:tests
test_level_de_variant_index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_de_variant_index() {$/;"	f	module:tests
test_level_filter_as_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_level_filter_as_str() {$/;"	f	module:tests
test_level_filter_case_insensitive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_filter_case_insensitive() {$/;"	f	module:tests
test_level_filter_de_bytes	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_filter_de_bytes() {$/;"	f	module:tests
test_level_filter_de_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_filter_de_error() {$/;"	f	module:tests
test_level_filter_de_variant_index	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_filter_de_variant_index() {$/;"	f	module:tests
test_level_filter_ser_de	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_filter_ser_de() {$/;"	f	module:tests
test_level_from_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_level_from_str() {$/;"	f	module:tests
test_level_ser_de	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_ser_de() {$/;"	f	module:tests
test_level_show	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_level_show() {$/;"	f	module:tests
test_levelfilter_from_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_levelfilter_from_str() {$/;"	f	module:tests
test_levelfilter_show	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_levelfilter_show() {$/;"	f	module:tests
test_lowerhex	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_lowerhex() {$/;"	f	module:tests
test_lt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_lt() {$/;"	f	module:tests
test_metadata_builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_metadata_builder() {$/;"	f	module:tests
test_metadata_convenience_builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_metadata_convenience_builder() {$/;"	f	module:tests
test_octal	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_octal() {$/;"	f	module:tests
test_operators	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_operators() {$/;"	f	module:tests
test_operators_unchecked	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_operators_unchecked() {$/;"	f	module:tests
test_ord	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_ord() {$/;"	f	module:tests
test_overlapping_intersects	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_overlapping_intersects() {$/;"	f	module:tests
test_private	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^        fn test_private() {$/;"	f	module:tests::submodule
test_pub_crate	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_pub_crate() {$/;"	f	module:tests
test_pub_in_module	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_pub_in_module() {$/;"	f	module:tests
test_public	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_public() {$/;"	f	module:tests
test_record_builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_record_builder() {$/;"	f	module:tests
test_record_complete_builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_record_complete_builder() {$/;"	f	module:tests
test_record_convenience_builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_record_convenience_builder() {$/;"	f	module:tests
test_record_key_values_builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_record_key_values_builder() {$/;"	f	module:tests
test_record_key_values_get_coerce	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_record_key_values_get_coerce() {$/;"	f	module:tests
test_remove	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_remove() {$/;"	f	module:tests
test_serde_bitflags_default	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external/serde_support.rs	/^    fn test_serde_bitflags_default() {$/;"	f	module:tests
test_set	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_set() {$/;"	f	module:tests
test_set_ops_basic	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_set_ops_basic() {$/;"	f	module:tests
test_set_ops_const	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_set_ops_const() {$/;"	f	module:tests
test_set_ops_exhaustive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_set_ops_exhaustive() {$/;"	f	module:tests
test_set_ops_unchecked	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_set_ops_unchecked() {$/;"	f	module:tests
test_to_bool	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_bool() {$/;"	f	module:tests
test_to_char	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_char() {$/;"	f	module:tests
test_to_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_to_level() {$/;"	f	module:tests
test_to_level_filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_to_level_filter() {$/;"	f	module:tests
test_to_number	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_number() {$/;"	f	module:tests
test_to_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_str() {$/;"	f	module:tests
test_to_value_display	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_value_display() {$/;"	f	module:tests
test_to_value_structured	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_value_structured() {$/;"	f	module:tests
test_two_empties_do_not_intersect	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_two_empties_do_not_intersect() {$/;"	f	module:tests
test_u128_bitflags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_u128_bitflags() {$/;"	f	module:tests
test_upperhex	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_upperhex() {$/;"	f	module:tests
test_visit_borrowed_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_visit_borrowed_str() {$/;"	f	module:tests
test_visit_integer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_visit_integer() {$/;"	f	module:tests
test_zero_value_flags	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^    fn test_zero_value_flags() {$/;"	f	module:tests
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external/serde_support.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod tests;$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/core.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/word_separators.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    mod tests {$/;"	n	module:serde_support
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    mod tests {$/;"	n	module:std_support
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    mod tests {$/;"	n	module:sval_support
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^pub(crate) mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^mod tests {$/;"	n
tests	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^mod tests {$/;"	n
textwrap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/mod.rs	/^pub(crate) mod textwrap;$/;"	n
time	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    time: SystemTime,$/;"	m	struct:Timestamp
timestamp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp(&self) -> Timestamp {$/;"	P	implementation:Formatter
timestamp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    timestamp: Option<TimestampPrecision>,$/;"	m	struct:DefaultFormat
timestamp_micros	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_micros(&self) -> Timestamp {$/;"	P	implementation:Formatter
timestamp_millis	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_millis(&self) -> Timestamp {$/;"	P	implementation:Formatter
timestamp_nanos	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_nanos(&self) -> Timestamp {$/;"	P	implementation:Formatter
timestamp_seconds	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_seconds(&self) -> Timestamp {$/;"	P	implementation:Formatter
to_ascii_uppercase	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn to_ascii_uppercase(c: u8) -> u8 {$/;"	f	function:eq_ignore_ascii_case
to_be_or_not	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn to_be_or_not() {$/;"	f	module:test
to_borrowed_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn to_borrowed_error(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	P	implementation:Value
to_borrowed_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn to_borrowed_str(&self) -> Option<&str> {$/;"	P	implementation:Value
to_builder	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn to_builder(&self) -> RecordBuilder {$/;"	P	implementation:Record
to_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^        fn to_key(&self) -> Key {$/;"	P	implementation:std_support::Cow
to_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^        fn to_key(&self) -> Key {$/;"	P	implementation:std_support::String
to_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn to_key(&self) -> Key {$/;"	P	implementation:Key
to_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn to_key(&self) -> Key {$/;"	P	implementation:str
to_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn to_key(&self) -> Key {$/;"	f
to_key	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn to_key(&self) -> Key;$/;"	P	interface:ToKey
to_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn to_level(&self) -> Option<Level> {$/;"	P	implementation:LevelFilter
to_level_filter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn to_level_filter(&self) -> LevelFilter {$/;"	P	implementation:Level
to_os_string	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/os_str.rs	/^    pub fn to_os_string(&self) -> std::ffi::OsString {$/;"	P	implementation:OsStr
to_possible_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn to_possible_value(&self) -> Option<PossibleValue>;$/;"	P	interface:ValueEnum
to_possible_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^    fn to_possible_value(&self) -> Option<PossibleValue> {$/;"	P	implementation:ColorChoice
to_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        pub fn to_str(&self) -> Option<Cow<str>> {$/;"	P	implementation:std_support::Value
to_token	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        pub(crate) fn to_token(&self) -> Token {$/;"	P	implementation:tests::Value
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        fn to_value(&self) -> Value {$/;"	P	implementation:std_support::Cow
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        fn to_value(&self) -> Value {$/;"	P	implementation:std_support::String
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        fn to_value(&self) -> Value {$/;"	f	module:std_support
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:Debug
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:Display
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:NonZeroI128
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:NonZeroU128
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:ToValue
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:Value
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:i128
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:static
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:str
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	P	implementation:u128
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	f
to_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value;$/;"	P	interface:ToValue
toggle	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/traits.rs	/^    fn toggle(&mut self, other: Self);$/;"	P	interface:BitFlags
too_few_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn too_few_values($/;"	P	implementation:Error
too_many_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn too_many_values($/;"	P	implementation:Error
trace	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! trace {$/;"	M
trailing_idx	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    pub(crate) trailing_idx: Option<usize>,$/;"	m	struct:PendingArg
trailing_var_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn trailing_var_arg(self, yes: bool) -> Self {$/;"	P	implementation:Arg
trailing_var_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn trailing_var_arg(self, yes: bool) -> Self {$/;"	P	implementation:Command
trailing_whitespace	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn trailing_whitespace() {$/;"	f	module:test
traits	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^mod traits;$/;"	n
trim	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn trim(&mut self) {$/;"	P	implementation:StyledStr
trim_end	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn trim_end(&mut self) {$/;"	P	implementation:StyledStr
trim_start	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn trim_start(&mut self) {$/;"	P	implementation:StyledStr
try_contains_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn try_contains_id(&self, id: &str) -> Result<bool, MatchesError> {$/;"	P	implementation:ArgMatches
try_get_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn try_get_arg(&self, arg: &str) -> Result<Option<&MatchedArg>, MatchesError> {$/;"	P	implementation:ArgMatches
try_get_arg_t	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn try_get_arg_t<T: Any + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
try_get_many	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn try_get_many<T: Any + Clone + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
try_get_matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn try_get_matches(self) -> ClapResult<ArgMatches> {$/;"	P	implementation:Command
try_get_matches_from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn try_get_matches_from<I, T>(mut self, itr: I) -> ClapResult<ArgMatches>$/;"	P	implementation:Command
try_get_matches_from_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn try_get_matches_from_mut<I, T>(&mut self, itr: I) -> ClapResult<ArgMatches>$/;"	P	implementation:Command
try_get_occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn try_get_occurrences<T: Any + Clone + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
try_get_one	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn try_get_one<T: Any + Clone + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
try_get_raw	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn try_get_raw(&self, id: &str) -> Result<Option<RawValues<'_>>, MatchesError> {$/;"	P	implementation:ArgMatches
try_get_raw_occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn try_get_raw_occurrences($/;"	P	implementation:ArgMatches
try_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^fn try_help(styled: &mut StyledStr, help: Option<&str>) {$/;"	f
try_init	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn try_init(&mut self) -> Result<(), SetLoggerError> {$/;"	P	implementation:Builder
try_init	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn try_init() -> Result<(), SetLoggerError> {$/;"	f
try_init_from_env	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn try_init_from_env<'a, E>(env: E) -> Result<(), SetLoggerError>$/;"	f
try_map	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn try_map<T, E, F>(self, func: F) -> TryMapValueParser<Self, F>$/;"	P	interface:TypedValueParser
try_parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn try_parse() -> Result<Self, Error> {$/;"	P	implementation:Box
try_parse	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn try_parse() -> Result<Self, Error> {$/;"	P	interface:Parser
try_parse_from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn try_parse_from<I, It>(itr: I) -> Result<Self, Error>$/;"	P	implementation:Box
try_parse_from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn try_parse_from<I, T>(itr: I) -> Result<Self, Error>$/;"	P	interface:Parser
try_remove_arg_t	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn try_remove_arg_t<T: Any + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
try_remove_many	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn try_remove_many<T: Any + Clone + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
try_remove_occurrences	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn try_remove_occurrences<T: Any + Clone + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
try_remove_one	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn try_remove_one<T: Any + Clone + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
try_update_from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn try_update_from<I, T>(&mut self, itr: I) -> Result<(), Error>$/;"	P	interface:Parser
two_args_of	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn two_args_of<F>(&self, condition: F) -> Option<(&Arg, &Arg)>$/;"	P	implementation:Command
two_elements_of	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^fn two_elements_of<I, T>(mut iter: I) -> Option<(T, T)>$/;"	f
two_groups_of	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    fn two_groups_of<F>(&self, condition: F) -> Option<(&ArgGroup, &ArgGroup)>$/;"	P	implementation:Command
type_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn type_id(&self) -> AnyValueId {$/;"	f
type_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn type_id(&self) -> AnyValueId;$/;"	P	interface:AnyValueParser
type_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    pub fn type_id(&self) -> AnyValueId {$/;"	P	implementation:ValueParser
type_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    pub(crate) fn type_id(&self) -> AnyValueId {$/;"	P	implementation:AnyValue
type_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    type_id: std::any::TypeId,$/;"	m	struct:AnyValueId
type_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn type_id(&self) -> Option<AnyValueId> {$/;"	P	implementation:MatchedArg
type_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    type_id: Option<AnyValueId>,$/;"	m	struct:MatchedArg
type_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/any_value.rs	/^    type_name: &'static str,$/;"	m	struct:AnyValueId
typed_derive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/_cookbook/mod.rs	/^pub mod typed_derive;$/;"	n
u128	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^impl ToValue for u128 {$/;"	c
u16	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for u16 {$/;"	c
u32	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for u32 {$/;"	c
u64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for u64 {$/;"	c
u8	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^impl ValueParserFactory for u8 {$/;"	c
uncolored_target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    uncolored_target: Option<WritableTarget>,$/;"	m	struct:BufferWriter
unknown_argument	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn unknown_argument($/;"	P	implementation:Error
unnecessary_double_dash	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn unnecessary_double_dash($/;"	P	implementation:Error
unrecognized_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn unrecognized_subcommand($/;"	P	implementation:Error
unrelated	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/features/suggestions.rs	/^    fn unrelated() {$/;"	f	module:test
unroll_arg_requires	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn unroll_arg_requires<F>(&self, func: F, arg: &Id) -> Vec<Id>$/;"	P	implementation:Command
unroll_args_in_group	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn unroll_args_in_group(&self, group: &Id) -> Vec<Id> {$/;"	P	implementation:Command
unset_global_setting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn unset_global_setting(mut self, setting: AppSettings) -> Self {$/;"	P	implementation:Command
unset_setting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) fn unset_setting<F>(mut self, setting: F) -> Self$/;"	P	implementation:Arg
unset_setting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    fn unset_setting() {$/;"	f	module:test
unset_setting	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn unset_setting<F>(mut self, setting: F) -> Self$/;"	P	implementation:Command
unset_setting_bitor	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg_settings.rs	/^    fn unset_setting_bitor() {$/;"	f	module:test
unsigned	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn unsigned() -> impl Iterator<Item = Value<'static>> {$/;"	f	module:tests
unwrap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/error.rs	/^    pub(crate) fn unwrap<T>(id: &str, r: Result<T, MatchesError>) -> T {$/;"	P	implementation:MatchesError
unwrap_downcast_into	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^fn unwrap_downcast_into<T: Any + Clone + Send + Sync + 'static>(value: AnyValue) -> T {$/;"	f
unwrap_downcast_ref	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^fn unwrap_downcast_ref<T: Any + Clone + Send + Sync + 'static>(value: &AnyValue) -> &T {$/;"	f
unwrap_string	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^fn unwrap_string(value: &AnyValue) -> &str {$/;"	f
update_from	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn update_from<I, T>(&mut self, itr: I)$/;"	P	interface:Parser
update_from_arg_matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn update_from_arg_matches(&mut self, matches: &ArgMatches) -> Result<(), Error> {$/;"	P	implementation:Box
update_from_arg_matches	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn update_from_arg_matches(&mut self, matches: &ArgMatches) -> Result<(), Error>;$/;"	P	interface:FromArgMatches
update_from_arg_matches_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn update_from_arg_matches_mut(&mut self, matches: &mut ArgMatches) -> Result<(), Error> {$/;"	P	implementation:Box
update_from_arg_matches_mut	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn update_from_arg_matches_mut(&mut self, matches: &mut ArgMatches) -> Result<(), Error> {$/;"	P	interface:FromArgMatches
usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    usage: &'cmd Usage<'cmd>,$/;"	m	struct:HelpTemplate
usage	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/mod.rs	/^mod usage;$/;"	n
usage_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    usage_name: Option<String>,$/;"	m	struct:Command
usage_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    usage_str: Option<StyledStr>,$/;"	m	struct:Command
use_long	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    use_long: bool,$/;"	m	struct:HelpTemplate
use_stderr	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn use_stderr(&self) -> bool {$/;"	P	implementation:Error
use_value_delimiter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn use_value_delimiter(mut self, yes: bool) -> Self {$/;"	P	implementation:Arg
usize	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/resettable.rs	/^impl IntoResettable<usize> for usize {$/;"	c
util	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/lib.rs	/^mod util;$/;"	n
v	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    v: &'a mut FlatMap<K, V>,$/;"	m	struct:OccupiedEntry
v	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    v: &'a mut FlatMap<K, V>,$/;"	m	struct:VacantEntry
v	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    v: Cell<usize>,$/;"	m	struct:AtomicUsize
val_delim	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) val_delim: Option<char>,$/;"	m	struct:Arg
val_names	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) val_names: Vec<Str>,$/;"	m	struct:Arg
valid_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub(crate) valid_args: Vec<Id>,$/;"	m	struct:ArgMatches
valid_subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub(crate) valid_subcommands: Vec<Str>,$/;"	m	struct:ArgMatches
validate	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    pub(crate) fn validate($/;"	P	implementation:Validator
validate_conflicts	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn validate_conflicts($/;"	P	implementation:Validator
validate_exclusive	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn validate_exclusive(&self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_required	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn validate_required(&mut self, matcher: &ArgMatcher, conflicts: &Conflicts) -> ClapResult<(/;"	P	implementation:Validator
validator	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/mod.rs	/^mod validator;$/;"	n
vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn vals(&self) -> Iter<Vec<AnyValue>> {$/;"	P	implementation:MatchedArg
vals	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    vals: Vec<Vec<AnyValue>>,$/;"	m	struct:MatchedArg
vals_flatten	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/matched_arg.rs	/^    pub(crate) fn vals_flatten(&self) -> Flatten<Iter<Vec<AnyValue>>> {$/;"	P	implementation:MatchedArg
value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^                pub(super) fn value() -> u8 {$/;"	f	module:tests::test_pub_in_module::module::test
value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/lib.rs	/^            pub fn value() -> u8 {$/;"	f	module:tests::test_pub_in_module::module
value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn value<T>(&self, value: T) -> StyledValue<T> {$/;"	P	implementation:Style
value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    value: T,$/;"	m	struct:StyledValue
value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/mod.rs	/^pub mod value;$/;"	n
value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            value: i32,$/;"	m	struct:tests::count::OnePair
value_delimiter	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn value_delimiter(mut self, d: impl IntoResettable<char>) -> Self {$/;"	P	implementation:Arg
value_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn value_hint(mut self, value_hint: impl IntoResettable<ValueHint>) -> Self {$/;"	P	implementation:Arg
value_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) value_hint: Option<ValueHint>,$/;"	m	struct:Arg
value_hint	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod value_hint;$/;"	n
value_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn value_name(mut self, name: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Arg
value_names	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn value_names(mut self, names: impl IntoIterator<Item = impl Into<Str>>) -> Self {$/;"	P	implementation:Arg
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn value_parser(mut self, parser: impl IntoResettable<super::ValueParser>) -> Self {$/;"	P	implementation:Arg
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub(crate) value_parser: Option<super::ValueParser>,$/;"	m	struct:Arg
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/mod.rs	/^mod value_parser;$/;"	n
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        fn value_parser(&self) -> Self::Output {$/;"	P	implementation:via_prelude::_AutoValueParser
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        fn value_parser(&self) -> Self::Output;$/;"	P	interface:via_prelude::_ValueParserViaValueEnum
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        fn value_parser(&self) -> Self::Parser {$/;"	P	implementation:via_prelude::_AutoValueParser
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        fn value_parser(&self) -> Self::Parser;$/;"	P	interface:via_prelude::_ValueParserViaFactory
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        fn value_parser(&self) -> _AnonymousValueParser {$/;"	f	module:via_prelude
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        fn value_parser(&self) -> _AnonymousValueParser;$/;"	P	interface:via_prelude::_ValueParserViaFromOsStr
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        fn value_parser(&self) -> _AnonymousValueParser;$/;"	P	interface:via_prelude::_ValueParserViaFromOsString
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        fn value_parser(&self) -> _AnonymousValueParser;$/;"	P	interface:via_prelude::_ValueParserViaFromStr
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        fn value_parser(&self) -> _AnonymousValueParser;$/;"	P	interface:via_prelude::_ValueParserViaFromString
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^        fn value_parser(&self) -> _AnonymousValueParser;$/;"	P	interface:via_prelude::_ValueParserViaParse
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:OsString
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:PathBuf
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:String
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:bool
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:i16
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:i32
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:i64
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:i8
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:u16
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:u32
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:u64
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser {$/;"	P	implementation:u8
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^    fn value_parser() -> Self::Parser;$/;"	P	interface:ValueParserFactory
value_parser	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^macro_rules! value_parser {$/;"	M
value_source	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    pub fn value_source(&self, id: &str) -> Option<ValueSource> {$/;"	P	implementation:ArgMatches
value_source	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/mod.rs	/^mod value_source;$/;"	n
value_terminator	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn value_terminator(mut self, term: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Arg
value_type_id	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/action.rs	/^    pub(crate) fn value_type_id(&self) -> Option<crate::parser::AnyValueId> {$/;"	P	implementation:ArgAction
value_validation	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn value_validation($/;"	P	implementation:Error
value_variants	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/derive.rs	/^    fn value_variants<'a>() -> &'a [Self];$/;"	P	interface:ValueEnum
value_variants	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/color.rs	/^    fn value_variants<'a>() -> &'a [Self] {$/;"	P	implementation:ColorChoice
values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    values: Vec<V>,$/;"	m	struct:FlatMap
values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    values: std::slice::Iter<'a, V>,$/;"	m	struct:Iter
values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/flat_map.rs	/^    values: std::slice::IterMut<'a, V>,$/;"	m	struct:IterMut
values_exact_size	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn values_exact_size() {$/;"	f	module:tests
verify_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn verify_arg(&self, _arg: &str) -> Result<(), MatchesError> {$/;"	P	implementation:ArgMatches
verify_arg_t	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/matches/arg_matches.rs	/^    fn verify_arg_t<T: Any + Send + Sync + 'static>($/;"	P	implementation:ArgMatches
verify_num_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn verify_num_args(&self, arg: &Arg, raw_vals: &[OsString]) -> ClapResult<()> {$/;"	P	implementation:Parser
version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn version(mut self, ver: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Command
version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    version: Option<Str>,$/;"	m	struct:Command
version_err	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/parser.rs	/^    fn version_err(&self, use_long: bool) -> ClapError {$/;"	P	implementation:Parser
via_prelude	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/value_parser.rs	/^pub mod via_prelude {$/;"	n
visible_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn visible_alias(mut self, name: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Arg
visible_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn visible_alias(mut self, name: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Command
visible_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn visible_aliases(mut self, names: impl IntoIterator<Item = impl Into<Str>>) -> Self {$/;"	P	implementation:Arg
visible_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn visible_aliases(mut self, names: impl IntoIterator<Item = impl Into<Str>>) -> Self {$/;"	P	implementation:Command
visible_long_flag_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn visible_long_flag_alias(mut self, name: impl IntoResettable<Str>) -> Self {$/;"	P	implementation:Command
visible_long_flag_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn visible_long_flag_aliases($/;"	P	implementation:Command
visible_short_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn visible_short_alias(mut self, name: impl IntoResettable<char>) -> Self {$/;"	P	implementation:Arg
visible_short_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/arg.rs	/^    pub fn visible_short_aliases(mut self, names: impl IntoIterator<Item = char>) -> Self {$/;"	P	implementation:Arg
visible_short_flag_alias	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn visible_short_flag_alias(mut self, name: impl IntoResettable<char>) -> Self {$/;"	P	implementation:Command
visible_short_flag_aliases	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn visible_short_flag_aliases(mut self, names: impl IntoIterator<Item = char>) -> Self {$/;"	P	implementation:Command
visit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error> {$/;"	P	implementation:tests::count::OnePair
visit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error> {$/;"	f	module:std_support
visit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error> {$/;"	f
visit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error>;$/;"	P	interface:Source
visit	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn visit(&self, visitor: impl Visit<'v>) -> Result<(), Error> {$/;"	P	implementation:Value
visit_any	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_any(&mut self, value: Value) -> Result<(), Error> {$/;"	P	implementation:tests::test_visit_borrowed_str::Extract
visit_any	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_any(&mut self, value: Value) -> Result<(), Error> {$/;"	P	implementation:tests::test_visit_integer::Extract
visit_any	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_any(&mut self, value: ValueBag) -> Result<(), value_bag::Error> {$/;"	f	method:Value::visit
visit_any	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_any(&mut self, value: Value) -> Result<(), Error> {$/;"	f
visit_any	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_any(&mut self, value: Value) -> Result<(), Error>;$/;"	P	interface:Visit
visit_bool	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_bool(&mut self, value: bool) -> Result<(), value_bag::Error> {$/;"	f	method:Value::visit
visit_bool	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_bool(&mut self, value: bool) -> Result<(), Error> {$/;"	P	interface:Visit
visit_bool	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_bool(&mut self, value: bool) -> Result<(), Error> {$/;"	f
visit_borrowed_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_borrowed_error($/;"	f	method:Value::visit
visit_borrowed_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_borrowed_error($/;"	P	interface:Visit
visit_borrowed_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_borrowed_error($/;"	f
visit_borrowed_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_borrowed_str(&mut self, value: &'v str) -> Result<(), Error> {$/;"	P	implementation:tests::test_visit_borrowed_str::Extract
visit_borrowed_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_borrowed_str(&mut self, value: &'v str) -> Result<(), value_bag::Error> {$/;"	f	method:Value::visit
visit_borrowed_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_borrowed_str(&mut self, value: &'v str) -> Result<(), Error> {$/;"	P	interface:Visit
visit_borrowed_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_borrowed_str(&mut self, value: &'v str) -> Result<(), Error> {$/;"	f
visit_bytes	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:Level::deserialize::LevelIdentifier
visit_bytes	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:LevelFilter::deserialize::LevelFilterIdentifier
visit_char	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_char(&mut self, value: char) -> Result<(), value_bag::Error> {$/;"	f	method:Value::visit
visit_char	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_char(&mut self, value: char) -> Result<(), Error> {$/;"	P	interface:Visit
visit_char	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_char(&mut self, value: char) -> Result<(), Error> {$/;"	f
visit_enum	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_enum<A>(self, value: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Level::deserialize::LevelEnum
visit_enum	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_enum<A>(self, value: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:LevelFilter::deserialize::LevelFilterEnum
visit_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_error($/;"	f	method:Value::visit
visit_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_error(&mut self, err: &(dyn std::error::Error + 'static)) -> Result<(), Error> {$/;"	P	interface:Visit
visit_error	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_error(&mut self, err: &(dyn std::error::Error + 'static)) -> Result<(), Error> {$/;"	f
visit_f64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_f64(&mut self, value: f64) -> Result<(), value_bag::Error> {$/;"	f	method:Value::visit
visit_f64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_f64(&mut self, value: f64) -> Result<(), Error> {$/;"	P	interface:Visit
visit_f64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_f64(&mut self, value: f64) -> Result<(), Error> {$/;"	f
visit_i128	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_i128(&mut self, value: i128) -> Result<(), value_bag::Error> {$/;"	f	method:Value::visit
visit_i128	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_i128(&mut self, value: i128) -> Result<(), Error> {$/;"	P	interface:Visit
visit_i128	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_i128(&mut self, value: i128) -> Result<(), Error> {$/;"	f
visit_i64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_i64(&mut self, value: i64) -> Result<(), value_bag::Error> {$/;"	f	method:Value::visit
visit_i64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_i64(&mut self, value: i64) -> Result<(), Error> {$/;"	P	interface:Visit
visit_i64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_i64(&mut self, value: i64) -> Result<(), Error> {$/;"	f
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^                fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error/;"	P	implementation:sval_support::stream::StreamVisitor
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^                fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error/;"	f	function:serde_support::serialize
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn visit_pair(&mut self, _: Key<'kvs>, _: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:count_default::Count
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:get_default::Get
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f	module:std_support
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:DebugList
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:DebugMap
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:DebugSet
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	P	implementation:DebugTuple
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error>;$/;"	P	interface:Visitor
visit_pair	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^            fn visit_pair($/;"	P	implementation:tests::test_record_key_values_builder::TestVisitor
visit_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-2.0.0-rc.3/src/external/serde_support.rs	/^            fn visit_str<E: Error>(self, flags: &str) -> Result<Self::Value, E> {$/;"	f	function:deserialize_bits_default
visit_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_str(&mut self, value: &str) -> Result<(), value_bag::Error> {$/;"	f	method:Value::visit
visit_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_str(&mut self, value: &str) -> Result<(), Error> {$/;"	P	interface:Visit
visit_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_str(&mut self, value: &str) -> Result<(), Error> {$/;"	f
visit_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:Level::deserialize::LevelIdentifier
visit_str	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:LevelFilter::deserialize::LevelFilterIdentifier
visit_u128	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_u128(&mut self, value: u128) -> Result<(), value_bag::Error> {$/;"	f	method:Value::visit
visit_u128	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_u128(&mut self, value: u128) -> Result<(), Error> {$/;"	P	interface:Visit
visit_u128	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_u128(&mut self, value: u128) -> Result<(), Error> {$/;"	f
visit_u64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_u64(&mut self, value: u64) -> Result<(), Error> {$/;"	P	implementation:tests::test_visit_integer::Extract
visit_u64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_u64(&mut self, value: u64) -> Result<(), value_bag::Error> {$/;"	f	method:Value::visit
visit_u64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_u64(&mut self, value: u64) -> Result<(), Error> {$/;"	P	interface:Visit
visit_u64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_u64(&mut self, value: u64) -> Result<(), Error> {$/;"	f
visit_u64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	P	implementation:Level::deserialize::LevelIdentifier
visit_u64	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	P	implementation:LevelFilter::deserialize::LevelFilterIdentifier
visitor_is_object_safe	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visitor_is_object_safe() {$/;"	f	module:tests
warn	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! warn {$/;"	M
warning	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn warning(&mut self, msg: impl Into<String>) {$/;"	P	implementation:StyledStr
will_args_wrap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn will_args_wrap(&self, args: &[&Arg], longest: usize) -> bool {$/;"	P	implementation:HelpTemplate
will_subcommands_wrap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn will_subcommands_wrap<'a>($/;"	P	implementation:HelpTemplate
with_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/parser/validator.rs	/^    fn with_args(cmd: &Command, matcher: &ArgMatcher) -> Self {$/;"	P	implementation:Conflicts
with_capacity	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/util/graph.rs	/^    pub(crate) fn with_capacity(s: usize) -> Self {$/;"	f
with_cmd	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub fn with_cmd(self, cmd: &Command) -> Self {$/;"	P	implementation:Error
with_content	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/fmt.rs	/^    pub(crate) fn with_content(mut self, content: StyledStr) -> Self {$/;"	P	implementation:Colorizer
word_separators	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^pub(crate) mod word_separators;$/;"	n
wrap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn wrap(&mut self, _hard_width: usize) {}$/;"	P	implementation:StyledStr
wrap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn wrap(&mut self, hard_width: usize) {$/;"	P	implementation:StyledStr
wrap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn wrap(content: &str, hard_width: usize) -> Vec<String> {$/;"	f	module:test
wrap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^pub(crate) fn wrap(content: &str, _hard_width: usize) -> String {$/;"	f
wrap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^pub(crate) fn wrap(content: &str, hard_width: usize) -> String {$/;"	f
wrap	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/wrap_algorithms.rs	/^    pub(crate) fn wrap<'w>(&mut self, mut words: Vec<&'w str>) -> Vec<&'w str> {$/;"	P	implementation:LineWrapper
wrap_algorithms	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^pub(crate) mod wrap_algorithms;$/;"	n
wrap_help_last_word	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn wrap_help_last_word() {$/;"	f	module:test
wrap_simple	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/textwrap/mod.rs	/^    fn wrap_simple() {$/;"	f	module:test
write	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^                    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:DefaultFormat::write_args::IndentWrapper
write	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Formatter
write	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write(fmt: DefaultFormat) -> String {$/;"	f	module:tests
write	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write(mut self, record: &Record) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
write	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub(in crate::fmt) fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Buffer
write	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/shim_impl.rs	/^    pub(in crate::fmt) fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Buffer
write_about	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn write_about(&mut self, before_new_line: bool, after_new_line: bool) {$/;"	P	implementation:HelpTemplate
write_after_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn write_after_help(&mut self) {$/;"	P	implementation:HelpTemplate
write_all_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    pub(crate) fn write_all_args(&mut self) {$/;"	P	implementation:HelpTemplate
write_arg	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn write_arg(&mut self, arg: &Arg, next_line_help: bool, longest: usize) {$/;"	P	implementation:HelpTemplate
write_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn write_args(&mut self, args: &[&Arg], _category: &str, sort_key: ArgSortKey) {$/;"	P	implementation:HelpTemplate
write_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/usage.rs	/^    pub(crate) fn write_args(&self, incls: &[Id], force_optional: bool, styled: &mut StyledStr) /;"	P	implementation:Usage
write_args	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_args(&mut self, record: &Record) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
write_author	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn write_author(&mut self, before_new_line: bool, after_new_line: bool) {$/;"	P	implementation:HelpTemplate
write_before_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn write_before_help(&mut self) {$/;"	P	implementation:HelpTemplate
write_bin_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn write_bin_name(&mut self) {$/;"	P	implementation:HelpTemplate
write_colored	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/styled_str.rs	/^    pub(crate) fn write_colored(&self, buffer: &mut termcolor::Buffer) -> std::io::Result<()> {$/;"	P	implementation:StyledStr
write_display_name	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn write_display_name(&mut self) {$/;"	P	implementation:HelpTemplate
write_dynamic_context	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/format.rs	/^fn write_dynamic_context(error: &crate::error::Error, styled: &mut StyledStr) -> bool {$/;"	f
write_fmt	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn write_fmt<F>(&self, f: F) -> fmt::Result$/;"	P	implementation:StyledValue
write_header_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_header_value<T>(&mut self, value: T) -> io::Result<()>$/;"	P	implementation:DefaultFormat
write_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn write_help<W: io::Write>(&mut self, w: &mut W) -> io::Result<()> {$/;"	P	implementation:Command
write_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help.rs	/^pub(crate) fn write_help(writer: &mut StyledStr, cmd: &Command, usage: &Usage<'_>, use_long: boo/;"	f
write_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    pub(crate) fn write_help(&mut self) {$/;"	P	implementation:AutoHelp
write_help_err	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn write_help_err(&self, mut use_long: bool) -> StyledStr {$/;"	P	implementation:Command
write_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_level(&mut self, record: &Record) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
write_long_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub fn write_long_help<W: io::Write>(&mut self, w: &mut W) -> io::Result<()> {$/;"	P	implementation:Command
write_module_path	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_module_path(&mut self, record: &Record) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
write_record	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_record(record: Record, fmt: DefaultFormat) -> String {$/;"	f	module:tests
write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub(crate) fn write_style(&self) -> WriteStyle {$/;"	P	implementation:Formatter
write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    write_style: WriteStyle,$/;"	m	struct:Formatter
write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    pub fn write_style(&self) -> WriteStyle {$/;"	P	implementation:Writer
write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    pub(crate) fn write_style(&mut self, write_style: WriteStyle) -> &mut Self {$/;"	P	implementation:Builder
write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    write_style: WriteStyle,$/;"	m	struct:Builder
write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    write_style: WriteStyle,$/;"	m	struct:Writer
write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn write_style(&mut self, write_style: fmt::WriteStyle) -> &mut Self {$/;"	P	implementation:Builder
write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn write_style<E>(mut self, write_style_env: E) -> Self$/;"	P	implementation:Env
write_style	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    write_style: Var<'a>,$/;"	m	struct:Env
write_style_or	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn write_style_or<E, V>(mut self, write_style_env: E, default: V) -> Self$/;"	P	implementation:Env
write_subcommand	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn write_subcommand($/;"	P	implementation:HelpTemplate
write_subcommands	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn write_subcommands(&mut self, cmd: &Command) {$/;"	P	implementation:HelpTemplate
write_target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_target(&mut self, record: &Record) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
write_target	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_target(target: &str, fmt: DefaultFormat) -> String {$/;"	f	module:tests
write_templated_help	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    pub(crate) fn write_templated_help(&mut self, template: &str) {$/;"	P	implementation:HelpTemplate
write_timestamp	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_timestamp(&mut self) -> io::Result<()> {$/;"	P	implementation:DefaultFormat
write_version	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    fn write_version(&mut self) {$/;"	P	implementation:HelpTemplate
write_version_err	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/builder/command.rs	/^    pub(crate) fn write_version_err(&self, use_long: bool) -> StyledStr {$/;"	P	implementation:Command
writer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/output/help_template.rs	/^    writer: &'writer mut StyledStr,$/;"	m	struct:HelpTemplate
writer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^pub(crate) mod writer;$/;"	n
writer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    writer: Writer,$/;"	m	struct:Logger
writer	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    writer: writer::Builder,$/;"	m	struct:Builder
written_header_value	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    written_header_value: bool,$/;"	m	struct:DefaultFormat
wrong_number_of_values	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-4.1.6/src/error/mod.rs	/^    pub(crate) fn wrong_number_of_values($/;"	P	implementation:Error
zero_level	/home/jcoombes/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn zero_level() {$/;"	f	module:tests
